{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"PreOr",
				"PreOrderUnRecursion	(BiTree_base_operator.c)"
			],
			[
				"Stack",
				"StackEmpty_Post	(SqStack.h)"
			],
			[
				"stack",
				"stacknode	(SqStack.h)"
			],
			[
				"SqS",
				"SqStack"
			],
			[
				"Sq",
				"SqStack_Post	(SqStack.h)"
			],
			[
				"Sta",
				"StackEmpty_Post"
			],
			[
				"StackI",
				"StackInit_Post	(SqStack.h)"
			],
			[
				"Max",
				"MaxSize"
			],
			[
				"stru",
				"struct"
			],
			[
				"inc",
				"include"
			],
			[
				"Pos",
				"PostOrderUnRecursion"
			],
			[
				"type",
				"typedef	(BiTree_base_operator.c)"
			],
			[
				"Dele",
				"DeleteRecursionSubtree"
			],
			[
				"p",
				"parent"
			],
			[
				"data",
				"datatype"
			],
			[
				"r",
				"rchild"
			],
			[
				"Bi",
				"BiTree"
			],
			[
				"typ",
				"typedef	(acenv.h)"
			],
			[
				"t",
				"t"
			],
			[
				"K",
				"KMP_strIndex"
			],
			[
				"fly",
				"fly_time_s"
			],
			[
				"new",
				"new_radio_frame"
			],
			[
				"tone",
				"tone_alarm	(tone_alarm.cpp)"
			],
			[
				"ToneAlarm_",
				"ToneAlarm_PX4	(AP_Notify.cpp)"
			],
			[
				"in",
				"include"
			],
			[
				"noti",
				"notify	(motors.cpp)"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"sig",
				"signals"
			],
			[
				"chan",
				"channel_throttle"
			],
			[
				"cha",
				"channel_roll"
			],
			[
				"count",
				"count_stop"
			],
			[
				"set_cn",
				"set_control_in"
			],
			[
				"print",
				"printf	printf …"
			],
			[
				"motor",
				"motors"
			],
			[
				"arm",
				"armed"
			],
			[
				"get_cn",
				"get_control_in"
			],
			[
				"get_con",
				"get_control_mid"
			],
			[
				"contra",
				"constrain_int16	(Attitude.cpp)"
			],
			[
				"thro",
				"throttle_temp"
			],
			[
				"ui",
				"uint16_t"
			],
			[
				"mill",
				"millis	(Attitude.cpp)"
			],
			[
				"contrain",
				"constrains	(AC_AttitudeControl.cpp)"
			],
			[
				"contu",
				"continue_2s"
			],
			[
				"channel_",
				"channel_throttle"
			],
			[
				"ch",
				"channel"
			],
			[
				"auto_",
				"auto_arm"
			],
			[
				"auto",
				"auto	(Copter.h)"
			],
			[
				"ten",
				"ten_hz_print"
			],
			[
				"prit",
				"printf	printf …"
			],
			[
				"uint",
				"uint32_t	(Copter.h)"
			],
			[
				"con",
				"console"
			],
			[
				"pilot",
				"pilots"
			],
			[
				"ig",
				"ignore_checks	(flight_mode.cpp)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ArduCopter/ArduCopter.cpp",
			"settings":
			{
				"buffer_size": 23557,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 140909 files for \"output_test\"\n\n/home/rutk1t0r/src/ardupilot/.tags:\n 10374  ATT_SENSORS_NOT_INITIALIZED	modules/PX4Firmware/src/modules/commander/commander_tests/state_machine_helper_test.cpp	98;\"	d	file:\n 10375  ATType	libraries/APM_Control/AP_AutoTune.h	/^    enum ATType {$/;\"	g	class:AP_AutoTune\n 10376: ATypeParamDeathTest	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_CASE_P(ATypeParamDeathTest);$/;\"	v\n 10377: ATypeParamDeathTest	modules/gtest/test/gtest_output_test_.cc	/^class ATypeParamDeathTest : public testing::Test {$/;\"	c	file:\n 10378: ATypedDeathTest	modules/gtest/test/gtest_output_test_.cc	/^class ATypedDeathTest : public testing::Test {$/;\"	c	file:\n 10379  AUDIOIOC_CONFIGURE	modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/audio/audio.h	107;\"	d\n 10380  AUDIOIOC_CONFIGURE	modules/PX4Firmware/Build/px4io-v2_default.build/nuttx-export/include/nuttx/audio/audio.h	107;\"	d\n .....\n 13084  AckError	modules/uavcan/libuavcan_drivers/lpc11c24/driver/src/c_can.hpp	/^    AckError    = 3,$/;\"	m	class:uavcan_lpc11c24::c_can::TestTx::StatLec\n 13085  Action	modules/PX4Firmware/src/modules/systemlib/state_table.h	/^	typedef void (StateTable::*Action)();$/;\"	t	class:StateTable\n 13086: AdHocTest	modules/gtest/test/gtest_output_test_.cc	/^void AdHocTest() {$/;\"	f\n 13087  AdapterMACAddress	Tools/ArduPPM/ATMega32U2/LUFA/Drivers/USB/Class/Device/RNDIS.h	/^					MAC_Address_t AdapterMACAddress; \\/**< MAC address of the adapter. *\\/$/;\"	m	struct:__anon1433::__anon1434\n 13088  AdapterSupportedOIDList	Tools/ArduPPM/ATMega32U2/LUFA/Drivers/USB/Class/Device/RNDIS.c	/^static const uint32_t PROGMEM AdapterSupportedOIDList[]  =$/;\"	v	file:\n .....\n 13093  AddBenchmark	modules/gbenchmark/src/benchmark.cc	/^size_t BenchmarkFamilies::AddBenchmark(BenchmarkImp* family) {$/;\"	f	class:benchmark::internal::BenchmarkFamilies\n 13094  AddEnvironment	modules/gtest/src/gtest.cc	/^Environment* UnitTest::AddEnvironment(Environment* env) {$/;\"	f	class:testing::UnitTest\n 13095: AddFailure	modules/gtest/test/gtest_output_test_.cc	/^  static void AddFailure(FailureMode failure) {$/;\"	f	class:ExpectFailureTest\n 13096  AddFailure	modules/gtest/test/gtest_unittest.cc	/^  static void AddFailure(FailureMode failure) {$/;\"	f	class:__anon824::ScopedFakeTestPartResultReporterTest\n 13097  AddFailureHelper	modules/gtest/test/gtest_unittest.cc	/^void AddFailureHelper(bool* aborted) {$/;\"	f	namespace:__anon826\n 13098: AddFailureInOtherThread	modules/gtest/test/gtest_output_test_.cc	/^  static void AddFailureInOtherThread(FailureMode failure) {$/;\"	f	class:ExpectFailureWithThreadsTest\n 13099  AddFailureInOtherThread	modules/gtest/test/gtest_unittest.cc	/^  static void AddFailureInOtherThread(FailureMode failure) {$/;\"	f	class:__anon824::ScopedFakeTestPartResultReporterWithThreadsTest\n 13100  AddFatalFailure	modules/gtest/test/gtest_unittest.cc	/^static void AddFatalFailure() {$/;\"	f	namespace:__anon824\n .....\n 16648  Balloon	libraries/SITL/SIM_Balloon.h	/^class Balloon : public Aircraft {$/;\"	c	namespace:SITL\n 16649  Bar	modules/gtest/test/gtest_unittest.cc	/^  int Bar() const { return 1; }$/;\"	f	class:__anon826::Foo	file:\n 16650: BarEnvironment	modules/gtest/test/gtest_output_test_.cc	/^class BarEnvironment : public testing::Environment {$/;\"	c	file:\n 16651  Bar_private	modules/waf/demos/qt4/foo.cpp	/^Bar_private::Bar_private() : QWidget(NULL) {$/;\"	f	class:Bar_private\n 16652  Bar_private	modules/waf/demos/qt4/foo.cpp	/^class Bar_private : public QWidget {$/;\"	c	file:\n .....\n 17861  CAN_FS1R_FSC_SHIFT	modules/PX4NuttX/nuttx/arch/arm/src/stm32/chip/stm32_can.h	467;\"	d\n 17862  CAN_FS1R_FSC_SHIFT	modules/PX4NuttX/nuttx/arch/arm/src/stm32/chip/stm32_can.h	470;\"	d\n 17863: CAN_GENERATE_GOLDEN_FILE	modules/gtest/test/gtest_output_test.py	/^CAN_GENERATE_GOLDEN_FILE = (SUPPORTS_DEATH_TESTS and$/;\"	v\n 17864  CAN_GSR_BS	modules/PX4NuttX/nuttx/arch/arm/src/lpc17xx/chip/lpc17_can.h	291;\"	d\n 17865  CAN_GSR_DOS	modules/PX4NuttX/nuttx/arch/arm/src/lpc17xx/chip/lpc17_can.h	285;\"	d\n .....\n 18748  CATAPULTLAUNCHMETHOD_H_	modules/PX4Firmware/src/lib/launchdetection/CatapultLaunchMethod.h	42;\"	d\n 18749  CATCH_EXCEPTIONS_ENV_VAR	modules/gtest/test/gtest_break_on_failure_unittest.py	/^CATCH_EXCEPTIONS_ENV_VAR = 'GTEST_CATCH_EXCEPTIONS'$/;\"	v\n 18750: CATCH_EXCEPTIONS_ENV_VAR_NAME	modules/gtest/test/gtest_output_test.py	/^CATCH_EXCEPTIONS_ENV_VAR_NAME = 'GTEST_CATCH_EXCEPTIONS'$/;\"	v\n 18751  CATEGORY_ARRAY	modules/uavcan/libuavcan/dsdl_compiler/pyuavcan/uavcan/dsdl/parser.py	/^    CATEGORY_ARRAY = 1$/;\"	v	class:Type\n 18752  CATEGORY_COMPOUND	modules/uavcan/libuavcan/dsdl_compiler/pyuavcan/uavcan/dsdl/parser.py	/^    CATEGORY_COMPOUND = 2$/;\"	v	class:Type\n .....\n 24400  COMMAND_DIRECTION_DATA_OUT	Tools/ArduPPM/ATMega32U2/LUFA/Drivers/USB/Class/Host/MassStorage.h	319;\"	d\n 24401  COMMAND_DISP_DATA	Tools/ArduPPM/ATMega32U2/Bootloaders/arduino-usbdfu/Arduino-usbdfu.h	142;\"	d\n 24402: COMMAND_LIST_TESTS	modules/gtest/test/gtest_output_test.py	/^COMMAND_LIST_TESTS = ({}, [PROGRAM_PATH, '--gtest_list_tests'])$/;\"	v\n 24403  COMMAND_MAY	APMrover2/defines.h	102;\"	d\n 24404  COMMAND_MAY	ArduPlane/defines.h	150;\"	d\n .....\n 24442  COMMAND_TYPE_UNITLESS	modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/modules/uavcan/dsdlc_generated/uavcan/equipment/actuator/Command.hpp	/^    static const typename ::uavcan::StorageType< typename ConstantTypes::COMMAND_TYPE_UNITLESS >::Type COMMAND_TYPE_UNITLESS; \\/\\/ 0$/;\"	m	struct:uavcan::equipment::actuator::Command_\n 24443  COMMAND_TYPE_UNITLESS	modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/modules/uavcan/dsdlc_generated/uavcan/equipment/actuator/Command.hpp	49;\"	d\n 24444: COMMAND_WITH_COLOR	modules/gtest/test/gtest_output_test.py	/^COMMAND_WITH_COLOR = ({}, [PROGRAM_PATH, '--gtest_color=yes'])$/;\"	v\n 24445: COMMAND_WITH_DISABLED	modules/gtest/test/gtest_output_test.py	/^COMMAND_WITH_DISABLED = ($/;\"	v\n 24446: COMMAND_WITH_SHARDING	modules/gtest/test/gtest_output_test.py	/^COMMAND_WITH_SHARDING = ($/;\"	v\n 24447: COMMAND_WITH_TIME	modules/gtest/test/gtest_output_test.py	/^COMMAND_WITH_TIME = ({}, [PROGRAM_PATH,$/;\"	v\n 24448  COMMAND_WRITE	Tools/ArduPPM/ATMega32U2/Bootloaders/arduino-usbdfu/Arduino-usbdfu.h	145;\"	d\n 24449  COMMENT	modules/PX4NuttX/misc/pascal/insn16/libinsn/pdasm.c	67;\"	d	file:\n .....\n 36338  CheckLink	modules/PX4NuttX/nuttx/tools/link.bat	/^:CheckLink$/;\"	l\n 36339  CheckPaths	modules/PX4NuttX/nuttx/tools/mkdeps.bat	/^:CheckPaths$/;\"	l\n 36340: CheckPoints	modules/gtest/test/gtest_output_test_.cc	/^struct CheckPoints {$/;\"	s	file:\n 36341  CheckSrc	modules/PX4NuttX/nuttx/tools/copydir.bat	/^:CheckSrc$/;\"	l\n 36342  CheckSrc	modules/PX4NuttX/nuttx/tools/link.bat	/^:CheckSrc$/;\"	l\n .....\n 45240  DeathTest	modules/gtest/src/gtest-death-test.cc	/^DeathTest::DeathTest() {$/;\"	f	class:testing::internal::DeathTest\n 45241  DeathTestAbort	modules/gtest/src/gtest-death-test.cc	/^void DeathTestAbort(const std::string& message) {$/;\"	f	namespace:testing::internal\n 45242: DeathTestAndMultiThreadsTest	modules/gtest/test/gtest_output_test_.cc	/^class DeathTestAndMultiThreadsTest : public testing::Test {$/;\"	c	file:\n 45243  DeathTestFactory	modules/gtest/include/gtest/internal/gtest-death-test-internal.h	/^class DeathTestFactory {$/;\"	c	namespace:testing::internal\n 45244  DeathTestImpl	modules/gtest/src/gtest-death-test.cc	/^  DeathTestImpl(const char* a_statement, const RE* a_regex)$/;\"	f	class:testing::internal::DeathTestImpl\n .....\n 45437  Default_Handler	modules/uavcan/libuavcan_drivers/lpc11c24/test_olimex_lpc_p11c24/src/sys/crt0.c	/^void WDT_IRQHandler(void) ALIAS(Default_Handler);$/;\"	v\n 45438  DefinitionLoop	modules/PX4NuttX/nuttx/tools/define.bat	/^:DefinitionLoop$/;\"	l\n 45439: Deinit	modules/gtest/test/gtest_output_test_.cc	/^  void Deinit() {$/;\"	f	class:FatalFailureInSetUpTest	file:\n 45440: Deinit	modules/gtest/test/gtest_output_test_.cc	/^  void Deinit() {$/;\"	f	class:NonFatalFailureInSetUpTest	file:\n 45441  Delete	modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/modules/uavcan/dsdlc_generated/uavcan/protocol/file/Delete.hpp	/^typedef Delete_ Delete;$/;\"	t	namespace:uavcan::protocol::file\n 45442  Delete	modules/gtest/src/gtest-internal-inl.h	/^static void Delete(T* x) {$/;\"	f	namespace:testing::internal\n .....\n 45534  DfTROneWrapper	modules/PX4Firmware/src/platforms/posix/drivers/df_trone_wrapper/df_trone_wrapper.cpp	/^class DfTROneWrapper : public TROne$/;\"	c	file:\n 45535  DieIf	modules/gtest/test/gtest-death-test_test.cc	/^void DieIf(bool should_die) {$/;\"	f\n 45536: DieIf	modules/gtest/test/gtest_output_test_.cc	/^void DieIf(bool should_die) {$/;\"	f\n 45537  DieIfLessThan	modules/gtest/test/gtest-death-test_test.cc	/^bool DieIfLessThan(int x, int y) {$/;\"	f\n 45538  DieInDebugElse12	modules/gtest/test/gtest-death-test_test.cc	/^int DieInDebugElse12(int* sideeffect) {$/;\"	f\n .....\n 56380  ExpectDeathTestHelper	modules/gtest/test/gtest-death-test_test.cc	/^void ExpectDeathTestHelper(bool* aborted) {$/;\"	f\n 56381  ExpectDebugDeathHelper	modules/gtest/test/gtest-death-test_test.cc	/^void ExpectDebugDeathHelper(bool* aborted) {$/;\"	f\n 56382: ExpectFailureTest	modules/gtest/test/gtest_output_test_.cc	/^class ExpectFailureTest : public testing::Test {$/;\"	c	file:\n 56383: ExpectFailureWithThreadsTest	modules/gtest/test/gtest_output_test_.cc	/^class ExpectFailureWithThreadsTest : public ExpectFailureTest {$/;\"	c	file:\n 56384  ExpectFailureWithThreadsTest	modules/gtest/test/gtest_unittest.cc	/^    ExpectFailureWithThreadsTest;$/;\"	t	namespace:__anon824	file:\n 56385  ExpectFatalFailureTest	modules/gtest/test/gtest_unittest.cc	/^typedef ScopedFakeTestPartResultReporterTest ExpectFatalFailureTest;$/;\"	t	namespace:__anon824	file:\n .....\n 56496  FAT32_DEFAULT_ROOT_CLUSTER	modules/PX4NuttX/nuttx/fs/fat/fs_mkfatfs.h	65;\"	d\n 56497  FATAL_FAILURE	modules/gtest/test/gtest_environment_test.cc	/^  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE$/;\"	e	enum:__anon823::FailureType	file:\n 56498: FATAL_FAILURE	modules/gtest/test/gtest_output_test_.cc	/^    FATAL_FAILURE,$/;\"	e	enum:ExpectFailureTest::FailureMode	file:\n 56499  FATAL_FAILURE	modules/gtest/test/gtest_unittest.cc	/^    FATAL_FAILURE,$/;\"	e	enum:__anon824::ScopedFakeTestPartResultReporterTest::FailureMode	file:\n 56500  FATATTR_ARCHIVE	modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/fs/fat.h	57;\"	d\n .....\n 60065  Failed	modules/gtest/src/gtest.cc	/^bool UnitTest::Failed() const { return impl()->Failed(); }$/;\"	f	class:testing::UnitTest\n 60066  FailedTest	modules/gtest/test/gtest_xml_output_unittest_.cc	/^class FailedTest : public Test {$/;\"	c	file:\n 60067: FailingParamTest	modules/gtest/test/gtest_output_test_.cc	/^class FailingParamTest : public testing::TestWithParam<int> {};$/;\"	c	file:\n 60068  FailingThread	modules/gtest/test/gtest_stress_test.cc	/^void FailingThread(bool is_fatal) {$/;\"	f	namespace:testing::__anon828\n 60069  Fails	modules/gtest/test/gtest_unittest.cc	/^  void Fails() {$/;\"	f	class:__anon824::NoFatalFailureTest\n 60070  FailsNonFatal	modules/gtest/test/gtest_unittest.cc	/^  void FailsNonFatal() {$/;\"	f	class:__anon824::NoFatalFailureTest\n 60071: FailureMode	modules/gtest/test/gtest_output_test_.cc	/^  enum FailureMode {$/;\"	g	class:ExpectFailureTest	file:\n 60072  FailureMode	modules/gtest/test/gtest_unittest.cc	/^  enum FailureMode {$/;\"	g	class:__anon824::ScopedFakeTestPartResultReporterTest	file:\n 60073  FailureType	modules/gtest/test/gtest_environment_test.cc	/^enum FailureType {$/;\"	g	namespace:__anon823	file:\n .....\n 60083  FastRpcControlMsg	modules/PX4Firmware/src/modules/muorb/adsp/uORBFastRpcChannel.hpp	/^	struct FastRpcControlMsg {$/;\"	s	class:uORB::FastRpcChannel\n 60084  FastRpcDataMsg	modules/PX4Firmware/src/modules/muorb/adsp/uORBFastRpcChannel.hpp	/^	struct FastRpcDataMsg {$/;\"	s	class:uORB::FastRpcChannel\n 60085: FatalFailure	modules/gtest/test/gtest_output_test_.cc	/^void FatalFailure() {$/;\"	f\n 60086: FatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^  FatalFailureInFixtureConstructorTest() {$/;\"	f	class:FatalFailureInFixtureConstructorTest\n 60087: FatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^class FatalFailureInFixtureConstructorTest : public testing::Test {$/;\"	c	file:\n 60088: FatalFailureInSetUpTest	modules/gtest/test/gtest_output_test_.cc	/^class FatalFailureInSetUpTest : public testing::Test {$/;\"	c	file:\n 60089  FeatureUnitStrIndex	Tools/ArduPPM/ATMega32U2/LUFA/Drivers/USB/Class/Common/Audio.h	/^			uint8_t                   FeatureUnitStrIndex; \\/**< Index of a string descriptor describing this descriptor within the device. *\\/$/;\"	m	struct:__anon1393\n 60090  Field	mk/PX4/Tools/genmsg/src/genmsg/msgs.py	/^class Field(object):$/;\"	c\n .....\n 60386  Foo	modules/waf/playground/swig/extend/java/Foo.java	/^	public Foo() {$/;\"	m	class:Foo\n 60387  Foo	modules/waf/playground/swig/extend/java/Foo.java	/^class Foo {$/;\"	c\n 60388: FooEnvironment	modules/gtest/test/gtest_output_test_.cc	/^class FooEnvironment : public testing::Environment {$/;\"	c	file:\n 60389  FooP	modules/waf/playground/slow_qt/foo.cpp	/^FooP::FooP() {$/;\"	f	class:FooP\n 60390  FooP	modules/waf/playground/slow_qt/foo.cpp	/^class FooP : public QWidget {$/;\"	c	file:\n .....\n 60832  GENERATE_TARGETS	mk/board_qflight.mk	/^GENERATE_TARGETS = $(GENERATE_DSP_C) $(GENERATE_ARM_C) $(QFLIGHT_BUILD)\\/qflight_dsp.h$/;\"	m\n 60833  GENERATE_TARGETS	mk/board_qurt.mk	/^GENERATE_TARGETS = $(HAL_QURT_BUILD)\\/qurt_dsp.h $(GENERATE_DSP_C) $(GENERATE_ARM_C)$/;\"	m\n 60834: GENGOLDEN_FLAG	modules/gtest/test/gtest_output_test.py	/^GENGOLDEN_FLAG = '--gengolden'$/;\"	v\n 60835  GENROMFS	modules/PX4Firmware/makefiles/setup.mk	/^export GENROMFS		 = genromfs$/;\"	m\n 60836  GENROMFS_BUILD	modules/PX4NuttX/misc/buildroot/toolchain/genromfs/genromfs.mk	/^GENROMFS_BUILD:=$(TOOL_BUILD_DIR)\\/genromfs-$(GENROMFS_VERSION)$/;\"	m\n .....\n 61230  GOBJECTN	ArduPlane/Parameters.cpp	14;\"	d	file:\n 61231  GOBJECTN	Tools/Replay/Replay.cpp	45;\"	d	file:\n 61232: GOLDEN_NAME	modules/gtest/test/gtest_output_test.py	/^GOLDEN_NAME = 'gtest_output_test_golden_lin.txt'$/;\"	v\n 61233: GOLDEN_PATH	modules/gtest/test/gtest_output_test.py	/^GOLDEN_PATH = os.path.join(gtest_test_utils.GetSourceDir(), GOLDEN_NAME)$/;\"	v\n 61234  GOOD_SIGNO	modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/signal.h	59;\"	d\n 61235  GOOD_SIGNO	modules/PX4Firmware/Build/px4io-v2_default.build/nuttx-export/include/signal.h	59;\"	d\n .....\n 85183  GTEST_IMPLEMENTATION_	modules/gtest/test/gtest_environment_test.cc	38;\"	d	file:\n 85184  GTEST_IMPLEMENTATION_	modules/gtest/test/gtest_environment_test.cc	40;\"	d	file:\n 85185: GTEST_IMPLEMENTATION_	modules/gtest/test/gtest_output_test_.cc	46;\"	d	file:\n 85186: GTEST_IMPLEMENTATION_	modules/gtest/test/gtest_output_test_.cc	48;\"	d	file:\n 85187  GTEST_IMPLEMENTATION_	modules/gtest/test/gtest_repeat_test.cc	43;\"	d	file:\n 85188  GTEST_IMPLEMENTATION_	modules/gtest/test/gtest_repeat_test.cc	45;\"	d	file:\n .....\n 86373  GTestMutexLock	modules/gtest/include/gtest/internal/gtest-port.h	/^  explicit GTestMutexLock(MutexBase* mutex)$/;\"	f	class:testing::internal::GTestMutexLock\n 86374  GTestMutexLock	modules/gtest/include/gtest/internal/gtest-port.h	/^class GTestMutexLock {$/;\"	c	namespace:testing::internal\n 86375: GTestOutputTest	modules/gtest/test/gtest_output_test.py	/^class GTestOutputTest(gtest_test_utils.TestCase):$/;\"	c\n 86376  GTestShouldProcessSEH	modules/gtest/src/gtest.cc	/^int UnitTestOptions::GTestShouldProcessSEH(DWORD exception_code) {$/;\"	f	class:testing::internal::UnitTestOptions\n 86377  GTestShuffleUnitTest	modules/gtest/test/gtest_shuffle_test.py	/^class GTestShuffleUnitTest(gtest_test_utils.TestCase):$/;\"	c\n .....\n 86519  GetCharPtrValue	modules/gtest/xcode/Samples/FrameworkSample/widget.cc	/^void Widget::GetCharPtrValue(char* buffer, size_t max_size) const {$/;\"	f	class:Widget\n 86520  GetColorAttribute	modules/gtest/src/gtest.cc	/^WORD GetColorAttribute(GTestColor color) {$/;\"	f	namespace:testing::internal\n 86521: GetCommandOutput	modules/gtest/test/gtest_output_test.py	/^def GetCommandOutput(env_cmd):$/;\"	f\n 86522  GetCompilationInfoForFile	modules/PX4Firmware/.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;\"	f\n 86523  GetCompilationInfoForFile	modules/gbenchmark/.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;\"	f\n .....\n 86618  GetOutputCodes	modules/PX4Firmware/Tools/px4airframes/srcparser.py	/^    def GetOutputCodes(self):$/;\"	m	class:Parameter\n 86619  GetOutputFormat	modules/gtest/src/gtest.cc	/^std::string UnitTestOptions::GetOutputFormat() {$/;\"	f	class:testing::internal::UnitTestOptions\n 86620: GetOutputOfAllCommands	modules/gtest/test/gtest_output_test.py	/^def GetOutputOfAllCommands():$/;\"	f\n 86621  GetOutputValue	modules/PX4Firmware/Tools/px4airframes/srcparser.py	/^    def GetOutputValue(self, code):$/;\"	m	class:Parameter\n 86622  GetPage	libraries/DataFlash/DataFlash_Block.cpp	/^uint16_t DataFlash_Block::GetPage()$/;\"	f	class:DataFlash_Block\n .....\n 86644  GetSetCallback	modules/uavcan/libuavcan/include/uavcan/protocol/param_server.hpp	/^                                                             protocol::param::GetSet::Response&)> GetSetCallback;$/;\"	t	class:uavcan::ParamServer\n 86645  GetSet_	modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/modules/uavcan/dsdlc_generated/uavcan/protocol/param/GetSet.hpp	/^struct UAVCAN_EXPORT GetSet_$/;\"	s	namespace:uavcan::protocol::param\n 86646: GetShellCommandOutput	modules/gtest/test/gtest_output_test.py	/^def GetShellCommandOutput(env_cmd):$/;\"	f\n 86647  GetSortedTestCases	modules/gtest/test/gtest-unittest-api_test.cc	/^  static TestCase const** const GetSortedTestCases() {$/;\"	f	class:testing::internal::UnitTestHelper\n 86648  GetSortedTests	modules/gtest/test/gtest-unittest-api_test.cc	/^  static TestInfo const** const GetSortedTests(const TestCase* test_case) {$/;\"	f	class:testing::internal::UnitTestHelper\n .....\n 96115  Init	modules/gtest/src/gtest-port.cc	/^void RE::Init(const char* regex) {$/;\"	f	class:testing::internal::RE\n 96116  Init	modules/gtest/src/gtest.cc	/^void ScopedFakeTestPartResultReporter::Init() {$/;\"	f	class:testing::ScopedFakeTestPartResultReporter\n 96117: Init	modules/gtest/test/gtest_output_test_.cc	/^  void Init() {$/;\"	f	class:FatalFailureInFixtureConstructorTest	file:\n 96118  InitControlGUI	modules/PX4Firmware/Tools/sdlog2/logconv.m	/^function InitControlGUI()$/;\"	f\n 96119  InitDeathTestSubprocessControlInfo	modules/gtest/src/gtest-internal-inl.h	/^  void InitDeathTestSubprocessControlInfo() {$/;\"	f	class:testing::internal::UnitTestImpl\n .....\n 140687  Mission_Command	libraries/AP_Mission/AP_Mission.h	/^    struct Mission_Command {$/;\"	s	class:AP_Mission\n 140688  Mission_Flags	libraries/AP_Mission/AP_Mission.h	/^    struct Mission_Flags {$/;\"	s	class:AP_Mission\n 140689: MixedUpTestCaseTest	modules/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseTest : public testing::Test {$/;\"	c	namespace:bar	file:\n 140690: MixedUpTestCaseTest	modules/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseTest : public testing::Test {$/;\"	c	namespace:foo	file:\n 140691: MixedUpTestCaseWithSameTestNameTest	modules/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseWithSameTestNameTest : public testing::Test {$/;\"	c	namespace:bar	file:\n 140692: MixedUpTestCaseWithSameTestNameTest	modules/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseWithSameTestNameTest : public testing::Test {$/;\"	c	namespace:foo	file:\n 140693  Mixer	modules/PX4Firmware/src/modules/systemlib/mixer/mixer.cpp	/^Mixer::Mixer(ControlCallback control_cb, uintptr_t cb_handle) :$/;\"	f	class:Mixer\n 140694  Mixer	modules/PX4Firmware/src/modules/systemlib/mixer/mixer.h	/^class __EXPORT Mixer$/;\"	c\n .....\n 141620  NONE_BLOCKING	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan_drivers/lpc11c24/test_olimex_lpc_p11c24/lpc_chip_11cxx_lib/inc/lpc_types.h	/^	NONE_BLOCKING = 0,		\\/**< None Blocking type *\\/$/;\"	e	enum:__anon687\n 141621  NONE_BLOCKING	modules/uavcan/libuavcan_drivers/lpc11c24/test_olimex_lpc_p11c24/lpc_chip_11cxx_lib/inc/lpc_types.h	/^	NONE_BLOCKING = 0,		\\/**< None Blocking type *\\/$/;\"	e	enum:__anon1163\n 141622: NONFATAL_FAILURE	modules/gtest/test/gtest_output_test_.cc	/^    NONFATAL_FAILURE$/;\"	e	enum:ExpectFailureTest::FailureMode	file:\n 141623  NONFATAL_FAILURE	modules/gtest/test/gtest_unittest.cc	/^    NONFATAL_FAILURE$/;\"	e	enum:__anon824::ScopedFakeTestPartResultReporterTest::FailureMode	file:\n 141624  NON_FATAL_FAILURE	modules/gtest/test/gtest_environment_test.cc	/^  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE$/;\"	e	enum:__anon823::FailureType	file:\n .....\n 154616  NonDefaultConstructible	modules/uavcan/libuavcan/test/util/templates.cpp	/^    NonDefaultConstructible(int) { }$/;\"	f	struct:NonDefaultConstructible\n 154617  NonDefaultConstructible	modules/uavcan/libuavcan/test/util/templates.cpp	/^struct NonDefaultConstructible$/;\"	s	file:\n 154618: NonFatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^  NonFatalFailureInFixtureConstructorTest() {$/;\"	f	class:NonFatalFailureInFixtureConstructorTest\n 154619: NonFatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^class NonFatalFailureInFixtureConstructorTest : public testing::Test {$/;\"	c	file:\n 154620: NonFatalFailureInSetUpTest	modules/gtest/test/gtest_output_test_.cc	/^class NonFatalFailureInSetUpTest : public testing::Test {$/;\"	c	file:\n 154621  NonMaskableInt_IRQn	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan_drivers/lpc11c24/test_olimex_lpc_p11c24/lpc_chip_11cxx_lib/inc/cmsis_11cxx.h	/^	NonMaskableInt_IRQn           = -14,	\\/*!< 2 Non Maskable Interrupt                           *\\/$/;\"	e	enum:LPC11CXX_IRQn\n 154622  NonMaskableInt_IRQn	modules/uavcan/libuavcan_drivers/lpc11c24/test_olimex_lpc_p11c24/lpc_chip_11cxx_lib/inc/cmsis_11cxx.h	/^	NonMaskableInt_IRQn           = -14,	\\/*!< 2 Non Maskable Interrupt                           *\\/$/;\"	e	enum:LPC11CXX_IRQn\n .....\n 154643  NormalMode	modules/uavcan/libuavcan_drivers/stm32/driver/include/uavcan_stm32/can.hpp	/^        NormalMode,$/;\"	e	enum:uavcan_stm32::CanIface::OperatingMode\n 154644  Normalize	modules/gtest/src/gtest-filepath.cc	/^void FilePath::Normalize() {$/;\"	f	class:testing::internal::FilePath\n 154645: NormalizeOutput	modules/gtest/test/gtest_output_test.py	/^def NormalizeOutput(output):$/;\"	f\n 154646: NormalizeToCurrentPlatform	modules/gtest/test/gtest_output_test.py	/^def NormalizeToCurrentPlatform(test_output):$/;\"	f\n 154647  NormalizeXml	modules/gtest/test/gtest_xml_test_utils.py	/^  def NormalizeXml(self, element):$/;\"	m	class:GTestXMLTestCase\n 154648  NotApplicable	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan/include/uavcan/util/comparison.hpp	/^struct NotApplicable { long long foo[16]; };$/;\"	s	namespace:uavcan::are_close_impl_\n .....\n 154760  NumericTypes	modules/gtest/test/gtest-typed-test_test.cc	/^typedef Types<int, double> NumericTypes;$/;\"	t	namespace:library2	file:\n 154761  NumericTypes	modules/gtest/test/gtest-typed-test_test.cc	/^typedef Types<int, long> NumericTypes;$/;\"	t	namespace:library1	file:\n 154762: NumericTypes	modules/gtest/test/gtest_output_test_.cc	/^typedef testing::Types<int, double> NumericTypes;$/;\"	t	file:\n 154763  NumericTypes	modules/gtest/test/gtest_unittest.cc	/^typedef testing::Types<int, double> NumericTypes;$/;\"	t	namespace:__anon824	file:\n 154764  NumericValue	modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/modules/uavcan/dsdlc_generated/uavcan/protocol/param/NumericValue.hpp	/^typedef NumericValue_<0> NumericValue;$/;\"	t	namespace:uavcan::protocol::param\n .....\n 168194  PROGRAM_OBJS	modules/waf/docs/slides/presentation/snippets/make-2/Makefile	/^PROGRAM_OBJS = prog.o$/;\"	m\n 168195  PROGRAM_PATH	modules/gtest/test/gtest_help_test.py	/^PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_help_test_')$/;\"	v\n 168196: PROGRAM_PATH	modules/gtest/test/gtest_output_test.py	/^PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_output_test_')$/;\"	v\n 168197  PROGRESS_INT_SCALING	modules/PX4Firmware/src/modules/systemlib/pwm_limit/pwm_limit.c	49;\"	d	file:\n 168198  PROG_MULTI	modules/PX4Firmware/Tools/px_uploader.py	/^        PROG_MULTI      = b'\\\\x27'$/;\"	v	class:uploader\n .....\n 184547  RemoveFileName	modules/gtest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveFileName() const {$/;\"	f	class:testing::internal::FilePath\n 184548  RemoveInvalidXmlCharacters	modules/gtest/src/gtest.cc	/^std::string XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters($/;\"	f	class:testing::internal::XmlUnitTestResultPrinter\n 184549: RemoveLocations	modules/gtest/test/gtest_output_test.py	/^def RemoveLocations(test_output):$/;\"	f\n 184550: RemoveMatchingTests	modules/gtest/test/gtest_output_test.py	/^def RemoveMatchingTests(test_output, pattern):$/;\"	f\n 184551  RemoveOne	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan/include/uavcan/util/multiset.hpp	/^    enum RemoveStrategy { RemoveOne, RemoveAll };$/;\"	e	enum:uavcan::Multiset::RemoveStrategy\n 184552  RemoveOne	modules/uavcan/libuavcan/include/uavcan/util/multiset.hpp	/^    enum RemoveStrategy { RemoveOne, RemoveAll };$/;\"	e	enum:uavcan::Multiset::RemoveStrategy\n .....\n 184560  RemoveReference	modules/uavcan/libuavcan/include/uavcan/util/templates.hpp	/^template <typename T> struct RemoveReference<T&>  { typedef T Type; };$/;\"	s	namespace:uavcan\n 184561  RemoveRemoteSubscriber	modules/PX4Firmware/src/modules/muorb/adsp/uORBFastRpcChannel.hpp	/^	void RemoveRemoteSubscriber(const std::string &messageName)$/;\"	f	class:uORB::FastRpcChannel\n 184562: RemoveStackTraceDetails	modules/gtest/test/gtest_output_test.py	/^def RemoveStackTraceDetails(output):$/;\"	f\n 184563: RemoveStackTraces	modules/gtest/test/gtest_output_test.py	/^def RemoveStackTraces(output):$/;\"	f\n 184564  RemoveStrategy	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan/include/uavcan/util/multiset.hpp	/^    enum RemoveStrategy { RemoveOne, RemoveAll };$/;\"	g	class:uavcan::Multiset\n 184565  RemoveStrategy	modules/uavcan/libuavcan/include/uavcan/util/multiset.hpp	/^    enum RemoveStrategy { RemoveOne, RemoveAll };$/;\"	g	class:uavcan::Multiset\n 184566  RemoveSubscriber	modules/PX4Firmware/src/modules/muorb/krait/px4muorb_KraitRpcWrapper.cpp	/^int32_t px4muorb::KraitRpcWrapper::RemoveSubscriber(const char *topic)$/;\"	f	class:px4muorb::KraitRpcWrapper\n 184567: RemoveTestCounts	modules/gtest/test/gtest_output_test.py	/^def RemoveTestCounts(output):$/;\"	f\n 184568: RemoveTime	modules/gtest/test/gtest_output_test.py	/^def RemoveTime(output):$/;\"	f\n 184569  RemoveTrailingPathSeparator	modules/gtest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveTrailingPathSeparator() const {$/;\"	f	class:testing::internal::FilePath\n 184570: RemoveTypeInfoDetails	modules/gtest/test/gtest_output_test.py	/^def RemoveTypeInfoDetails(test_output):$/;\"	f\n 184571: RemoveUnsupportedTests	modules/gtest/test/gtest_output_test.py	/^  def RemoveUnsupportedTests(self, test_output):$/;\"	m	class:GTestOutputTest\n 184572  Renderer	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan/dsdl_compiler/libuavcan_dsdl_compiler/pyratemp.py	/^class Renderer(object):$/;\"	c\n 184573  Renderer	modules/uavcan/libuavcan/dsdl_compiler/libuavcan_dsdl_compiler/pyratemp.py	/^class Renderer(object):$/;\"	c\n .....\n 184932  RunAllTests	modules/gtest/src/gtest.cc	/^bool UnitTestImpl::RunAllTests() {$/;\"	f	class:testing::internal::UnitTestImpl\n 184933  RunAllTests	modules/gtest/test/gtest_environment_test.cc	/^int RunAllTests(MyEnvironment* env, FailureType failure) {$/;\"	f	namespace:__anon823\n 184934: RunAllTests	modules/gtest/test/gtest_output_test_.cc	/^int RunAllTests() {$/;\"	f\n 184935  RunAndExtractTestList	modules/gtest/test/gtest_filter_unittest.py	/^def RunAndExtractTestList(args = None):$/;\"	f\n 184936  RunAndReturnOutput	modules/gtest/test/gtest_filter_unittest.py	/^def RunAndReturnOutput(args = None):$/;\"	f\n .....\n 231124  SUPPORTS_DEATH_TESTS	modules/gtest/test/gtest_filter_unittest.py	/^SUPPORTS_DEATH_TESTS = 'HasDeathTest' in gtest_test_utils.Subprocess($/;\"	v\n 231125  SUPPORTS_DEATH_TESTS	modules/gtest/test/gtest_help_test.py	/^SUPPORTS_DEATH_TESTS = \"DeathTest\" in gtest_test_utils.Subprocess($/;\"	v\n 231126: SUPPORTS_DEATH_TESTS	modules/gtest/test/gtest_output_test.py	/^SUPPORTS_DEATH_TESTS = 'DeathTest' in test_list$/;\"	v\n 231127  SUPPORTS_SEH_EXCEPTIONS	modules/gtest/test/gtest_catch_exceptions_test.py	/^SUPPORTS_SEH_EXCEPTIONS = 'ThrowsSehException' in TEST_LIST$/;\"	v\n 231128: SUPPORTS_STACK_TRACES	modules/gtest/test/gtest_output_test.py	/^SUPPORTS_STACK_TRACES = False$/;\"	v\n 231129  SUPPORTS_STACK_TRACES	modules/gtest/test/gtest_xml_output_unittest.py	/^SUPPORTS_STACK_TRACES = False$/;\"	v\n 231130: SUPPORTS_THREADS	modules/gtest/test/gtest_output_test.py	/^SUPPORTS_THREADS = 'ExpectFailureWithThreadsTest' in test_list$/;\"	v\n 231131: SUPPORTS_TYPED_TESTS	modules/gtest/test/gtest_output_test.py	/^SUPPORTS_TYPED_TESTS = 'TypedTest' in test_list$/;\"	v\n 231132  SUPPORTS_TYPED_TESTS	modules/gtest/test/gtest_xml_output_unittest.py	/^SUPPORTS_TYPED_TESTS = 'TypedTest' in gtest_test_utils.Subprocess($/;\"	v\n 231133  SUPR_CR_KEY	modules/PX4NuttX/nuttx/arch/arm/src/sam34/chip/sam3u_supc.h	78;\"	d\n .....\n 234964  ScopedFakeTestPartResultReporter	modules/gtest/include/gtest/gtest-spi.h	/^class GTEST_API_ ScopedFakeTestPartResultReporter$/;\"	c	namespace:testing\n 234965  ScopedFakeTestPartResultReporter	modules/gtest/src/gtest.cc	/^ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter($/;\"	f	class:testing::ScopedFakeTestPartResultReporter\n 234966: ScopedFakeTestPartResultReporterTest	modules/gtest/test/gtest_output_test_.cc	/^typedef ExpectFailureWithThreadsTest ScopedFakeTestPartResultReporterTest;$/;\"	t	file:\n 234967  ScopedFakeTestPartResultReporterTest	modules/gtest/test/gtest_unittest.cc	/^class ScopedFakeTestPartResultReporterTest : public Test {$/;\"	c	namespace:__anon824	file:\n 234968  ScopedFakeTestPartResultReporterWithThreadsTest	modules/gtest/test/gtest_unittest.cc	/^class ScopedFakeTestPartResultReporterWithThreadsTest$/;\"	c	namespace:__anon824	file:\n .....\n 235233  SetUp	modules/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:CxxExceptionInSetUpTestCaseTest\n 235234  SetUp	modules/gtest/test/gtest_environment_test.cc	/^  virtual void SetUp() {$/;\"	f	class:__anon823::MyEnvironment\n 235235: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:BarEnvironment\n 235236: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:DeathTestAndMultiThreadsTest\n 235237: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:FatalFailureInFixtureConstructorTest\n 235238: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:FatalFailureInSetUpTest\n 235239: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:FooEnvironment\n 235240: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:NonFatalFailureInFixtureConstructorTest\n 235241: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:NonFatalFailureInSetUpTest\n 235242  SetUp	modules/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;\"	f	class:Predicate1Test\n 235243  SetUp	modules/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;\"	f	class:Predicate2Test\n .....\n 235448  SourceScanner	modules/PX4Firmware/Tools/px4params/srcscanner.py	/^class SourceScanner(object):$/;\"	c\n 235449  SpamMethods	modules/waf/demos/python/spammodule.c	/^static PyMethodDef SpamMethods[] = {$/;\"	v	file:\n 235450: SpawnThreadNotifications	modules/gtest/test/gtest_output_test_.cc	/^  SpawnThreadNotifications() {}$/;\"	f	struct:SpawnThreadNotifications\n 235451: SpawnThreadNotifications	modules/gtest/test/gtest_output_test_.cc	/^struct SpawnThreadNotifications {$/;\"	s	file:\n 235452  SpdHgt_Controller	ArduPlane/Plane.h	/^    AP_SpdHgtControl *SpdHgt_Controller = &TECS_controller;$/;\"	m	class:Plane\n 235453  Speed	libraries/AP_HAL/Device.h	/^    enum Speed {$/;\"	g	class:AP_HAL::Device\n .....\n 235739  SubNodePtr	modules/uavcan/libuavcan_drivers/linux/include/uavcan_linux/helpers.hpp	/^typedef std::shared_ptr<SubNode> SubNodePtr;$/;\"	t	namespace:uavcan_linux\n 235740  SubString	modules/gtest/scripts/pump.py	/^def SubString(lines, start, end):$/;\"	f\n 235741: SubWithTrace	modules/gtest/test/gtest_output_test_.cc	/^void SubWithTrace(int n) {$/;\"	f\n 235742: SubWithoutTrace	modules/gtest/test/gtest_output_test_.cc	/^void SubWithoutTrace(int n) {$/;\"	f\n 235743  Subprocess	modules/gtest/test/gtest_test_utils.py	/^class Subprocess:$/;\"	c\n 235744  Subroutine	modules/gtest/test/gtest_sole_header_test.cc	/^void Subroutine() {$/;\"	f	namespace:__anon832\n .....\n 237972  TEST	modules/gtest/test/gtest_list_tests_unittest_.cc	/^TEST(FooDeathTest, Test1) {$/;\"	f\n 237973  TEST	modules/gtest/test/gtest_main_unittest.cc	/^TEST(GTestMainTest, ShouldSucceed) {$/;\"	f	namespace:__anon831\n 237974: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ADeathTest, ShouldRunFirst) {$/;\"	f\n 237975: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(AddFailureAtTest, MessageContainsSpecifiedFileAndLineNumber) {$/;\"	f\n 237976: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(DisabledTestsWarningTest,$/;\"	f\n 237977: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, CanReferenceGlobalVariables) {$/;\"	f\n 237978: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, CanReferenceLocalStaticVariables) {$/;\"	f\n 237979: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenStatementReturns) {$/;\"	f\n 237980: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenStatementThrows) {$/;\"	f\n 237981: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereAreTwoFatalFailures) {$/;\"	f\n 237982: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereIsNoFatalFailure) {$/;\"	f\n 237983: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereIsOneNonfatalFailure) {$/;\"	f\n 237984: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, SucceedsWhenThereIsOneFatalFailure) {$/;\"	f\n 237985: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, CanReferenceGlobalVariables) {$/;\"	f\n 237986: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, CanReferenceLocalVariables) {$/;\"	f\n 237987: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenStatementReturns) {$/;\"	f\n 237988: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenStatementThrows) {$/;\"	f\n 237989: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereAreTwoNonfatalFailures) {$/;\"	f\n 237990: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereIsNoNonfatalFailure) {$/;\"	f\n 237991: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereIsOneFatalFailure) {$/;\"	f\n 237992: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, SucceedsWhenThereIsOneNonfatalFailure) {$/;\"	f\n 237993: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, FatalFailureInNestedSubroutine) {$/;\"	f\n 237994: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, FatalFailureInSubroutine) {$/;\"	f\n 237995: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, NonfatalFailureInSubroutine) {$/;\"	f\n 237996: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(LoggingTest, InterleavingLoggingAndAssertions) {$/;\"	f\n 237997: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(NonfatalFailureTest, EscapesStringOperands) {$/;\"	f\n 237998: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(PassingTest, PassingTest1) {$/;\"	f\n 237999: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(PassingTest, PassingTest2) {$/;\"	f\n 238000: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, CanBeNested) {$/;\"	f\n 238001: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, CanBeRepeated) {$/;\"	f\n 238002: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, ObeysScopes) {$/;\"	f\n 238003: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksConcurrently) {$/;\"	f\n 238004: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksInLoop) {$/;\"	f\n 238005: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksInSubroutine) {$/;\"	f\n 238006: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(TEST_F_before_TEST_in_same_test_case, DefinedUsingTESTAndShouldFail) {}$/;\"	f\n 238007: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST) {}$/;\"	f\n 238008  TEST	modules/gtest/test/gtest_prod_test.cc	/^TEST(PrivateCodeTest, CanAccessPrivateMembers) {$/;\"	f\n 238009  TEST	modules/gtest/test/gtest_repeat_test.cc	/^TEST(BarDeathTest, ThreadSafeAndFast) {$/;\"	f	namespace:__anon836\n .....\n 238722  TEST_F	modules/gtest/test/gtest_list_tests_unittest_.cc	/^TEST_F(FooTest, Test1) {$/;\"	f\n 238723  TEST_F	modules/gtest/test/gtest_list_tests_unittest_.cc	/^TEST_F(FooTest, Test3) {$/;\"	f\n 238724: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectFatalFailure) {$/;\"	f\n 238725: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectFatalFailureOnAllThreads) {$/;\"	f\n 238726: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectNonFatalFailure) {$/;\"	f\n 238727: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectNonFatalFailureOnAllThreads) {$/;\"	f\n 238728: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectFatalFailure) {$/;\"	f\n 238729: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectNonFatalFailure) {$/;\"	f\n 238730: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(FatalFailureInFixtureConstructorTest, FailureInConstructor) {$/;\"	f\n 238731: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(FatalFailureInSetUpTest, FailureInSetUp) {$/;\"	f\n 238732: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, FirstTestFromNamespaceFoo) {}$/;\"	f	namespace:foo\n 238733: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, SecondTestFromNamespaceFoo) {}$/;\"	f	namespace:foo\n 238734: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, ThisShouldFail) {}$/;\"	f	namespace:bar\n 238735: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, ThisShouldFailToo) {}$/;\"	f	namespace:bar\n 238736: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseWithSameTestNameTest,$/;\"	f	namespace:bar\n 238737: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseWithSameTestNameTest,$/;\"	f	namespace:foo\n 238738: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(NonFatalFailureInFixtureConstructorTest, FailureInConstructor) {$/;\"	f\n 238739: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(NonFatalFailureInSetUpTest, FailureInSetUp) {$/;\"	f\n 238740: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ScopedFakeTestPartResultReporterTest, InterceptOnlyCurrentThread) {$/;\"	f\n 238741: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(TEST_F_before_TEST_in_same_test_case, DefinedUsingTEST_F) {}$/;\"	f\n 238742: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST_FAndShouldFail) {$/;\"	f\n 238743  TEST_F	modules/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctionOnBuiltInTypeFailure) {$/;\"	f\n 238744  TEST_F	modules/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctionOnBuiltInTypeSuccess) {$/;\"	f\n .....\n 239064  TEST_FILTER	libraries/AC_PID/examples/AC_PID_test/AC_PID_test.cpp	17;\"	d	file:\n 239065  TEST_FILTER	modules/gtest/test/gtest_shuffle_test.py	/^TEST_FILTER = 'A*.A:A*.B:C*'$/;\"	v\n 239066: TEST_F_before_TEST_in_same_test_case	modules/gtest/test/gtest_output_test_.cc	/^class TEST_F_before_TEST_in_same_test_case : public testing::Test {$/;\"	c	file:\n 239067  TEST_H	modules/mavlink/pymavlink/generator/C/include_v0.9/test/test.h	6;\"	d\n 239068  TEST_H	modules/mavlink/pymavlink/generator/C/include_v1.0/test/test.h	6;\"	d\n .....\n 239109  TEST_P	modules/gtest/test/gtest_list_tests_unittest_.cc	/^TEST_P(ValueParamTest, TestA) {$/;\"	f\n 239110  TEST_P	modules/gtest/test/gtest_list_tests_unittest_.cc	/^TEST_P(ValueParamTest, TestB) {$/;\"	f\n 239111: TEST_P	modules/gtest/test/gtest_output_test_.cc	/^TEST_P(FailingParamTest, Fails) {$/;\"	f\n 239112  TEST_P	modules/gtest/test/gtest_repeat_test.cc	/^TEST_P(MyParamTest, ShouldPass) {$/;\"	f	namespace:__anon836\n 239113  TEST_P	modules/gtest/test/gtest_xml_output_unittest_.cc	/^TEST_P(ValueParamTest, AnotherTestThatHasValueParamAttribute) {}$/;\"	f\n .....\n 239141  TEST_USE_STATFS	modules/PX4NuttX/apps/examples/mount/mount_main.c	60;\"	d	file:\n 239142  TEST_VALUE_STACKCHECK	modules/PX4Firmware/makefiles/toolchain_gnu-arm-eabi.mk	/^TEST_VALUE_STACKCHECK=CONFIG_ARMV7M_STACKCHECK\\\\ 1$/;\"	m\n 239143: TEST_before_TEST_F_in_same_test_case	modules/gtest/test/gtest_output_test_.cc	/^class TEST_before_TEST_F_in_same_test_case : public testing::Test {$/;\"	c	file:\n 239144  TEXT_ALIGNMENT_HORIZ_CENTER	modules/PX4NuttX/NxWidgets/libnxwidgets/include/clabel.hxx	/^      TEXT_ALIGNMENT_HORIZ_CENTER = 0,  \\/**< Centre the text *\\/$/;\"	e	enum:NXWidgets::CLabel::TextAlignmentHoriz\n 239145  TEXT_ALIGNMENT_HORIZ_CENTER	modules/PX4NuttX/NxWidgets/libnxwidgets/include/cmultilinetextbox.hxx	/^      TEXT_ALIGNMENT_HORIZ_CENTER = 0,    \\/**< Centre the text *\\/$/;\"	e	enum:NXWidgets::CMultiLineTextBox::TextAlignmentHoriz\n .....\n 242241  TYPED_TEST	modules/gtest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST(TypedTest, TestA) {$/;\"	f\n 242242  TYPED_TEST	modules/gtest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST(TypedTest, TestB) {$/;\"	f\n 242243: TYPED_TEST	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST(ATypedDeathTest, ShouldRunFirst) {$/;\"	f\n 242244: TYPED_TEST	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST(TypedTest, Failure) {$/;\"	f\n 242245: TYPED_TEST	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST(TypedTest, Success) {$/;\"	f\n 242246  TYPED_TEST	modules/gtest/test/gtest_unittest.cc	/^TYPED_TEST(DISABLED_TypedTest, ShouldNotRun) {$/;\"	f	namespace:__anon824\n 242247  TYPED_TEST	modules/gtest/test/gtest_unittest.cc	/^TYPED_TEST(TypedTest, DISABLED_ShouldNotRun) {$/;\"	f	namespace:__anon824\n .....\n 242264  TYPED_TEST_P	modules/gtest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST_P(TypeParamTest, TestA) {$/;\"	f\n 242265  TYPED_TEST_P	modules/gtest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST_P(TypeParamTest, TestB) {$/;\"	f\n 242266: TYPED_TEST_P	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_P(ATypeParamDeathTest, ShouldRunFirst) {$/;\"	f\n 242267: TYPED_TEST_P	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_P(TypedTestP, Failure) {$/;\"	f\n 242268: TYPED_TEST_P	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_P(TypedTestP, Success) {$/;\"	f\n 242269  TYPED_TEST_P	modules/gtest/test/gtest_unittest.cc	/^TYPED_TEST_P(DISABLED_TypedTestP, ShouldNotRun) {$/;\"	f	namespace:__anon824\n 242270  TYPED_TEST_P	modules/gtest/test/gtest_unittest.cc	/^TYPED_TEST_P(TypedTestP, DISABLED_ShouldNotRun) {$/;\"	f	namespace:__anon824\n .....\n 242590  TearDown	modules/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:CxxExceptionInTestBodyTest\n 242591  TearDown	modules/gtest/test/gtest_environment_test.cc	/^  virtual void TearDown() {$/;\"	f	class:__anon823::MyEnvironment\n 242592: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:BarEnvironment\n 242593: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:DeathTestAndMultiThreadsTest\n 242594: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:FatalFailureInFixtureConstructorTest\n 242595: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:FatalFailureInSetUpTest\n 242596: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:FooEnvironment\n 242597: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:NonFatalFailureInFixtureConstructorTest\n 242598: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:NonFatalFailureInSetUpTest\n 242599  TearDown	modules/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;\"	f	class:Predicate1Test\n 242600  TearDown	modules/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;\"	f	class:Predicate2Test\n .....\n 242792  TestDupeLogData	Tools/LogAnalyzer/tests/TestDupeLogData.py	/^class TestDupeLogData(Test):$/;\"	c\n 242793  TestEmpty	Tools/LogAnalyzer/tests/TestEmpty.py	/^class TestEmpty(Test):$/;\"	c\n 242794: TestEq1	modules/gtest/test/gtest_output_test_.cc	/^void TestEq1(int x) {$/;\"	f\n 242795  TestEq1	modules/gtest/test/gtest_unittest.cc	/^void TestEq1(int x) {$/;\"	f	namespace:__anon824\n 242796  TestEventListener	modules/gtest/include/gtest/gtest.h	/^class TestEventListener {$/;\"	c	namespace:testing\n .....\n 242935  ThreadRange	modules/gbenchmark/src/benchmark.cc	/^Benchmark* Benchmark::ThreadRange(int min_threads, int max_threads) {$/;\"	f	class:benchmark::internal::Benchmark\n 242936  ThreadRange	modules/gbenchmark/src/benchmark.cc	/^void BenchmarkImp::ThreadRange(int min_threads, int max_threads) {$/;\"	f	class:benchmark::internal::BenchmarkImp\n 242937: ThreadRoutine	modules/gtest/test/gtest_output_test_.cc	/^static void ThreadRoutine(SpawnThreadNotifications* notifications) {$/;\"	f	file:\n 242938  ThreadStats	modules/gbenchmark/src/benchmark.cc	/^    ThreadStats() : bytes_processed(0), items_processed(0) {}$/;\"	f	struct:benchmark::__anon1212::ThreadStats\n 242939  ThreadStats	modules/gbenchmark/src/benchmark.cc	/^struct ThreadStats {$/;\"	s	namespace:benchmark::__anon1212	file:\n .....\n 242941  ThreadWithParam	modules/gtest/include/gtest/internal/gtest-port.h	/^class ThreadWithParam : public ThreadWithParamBase {$/;\"	c	namespace:testing::internal\n 242942  ThreadWithParamBase	modules/gtest/include/gtest/internal/gtest-port.h	/^class ThreadWithParamBase {$/;\"	c	namespace:testing::internal\n 242943: ThreadWithScopedTrace	modules/gtest/test/gtest_output_test_.cc	/^static void ThreadWithScopedTrace(CheckPoints* check_points) {$/;\"	f	file:\n 242944  Threads	modules/gbenchmark/src/benchmark.cc	/^Benchmark* Benchmark::Threads(int t) {$/;\"	f	class:benchmark::internal::Benchmark\n 242945  Threads	modules/gbenchmark/src/benchmark.cc	/^void BenchmarkImp::Threads(int t) {$/;\"	f	class:benchmark::internal::BenchmarkImp\n .....\n 243072  ToUInt64	modules/mavlink/pymavlink/generator/CS/common/FrameworkBitConverter.cs	/^        public UInt64 ToUInt64(byte[] value, int startIndex)$/;\"	m	class:MavLink.FrameworkBitConverter\n 243073  ToUInt8	modules/mavlink/pymavlink/generator/CS/common/ByteArrayUtil.cs	/^        public static byte[] ToUInt8(byte[] source, int sourceOffset, int size)$/;\"	m	class:MavLink.ByteArrayUtil\n 243074: ToUnixLineEnding	modules/gtest/test/gtest_output_test.py	/^def ToUnixLineEnding(s):$/;\"	f\n 243075  ToUpper	modules/gtest/include/gtest/internal/gtest-port.h	/^inline char ToUpper(char ch) {$/;\"	f	namespace:testing::internal\n 243076  Token	modules/gtest/scripts/pump.py	/^class Token:$/;\"	c\n .....\n 243321  True_	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan/include/uavcan/util/templates.hpp	/^    struct True_ { char x[2]; };$/;\"	s	class:uavcan::IsImplicitlyConvertibleFromTo\n 243322  True_	modules/uavcan/libuavcan/include/uavcan/util/templates.hpp	/^    struct True_ { char x[2]; };$/;\"	s	class:uavcan::IsImplicitlyConvertibleFromTo\n 243323: TryTestSubroutine	modules/gtest/test/gtest_output_test_.cc	/^void TryTestSubroutine() {$/;\"	f\n 243324  TsToAbstime	modules/PX4Firmware/src/lib/DriverFramework/framework/src/DriverFramework.cpp	/^static uint64_t TsToAbstime(struct timespec *ts)$/;\"	f	file:\n 243325  Tsn	libraries/AP_Mount/SoloGimbalEKF.h	/^    Matrix3f Tsn;                   \\/\\/ Sensor to NED rotation matrix$/;\"	m	class:SoloGimbalEKF\n .....\n 243419  Type_Level	modules/PX4NuttX/nuttx/drivers/input/stmpe811_tsc.c	83;\"	d	file:\n 243420  TypedTest	modules/gtest/test/gtest_list_tests_unittest_.cc	/^class TypedTest : public testing::Test {$/;\"	c	file:\n 243421: TypedTest	modules/gtest/test/gtest_output_test_.cc	/^class TypedTest : public testing::Test {$/;\"	c	file:\n 243422  TypedTest	modules/gtest/test/gtest_unittest.cc	/^class TypedTest : public Test {$/;\"	c	namespace:__anon824	file:\n 243423  TypedTest	modules/gtest/test/gtest_xml_output_unittest_.cc	/^template <typename T> class TypedTest : public Test {};$/;\"	c	file:\n .....\n 243428  TypedTestCasePStateDeathTest	modules/gtest/test/gtest-typed-test_test.cc	/^typedef TypedTestCasePStateTest TypedTestCasePStateDeathTest;$/;\"	t	file:\n 243429  TypedTestCasePStateTest	modules/gtest/test/gtest-typed-test_test.cc	/^class TypedTestCasePStateTest : public Test {$/;\"	c	file:\n 243430: TypedTestP	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_CASE_P(TypedTestP);$/;\"	v\n 243431: TypedTestP	modules/gtest/test/gtest_output_test_.cc	/^class TypedTestP : public testing::Test {$/;\"	c	file:\n 243432  TypedTestP	modules/gtest/test/gtest_unittest.cc	/^class TypedTestP : public Test {$/;\"	c	namespace:__anon824	file:\n 243433  TypedTestP1	modules/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_CASE_P(TypedTestP1);$/;\"	v\n .....\n 254584  UnshuffleTests	modules/gtest/src/gtest.cc	/^void TestCase::UnshuffleTests() {$/;\"	f	class:testing::TestCase\n 254585  UnshuffleTests	modules/gtest/src/gtest.cc	/^void UnitTestImpl::UnshuffleTests() {$/;\"	f	class:testing::internal::UnitTestImpl\n 254586: UnsignedTypes	modules/gtest/test/gtest_output_test_.cc	/^typedef testing::Types<unsigned char, unsigned int> UnsignedTypes;$/;\"	t	file:\n 254587  Unstreamable	modules/gtest/test/gtest-param-test_test.cc	/^  explicit Unstreamable(int value) : value_(value) {}$/;\"	f	class:Unstreamable\n 254588  Unstreamable	modules/gtest/test/gtest-param-test_test.cc	/^class Unstreamable {$/;\"	c	file:\n .....\n 263716  __author__	modules/gtest/test/gtest_help_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;\"	v\n 263717  __author__	modules/gtest/test/gtest_list_tests_unittest.py	/^__author__ = 'phanna@google.com (Patrick Hanna)'$/;\"	v\n 263718: __author__	modules/gtest/test/gtest_output_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;\"	v\n 263719  __author__	modules/gtest/test/gtest_shuffle_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;\"	v\n 263720  __author__	modules/gtest/test/gtest_test_utils.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;\"	v\n .....\n 276544  bank	modules/PX4NuttX/nuttx/drivers/net/enc28j60.c	/^  uint8_t               bank;          \\/* Currently selected bank *\\/$/;\"	m	struct:enc_driver_s	file:\n 276545  bar	modules/PX4NuttX/nuttx/configs/stm32ldiscovery/src/stm32_lcd.c	/^  uint8_t bar[2];               \\/* Controls the bars on the far right of the SLCD *\\/$/;\"	m	struct:stm32_slcdstate_s	file:\n 276546: bar	modules/gtest/test/gtest_output_test_.cc	/^namespace bar {$/;\"	n	file:\n 276547  bar	modules/waf/build_system_kit/noscript/bar.c	/^int bar = 4434;$/;\"	v\n 276548  bar	modules/waf/demos/fortran/src/hello_inc.f	/^        real bar$/;\"	v	program:main\n .....\n 291798  foo	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan/include/uavcan/util/comparison.hpp	/^struct NotApplicable { long long foo[16]; };$/;\"	m	struct:uavcan::are_close_impl_::NotApplicable\n 291799  foo	modules/gtest/test/gtest-printers_test.cc	/^namespace foo {$/;\"	n	file:\n 291800: foo	modules/gtest/test/gtest_output_test_.cc	/^namespace foo {$/;\"	n	file:\n 291801  foo	modules/gtest/test/gtest_unittest.cc	/^  Foo foo;$/;\"	m	class:__anon826::FRIEND_TEST_Test2	file:\n 291802  foo	modules/uavcan/libuavcan/include/uavcan/util/comparison.hpp	/^struct Applicable { char foo[1]; };$/;\"	m	struct:uavcan::are_close_impl_::Applicable\n .....\n 298859  global_count_	modules/gtest/test/gtest-param-test_test.cc	/^int SeparateInstanceTest::global_count_ = 0;$/;\"	m	class:SeparateInstanceTest	file:\n 298860  global_exit	modules/PX4NuttX/misc/tools/kconfig-frontends/frontends/nconf/nconf.c	/^static int global_exit;$/;\"	v	file:\n 298861: global_integer	modules/gtest/test/gtest_output_test_.cc	/^int global_integer = 0;$/;\"	v\n 298862  global_link_id	modules/mavlink/pymavlink/mavutil.py	/^global_link_id = 0$/;\"	v\n 298863  global_pos	modules/PX4Firmware/src/drivers/frsky_telemetry/frsky_data.c	/^static struct vehicle_global_position_s *global_pos;$/;\"	v	typeref:struct:vehicle_global_position_s	file:\n .....\n 303902  internal_run_death_test_flag	modules/gtest/src/gtest-internal-inl.h	/^  const InternalRunDeathTestFlag* internal_run_death_test_flag() const {$/;\"	f	class:testing::internal::UnitTestImpl\n 303903  internal_run_death_test_flag_	modules/gtest/src/gtest-internal-inl.h	/^  internal::scoped_ptr<InternalRunDeathTestFlag> internal_run_death_test_flag_;$/;\"	m	class:testing::internal::UnitTestImpl\n 303904: internal_skip_environment_and_ad_hoc_tests	modules/gtest/test/gtest_output_test_.cc	/^bool GTEST_FLAG(internal_skip_environment_and_ad_hoc_tests) = false;$/;\"	v\n 303905  interpret_address	Tools/autotest/jsb_sim/runsim.py	/^def interpret_address(addrstr):$/;\"	f\n 303906  interrst	modules/PX4NuttX/nuttx/arch/arm/src/lpc17xx/lpc17_gpdma.h	/^  uint32_t interrst;    \\/* DMA Interrupt Error Status Register *\\/$/;\"	m	struct:lpc17_dmaglobalregs_s\n .....\n 305429  kFractionBitCount	modules/gtest/include/gtest/internal/gtest-internal.h	/^  static const size_t kFractionBitCount =$/;\"	m	class:testing::internal::FloatingPoint\n 305430  kFractionBitMask	modules/gtest/include/gtest/internal/gtest-internal.h	/^  static const Bits kFractionBitMask =$/;\"	m	class:testing::internal::FloatingPoint\n 305431: kGoldenString	modules/gtest/test/gtest_output_test_.cc	/^static const char kGoldenString[] = \"\\\\\"Line\\\\0 1\\\\\"\\\\nLine 2\";$/;\"	v	file:\n 305432  kHelloString	modules/gtest/samples/sample2_unittest.cc	/^const char kHelloString[] = \"Hello, world!\";$/;\"	v\n 305433  kHexEscape	modules/gtest/src/gtest-printers.cc	/^  kHexEscape,$/;\"	e	enum:testing::internal::CharFormat	file:\n .....\n 311707  main	modules/gtest/test/gtest_list_tests_unittest_.cc	/^int main(int argc, char **argv) {$/;\"	f\n 311708  main	modules/gtest/test/gtest_no_test_unittest.cc	/^int main(int argc, char **argv) {$/;\"	f\n 311709: main	modules/gtest/test/gtest_output_test_.cc	/^int main(int argc, char **argv) {$/;\"	f\n 311710  main	modules/gtest/test/gtest_premature_exit_test.cc	/^int main(int argc, char **argv) {$/;\"	f\n 311711  main	modules/gtest/test/gtest_repeat_test.cc	/^int main(int argc, char **argv) {$/;\"	f\n .....\n 322361  n	modules/waf/playground/cython/cython_cache/src/cy_ctest.c	/^typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; \\/*proto*\\/$/;\"	m	struct:__anon848	file:\n 322362  n	modules/waf/playground/cython/cython_cache/src/cy_cxxtest.cc	/^typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; \\/*proto*\\/$/;\"	m	struct:__anon845	file:\n 322363: n1	modules/gtest/test/gtest_output_test_.cc	/^  Notification n1;$/;\"	m	struct:CheckPoints	file:\n 322364  n1_	modules/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;\"	m	class:Predicate1Test	file:\n 322365  n1_	modules/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;\"	m	class:Predicate2Test	file:\n .....\n 322372  n1_	modules/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate4Test::n1_;$/;\"	m	class:Predicate4Test	file:\n 322373  n1_	modules/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n1_;$/;\"	m	class:Predicate5Test	file:\n 322374: n2	modules/gtest/test/gtest_output_test_.cc	/^  Notification n2;$/;\"	m	struct:CheckPoints	file:\n 322375  n2_	modules/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n2_;$/;\"	m	class:Predicate2Test	file:\n 322376  n2_	modules/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n2_;$/;\"	m	class:Predicate3Test	file:\n .....\n 322381  n2_	modules/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate4Test::n2_;$/;\"	m	class:Predicate4Test	file:\n 322382  n2_	modules/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n2_;$/;\"	m	class:Predicate5Test	file:\n 322383: n3	modules/gtest/test/gtest_output_test_.cc	/^  Notification n3;$/;\"	m	struct:CheckPoints	file:\n 322384  n3_	modules/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n3_;$/;\"	m	class:Predicate3Test	file:\n 322385  n3_	modules/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n3_;$/;\"	m	class:Predicate4Test	file:\n .....\n 323716  notes	libraries/AP_HAL_Linux/ToneAlarm.cpp	/^static uint16_t notes[] = { 0,$/;\"	v	file:\n 323717  nothrow	modules/PX4NuttX/misc/uClibc++/libxx/uClibc++/new_handler.cxx	/^const std::nothrow_t std::nothrow = { };$/;\"	m	class:std	file:\n 323718: notifications_	modules/gtest/test/gtest_output_test_.cc	/^  SpawnThreadNotifications notifications_;$/;\"	m	class:DeathTestAndMultiThreadsTest	file:\n 323719  notified_	modules/gtest/include/gtest/internal/gtest-port.h	/^  bool notified_;$/;\"	m	class:testing::internal::Notification\n 323720  notify	APMrover2/Rover.h	/^    AP_Notify notify;$/;\"	m	class:Rover\n .....\n 327651  output_state	modules/PX4NuttX/nuttx/configs/nucleus2g/include/board.h	/^enum output_state$/;\"	g\n 327652  output_t	modules/PX4NuttX/nuttx/tools/kconfig2html.c	/^typedef void (*output_t)(const char *fmt, ...);$/;\"	t	file:\n 327653: output_test	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsCoax\n 327654: output_test	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsHeli_Single\n 327655: output_test	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsMatrix\n 327656: output_test	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsSingle\n 327657: output_test	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsTri\n 327658  output_to_motors	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_to_motors()$/;\"	f	class:AP_MotorsCoax\n 327659  output_to_motors	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::output_to_motors()$/;\"	f	class:AP_MotorsMatrix\n .....\n 343950  spawn_semgive	modules/PX4NuttX/nuttx/sched/spawn_internal.h	114;\"	d\n 343951  spawn_semtake	modules/PX4NuttX/nuttx/sched/task_spawnparms.c	/^void spawn_semtake(FAR sem_t *sem)$/;\"	f\n 343952: spawn_thread_ok_to_terminate	modules/gtest/test/gtest_output_test_.cc	/^  Notification spawn_thread_ok_to_terminate;$/;\"	m	struct:SpawnThreadNotifications	file:\n 343953: spawn_thread_started	modules/gtest/test/gtest_output_test_.cc	/^  Notification spawn_thread_started;$/;\"	m	struct:SpawnThreadNotifications	file:\n 343954  spawned	modules/gtest/src/gtest-death-test.cc	/^  bool spawned() const { return spawned_; }$/;\"	f	class:testing::internal::DeathTestImpl\n 343955  spawned_	modules/gtest/src/gtest-death-test.cc	/^  bool spawned_;$/;\"	m	class:testing::internal::DeathTestImpl	file:\n .....\n 351014  testOutfile1	modules/gtest/test/gtest_xml_outfiles_test.py	/^  def testOutfile1(self):$/;\"	m	class:GTestXMLOutFilesTest\n 351015  testOutfile2	modules/gtest/test/gtest_xml_outfiles_test.py	/^  def testOutfile2(self):$/;\"	m	class:GTestXMLOutFilesTest\n 351016: testOutput	modules/gtest/test/gtest_output_test.py	/^  def testOutput(self):$/;\"	m	class:GTestOutputTest\n 351017  testOverrideNonFilterFlags	modules/gtest/test/gtest_list_tests_unittest.py	/^  def testOverrideNonFilterFlags(self):$/;\"	m	class:GTestListTestsUnitTest\n 351018  testPrintsHelpWithFullFlag	modules/gtest/test/gtest_help_test.py	/^  def testPrintsHelpWithFullFlag(self):$/;\"	m	class:GTestHelpTest\n .....\n 351203  test_jig_voltages	modules/PX4Firmware/src/systemcmds/tests/test_jig_voltages.c	/^int test_jig_voltages(int argc, char *argv[])$/;\"	f\n 351204  test_led	modules/PX4Firmware/src/systemcmds/tests/test_led.c	/^int test_led(int argc, char *argv[])$/;\"	f\n 351205: test_list	modules/gtest/test/gtest_output_test.py	/^test_list = GetShellCommandOutput(COMMAND_LIST_TESTS)$/;\"	v\n 351206  test_load_depends_msg	mk/PX4/Tools/genmsg/test/test_genmsg_msg_loader.py	/^def test_load_depends_msg():$/;\"	f\n 351207  test_load_depends_msg	modules/PX4Firmware/Tools/genmsg/test/test_genmsg_msg_loader.py	/^def test_load_depends_msg():$/;\"	f\n .....\n 351627  thread_	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan_drivers/linux/apps/uavcan_nodetool.cpp	/^    std::thread thread_;$/;\"	m	class:__anon668::StdinLineReader	file:\n 351628  thread_	modules/gtest/include/gtest/internal/gtest-port.h	/^  pthread_t thread_;  \\/\\/ The native thread object.$/;\"	m	class:testing::internal::ThreadWithParam\n 351629: thread_	modules/gtest/test/gtest_output_test_.cc	/^  scoped_ptr<ThreadWithParam<SpawnThreadNotifications*> > thread_;$/;\"	m	class:DeathTestAndMultiThreadsTest	file:\n 351630  thread_	modules/uavcan/libuavcan_drivers/linux/apps/uavcan_nodetool.cpp	/^    std::thread thread_;$/;\"	m	class:__anon1144::StdinLineReader	file:\n 351631  thread_can_start_	modules/gtest/include/gtest/internal/gtest-port.h	/^  Notification* const thread_can_start_;$/;\"	m	class:testing::internal::ThreadWithParam\n .....\n 365484  ~FDCacheItem	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan_drivers/posix/include/uavcan_posix/basic_file_server_backend.hpp	/^            ~FDCacheItem()$/;\"	f	class:uavcan_posix::BasicFileServerBackend::FDCache::FDCacheItem\n 365485  ~FDCacheItem	modules/uavcan/libuavcan_drivers/posix/include/uavcan_posix/basic_file_server_backend.hpp	/^            ~FDCacheItem()$/;\"	f	class:uavcan_posix::BasicFileServerBackend::FDCache::FDCacheItem\n 365486: ~FatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^  ~FatalFailureInFixtureConstructorTest() {$/;\"	f	class:FatalFailureInFixtureConstructorTest\n 365487: ~FatalFailureInSetUpTest	modules/gtest/test/gtest_output_test_.cc	/^  virtual ~FatalFailureInSetUpTest() {$/;\"	f	class:FatalFailureInSetUpTest\n 365488  ~FirmwareUpdateTrigger	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan/include/uavcan/protocol/firmware_update_trigger.hpp	/^    ~FirmwareUpdateTrigger()$/;\"	f	class:uavcan::FirmwareUpdateTrigger\n 365489  ~FirmwareUpdateTrigger	modules/uavcan/libuavcan/include/uavcan/protocol/firmware_update_trigger.hpp	/^    ~FirmwareUpdateTrigger()$/;\"	f	class:uavcan::FirmwareUpdateTrigger\n .....\n 365694  ~NodeStatusMonitor	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan/include/uavcan/protocol/node_status_monitor.hpp	/^    virtual ~NodeStatusMonitor() { }$/;\"	f	class:uavcan::NodeStatusMonitor\n 365695  ~NodeStatusMonitor	modules/uavcan/libuavcan/include/uavcan/protocol/node_status_monitor.hpp	/^    virtual ~NodeStatusMonitor() { }$/;\"	f	class:uavcan::NodeStatusMonitor\n 365696: ~NonFatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^  ~NonFatalFailureInFixtureConstructorTest() {$/;\"	f	class:NonFatalFailureInFixtureConstructorTest\n 365697: ~NonFatalFailureInSetUpTest	modules/gtest/test/gtest_output_test_.cc	/^  virtual ~NonFatalFailureInSetUpTest() {$/;\"	f	class:NonFatalFailureInSetUpTest\n 365698  ~Noncopyable	modules/PX4Firmware/src/modules/uavcan/libuavcan/libuavcan/include/uavcan/util/templates.hpp	/^    ~Noncopyable() { }$/;\"	f	class:uavcan::Noncopyable\n 365699  ~Noncopyable	modules/uavcan/libuavcan/include/uavcan/util/templates.hpp	/^    ~Noncopyable() { }$/;\"	f	class:uavcan::Noncopyable\n\n/home/rutk1t0r/src/ardupilot/.tags_sorted_by_file:\n 30147  get_motor_mask	libraries/AP_Motors/AP_MotorsCoax.cpp	/^uint16_t AP_MotorsCoax::get_motor_mask()$/;\"	f	class:AP_MotorsCoax\n 30148  output_armed_stabilizing	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_armed_stabilizing()$/;\"	f	class:AP_MotorsCoax\n 30149: output_test	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsCoax\n 30150  output_to_motors	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_to_motors()$/;\"	f	class:AP_MotorsCoax\n 30151  set_update_rate	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsCoax\n .....\n 30290  move_actuators	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::move_actuators(float roll_out, float pitch_out, float coll_in, float yaw_out)$/;\"	f	class:AP_MotorsHeli_Single\n 30291  move_yaw	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::move_yaw(float yaw_out)$/;\"	f	class:AP_MotorsHeli_Single\n 30292: output_test	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsHeli_Single\n 30293  parameter_check	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^bool AP_MotorsHeli_Single::parameter_check(bool display_msg) const$/;\"	f	class:AP_MotorsHeli_Single\n 30294  servo_test	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::servo_test()$/;\"	f	class:AP_MotorsHeli_Single\n .....\n 30360  normalise_rpy_factors	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::normalise_rpy_factors()$/;\"	f	class:AP_MotorsMatrix\n 30361  output_armed_stabilizing	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::output_armed_stabilizing()$/;\"	f	class:AP_MotorsMatrix\n 30362: output_test	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsMatrix\n 30363  output_to_motors	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::output_to_motors()$/;\"	f	class:AP_MotorsMatrix\n 30364  remove_all_motors	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::remove_all_motors()$/;\"	f	class:AP_MotorsMatrix\n .....\n 30478  get_motor_mask	libraries/AP_Motors/AP_MotorsSingle.cpp	/^uint16_t AP_MotorsSingle::get_motor_mask()$/;\"	f	class:AP_MotorsSingle\n 30479  output_armed_stabilizing	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::output_armed_stabilizing()$/;\"	f	class:AP_MotorsSingle\n 30480: output_test	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsSingle\n 30481  output_to_motors	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::output_to_motors()$/;\"	f	class:AP_MotorsSingle\n 30482  set_update_rate	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsSingle\n .....\n 30504  get_motor_mask	libraries/AP_Motors/AP_MotorsTri.cpp	/^uint16_t AP_MotorsTri::get_motor_mask()$/;\"	f	class:AP_MotorsTri\n 30505  output_armed_stabilizing	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::output_armed_stabilizing()$/;\"	f	class:AP_MotorsTri\n 30506: output_test	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsTri\n 30507  output_to_motors	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::output_to_motors()$/;\"	f	class:AP_MotorsTri\n 30508  set_update_rate	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsTri\n .....\n 349936  TEST	modules/gtest/test/gtest_main_unittest.cc	/^TEST(GTestMainTest, ShouldSucceed) {$/;\"	f	namespace:__anon831\n 349937  main	modules/gtest/test/gtest_no_test_unittest.cc	/^int main(int argc, char **argv) {$/;\"	f\n 349938: CAN_GENERATE_GOLDEN_FILE	modules/gtest/test/gtest_output_test.py	/^CAN_GENERATE_GOLDEN_FILE = (SUPPORTS_DEATH_TESTS and$/;\"	v\n 349939: CATCH_EXCEPTIONS_ENV_VAR_NAME	modules/gtest/test/gtest_output_test.py	/^CATCH_EXCEPTIONS_ENV_VAR_NAME = 'GTEST_CATCH_EXCEPTIONS'$/;\"	v\n 349940: COMMAND_LIST_TESTS	modules/gtest/test/gtest_output_test.py	/^COMMAND_LIST_TESTS = ({}, [PROGRAM_PATH, '--gtest_list_tests'])$/;\"	v\n 349941: COMMAND_WITH_COLOR	modules/gtest/test/gtest_output_test.py	/^COMMAND_WITH_COLOR = ({}, [PROGRAM_PATH, '--gtest_color=yes'])$/;\"	v\n 349942: COMMAND_WITH_DISABLED	modules/gtest/test/gtest_output_test.py	/^COMMAND_WITH_DISABLED = ($/;\"	v\n 349943: COMMAND_WITH_SHARDING	modules/gtest/test/gtest_output_test.py	/^COMMAND_WITH_SHARDING = ($/;\"	v\n 349944: COMMAND_WITH_TIME	modules/gtest/test/gtest_output_test.py	/^COMMAND_WITH_TIME = ({}, [PROGRAM_PATH,$/;\"	v\n 349945: GENGOLDEN_FLAG	modules/gtest/test/gtest_output_test.py	/^GENGOLDEN_FLAG = '--gengolden'$/;\"	v\n 349946: GOLDEN_NAME	modules/gtest/test/gtest_output_test.py	/^GOLDEN_NAME = 'gtest_output_test_golden_lin.txt'$/;\"	v\n 349947: GOLDEN_PATH	modules/gtest/test/gtest_output_test.py	/^GOLDEN_PATH = os.path.join(gtest_test_utils.GetSourceDir(), GOLDEN_NAME)$/;\"	v\n 349948: GTestOutputTest	modules/gtest/test/gtest_output_test.py	/^class GTestOutputTest(gtest_test_utils.TestCase):$/;\"	c\n 349949: GetCommandOutput	modules/gtest/test/gtest_output_test.py	/^def GetCommandOutput(env_cmd):$/;\"	f\n 349950: GetOutputOfAllCommands	modules/gtest/test/gtest_output_test.py	/^def GetOutputOfAllCommands():$/;\"	f\n 349951: GetShellCommandOutput	modules/gtest/test/gtest_output_test.py	/^def GetShellCommandOutput(env_cmd):$/;\"	f\n 349952: NormalizeOutput	modules/gtest/test/gtest_output_test.py	/^def NormalizeOutput(output):$/;\"	f\n 349953: NormalizeToCurrentPlatform	modules/gtest/test/gtest_output_test.py	/^def NormalizeToCurrentPlatform(test_output):$/;\"	f\n 349954: PROGRAM_PATH	modules/gtest/test/gtest_output_test.py	/^PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_output_test_')$/;\"	v\n 349955: RemoveLocations	modules/gtest/test/gtest_output_test.py	/^def RemoveLocations(test_output):$/;\"	f\n 349956: RemoveMatchingTests	modules/gtest/test/gtest_output_test.py	/^def RemoveMatchingTests(test_output, pattern):$/;\"	f\n 349957: RemoveStackTraceDetails	modules/gtest/test/gtest_output_test.py	/^def RemoveStackTraceDetails(output):$/;\"	f\n 349958: RemoveStackTraces	modules/gtest/test/gtest_output_test.py	/^def RemoveStackTraces(output):$/;\"	f\n 349959: RemoveTestCounts	modules/gtest/test/gtest_output_test.py	/^def RemoveTestCounts(output):$/;\"	f\n 349960: RemoveTime	modules/gtest/test/gtest_output_test.py	/^def RemoveTime(output):$/;\"	f\n 349961: RemoveTypeInfoDetails	modules/gtest/test/gtest_output_test.py	/^def RemoveTypeInfoDetails(test_output):$/;\"	f\n 349962: RemoveUnsupportedTests	modules/gtest/test/gtest_output_test.py	/^  def RemoveUnsupportedTests(self, test_output):$/;\"	m	class:GTestOutputTest\n 349963: SUPPORTS_DEATH_TESTS	modules/gtest/test/gtest_output_test.py	/^SUPPORTS_DEATH_TESTS = 'DeathTest' in test_list$/;\"	v\n 349964: SUPPORTS_STACK_TRACES	modules/gtest/test/gtest_output_test.py	/^SUPPORTS_STACK_TRACES = False$/;\"	v\n 349965: SUPPORTS_THREADS	modules/gtest/test/gtest_output_test.py	/^SUPPORTS_THREADS = 'ExpectFailureWithThreadsTest' in test_list$/;\"	v\n 349966: SUPPORTS_TYPED_TESTS	modules/gtest/test/gtest_output_test.py	/^SUPPORTS_TYPED_TESTS = 'TypedTest' in test_list$/;\"	v\n 349967: ToUnixLineEnding	modules/gtest/test/gtest_output_test.py	/^def ToUnixLineEnding(s):$/;\"	f\n 349968: __author__	modules/gtest/test/gtest_output_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;\"	v\n 349969: testOutput	modules/gtest/test/gtest_output_test.py	/^  def testOutput(self):$/;\"	m	class:GTestOutputTest\n 349970: test_list	modules/gtest/test/gtest_output_test.py	/^test_list = GetShellCommandOutput(COMMAND_LIST_TESTS)$/;\"	v\n 349971: ATypeParamDeathTest	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_CASE_P(ATypeParamDeathTest);$/;\"	v\n 349972: ATypeParamDeathTest	modules/gtest/test/gtest_output_test_.cc	/^class ATypeParamDeathTest : public testing::Test {$/;\"	c	file:\n 349973: ATypedDeathTest	modules/gtest/test/gtest_output_test_.cc	/^class ATypedDeathTest : public testing::Test {$/;\"	c	file:\n 349974: AdHocTest	modules/gtest/test/gtest_output_test_.cc	/^void AdHocTest() {$/;\"	f\n 349975: AddFailure	modules/gtest/test/gtest_output_test_.cc	/^  static void AddFailure(FailureMode failure) {$/;\"	f	class:ExpectFailureTest\n 349976: AddFailureInOtherThread	modules/gtest/test/gtest_output_test_.cc	/^  static void AddFailureInOtherThread(FailureMode failure) {$/;\"	f	class:ExpectFailureWithThreadsTest\n 349977: BarEnvironment	modules/gtest/test/gtest_output_test_.cc	/^class BarEnvironment : public testing::Environment {$/;\"	c	file:\n 349978: CheckPoints	modules/gtest/test/gtest_output_test_.cc	/^struct CheckPoints {$/;\"	s	file:\n 349979: DeathTestAndMultiThreadsTest	modules/gtest/test/gtest_output_test_.cc	/^class DeathTestAndMultiThreadsTest : public testing::Test {$/;\"	c	file:\n 349980: Deinit	modules/gtest/test/gtest_output_test_.cc	/^  void Deinit() {$/;\"	f	class:FatalFailureInSetUpTest	file:\n 349981: Deinit	modules/gtest/test/gtest_output_test_.cc	/^  void Deinit() {$/;\"	f	class:NonFatalFailureInSetUpTest	file:\n 349982: DieIf	modules/gtest/test/gtest_output_test_.cc	/^void DieIf(bool should_die) {$/;\"	f\n 349983: ExpectFailureTest	modules/gtest/test/gtest_output_test_.cc	/^class ExpectFailureTest : public testing::Test {$/;\"	c	file:\n 349984: ExpectFailureWithThreadsTest	modules/gtest/test/gtest_output_test_.cc	/^class ExpectFailureWithThreadsTest : public ExpectFailureTest {$/;\"	c	file:\n 349985: FATAL_FAILURE	modules/gtest/test/gtest_output_test_.cc	/^    FATAL_FAILURE,$/;\"	e	enum:ExpectFailureTest::FailureMode	file:\n 349986: FailingParamTest	modules/gtest/test/gtest_output_test_.cc	/^class FailingParamTest : public testing::TestWithParam<int> {};$/;\"	c	file:\n 349987: FailureMode	modules/gtest/test/gtest_output_test_.cc	/^  enum FailureMode {$/;\"	g	class:ExpectFailureTest	file:\n 349988: FatalFailure	modules/gtest/test/gtest_output_test_.cc	/^void FatalFailure() {$/;\"	f\n 349989: FatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^  FatalFailureInFixtureConstructorTest() {$/;\"	f	class:FatalFailureInFixtureConstructorTest\n 349990: FatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^class FatalFailureInFixtureConstructorTest : public testing::Test {$/;\"	c	file:\n 349991: FatalFailureInSetUpTest	modules/gtest/test/gtest_output_test_.cc	/^class FatalFailureInSetUpTest : public testing::Test {$/;\"	c	file:\n 349992: FooEnvironment	modules/gtest/test/gtest_output_test_.cc	/^class FooEnvironment : public testing::Environment {$/;\"	c	file:\n 349993: GTEST_IMPLEMENTATION_	modules/gtest/test/gtest_output_test_.cc	46;\"	d	file:\n 349994: GTEST_IMPLEMENTATION_	modules/gtest/test/gtest_output_test_.cc	48;\"	d	file:\n 349995: Init	modules/gtest/test/gtest_output_test_.cc	/^  void Init() {$/;\"	f	class:FatalFailureInFixtureConstructorTest	file:\n 349996: MixedUpTestCaseTest	modules/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseTest : public testing::Test {$/;\"	c	namespace:bar	file:\n 349997: MixedUpTestCaseTest	modules/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseTest : public testing::Test {$/;\"	c	namespace:foo	file:\n 349998: MixedUpTestCaseWithSameTestNameTest	modules/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseWithSameTestNameTest : public testing::Test {$/;\"	c	namespace:bar	file:\n 349999: MixedUpTestCaseWithSameTestNameTest	modules/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseWithSameTestNameTest : public testing::Test {$/;\"	c	namespace:foo	file:\n 350000: NONFATAL_FAILURE	modules/gtest/test/gtest_output_test_.cc	/^    NONFATAL_FAILURE$/;\"	e	enum:ExpectFailureTest::FailureMode	file:\n 350001: NonFatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^  NonFatalFailureInFixtureConstructorTest() {$/;\"	f	class:NonFatalFailureInFixtureConstructorTest\n 350002: NonFatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^class NonFatalFailureInFixtureConstructorTest : public testing::Test {$/;\"	c	file:\n 350003: NonFatalFailureInSetUpTest	modules/gtest/test/gtest_output_test_.cc	/^class NonFatalFailureInSetUpTest : public testing::Test {$/;\"	c	file:\n 350004: NumericTypes	modules/gtest/test/gtest_output_test_.cc	/^typedef testing::Types<int, double> NumericTypes;$/;\"	t	file:\n 350005: RunAllTests	modules/gtest/test/gtest_output_test_.cc	/^int RunAllTests() {$/;\"	f\n 350006: ScopedFakeTestPartResultReporterTest	modules/gtest/test/gtest_output_test_.cc	/^typedef ExpectFailureWithThreadsTest ScopedFakeTestPartResultReporterTest;$/;\"	t	file:\n 350007: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:BarEnvironment\n 350008: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:DeathTestAndMultiThreadsTest\n 350009: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:FatalFailureInFixtureConstructorTest\n 350010: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:FatalFailureInSetUpTest\n 350011: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:FooEnvironment\n 350012: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:NonFatalFailureInFixtureConstructorTest\n 350013: SetUp	modules/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;\"	f	class:NonFatalFailureInSetUpTest\n 350014: SpawnThreadNotifications	modules/gtest/test/gtest_output_test_.cc	/^  SpawnThreadNotifications() {}$/;\"	f	struct:SpawnThreadNotifications\n 350015: SpawnThreadNotifications	modules/gtest/test/gtest_output_test_.cc	/^struct SpawnThreadNotifications {$/;\"	s	file:\n 350016: SubWithTrace	modules/gtest/test/gtest_output_test_.cc	/^void SubWithTrace(int n) {$/;\"	f\n 350017: SubWithoutTrace	modules/gtest/test/gtest_output_test_.cc	/^void SubWithoutTrace(int n) {$/;\"	f\n 350018: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ADeathTest, ShouldRunFirst) {$/;\"	f\n 350019: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(AddFailureAtTest, MessageContainsSpecifiedFileAndLineNumber) {$/;\"	f\n 350020: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(DisabledTestsWarningTest,$/;\"	f\n 350021: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, CanReferenceGlobalVariables) {$/;\"	f\n 350022: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, CanReferenceLocalStaticVariables) {$/;\"	f\n 350023: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenStatementReturns) {$/;\"	f\n 350024: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenStatementThrows) {$/;\"	f\n 350025: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereAreTwoFatalFailures) {$/;\"	f\n 350026: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereIsNoFatalFailure) {$/;\"	f\n 350027: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereIsOneNonfatalFailure) {$/;\"	f\n 350028: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, SucceedsWhenThereIsOneFatalFailure) {$/;\"	f\n 350029: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, CanReferenceGlobalVariables) {$/;\"	f\n 350030: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, CanReferenceLocalVariables) {$/;\"	f\n 350031: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenStatementReturns) {$/;\"	f\n 350032: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenStatementThrows) {$/;\"	f\n 350033: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereAreTwoNonfatalFailures) {$/;\"	f\n 350034: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereIsNoNonfatalFailure) {$/;\"	f\n 350035: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereIsOneFatalFailure) {$/;\"	f\n 350036: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, SucceedsWhenThereIsOneNonfatalFailure) {$/;\"	f\n 350037: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, FatalFailureInNestedSubroutine) {$/;\"	f\n 350038: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, FatalFailureInSubroutine) {$/;\"	f\n 350039: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, NonfatalFailureInSubroutine) {$/;\"	f\n 350040: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(LoggingTest, InterleavingLoggingAndAssertions) {$/;\"	f\n 350041: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(NonfatalFailureTest, EscapesStringOperands) {$/;\"	f\n 350042: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(PassingTest, PassingTest1) {$/;\"	f\n 350043: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(PassingTest, PassingTest2) {$/;\"	f\n 350044: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, CanBeNested) {$/;\"	f\n 350045: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, CanBeRepeated) {$/;\"	f\n 350046: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, ObeysScopes) {$/;\"	f\n 350047: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksConcurrently) {$/;\"	f\n 350048: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksInLoop) {$/;\"	f\n 350049: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksInSubroutine) {$/;\"	f\n 350050: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(TEST_F_before_TEST_in_same_test_case, DefinedUsingTESTAndShouldFail) {}$/;\"	f\n 350051: TEST	modules/gtest/test/gtest_output_test_.cc	/^TEST(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST) {}$/;\"	f\n 350052: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectFatalFailure) {$/;\"	f\n 350053: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectFatalFailureOnAllThreads) {$/;\"	f\n 350054: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectNonFatalFailure) {$/;\"	f\n 350055: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectNonFatalFailureOnAllThreads) {$/;\"	f\n 350056: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectFatalFailure) {$/;\"	f\n 350057: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectNonFatalFailure) {$/;\"	f\n 350058: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(FatalFailureInFixtureConstructorTest, FailureInConstructor) {$/;\"	f\n 350059: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(FatalFailureInSetUpTest, FailureInSetUp) {$/;\"	f\n 350060: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, FirstTestFromNamespaceFoo) {}$/;\"	f	namespace:foo\n 350061: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, SecondTestFromNamespaceFoo) {}$/;\"	f	namespace:foo\n 350062: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, ThisShouldFail) {}$/;\"	f	namespace:bar\n 350063: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, ThisShouldFailToo) {}$/;\"	f	namespace:bar\n 350064: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseWithSameTestNameTest,$/;\"	f	namespace:bar\n 350065: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseWithSameTestNameTest,$/;\"	f	namespace:foo\n 350066: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(NonFatalFailureInFixtureConstructorTest, FailureInConstructor) {$/;\"	f\n 350067: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(NonFatalFailureInSetUpTest, FailureInSetUp) {$/;\"	f\n 350068: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(ScopedFakeTestPartResultReporterTest, InterceptOnlyCurrentThread) {$/;\"	f\n 350069: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(TEST_F_before_TEST_in_same_test_case, DefinedUsingTEST_F) {}$/;\"	f\n 350070: TEST_F	modules/gtest/test/gtest_output_test_.cc	/^TEST_F(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST_FAndShouldFail) {$/;\"	f\n 350071: TEST_F_before_TEST_in_same_test_case	modules/gtest/test/gtest_output_test_.cc	/^class TEST_F_before_TEST_in_same_test_case : public testing::Test {$/;\"	c	file:\n 350072: TEST_P	modules/gtest/test/gtest_output_test_.cc	/^TEST_P(FailingParamTest, Fails) {$/;\"	f\n 350073: TEST_before_TEST_F_in_same_test_case	modules/gtest/test/gtest_output_test_.cc	/^class TEST_before_TEST_F_in_same_test_case : public testing::Test {$/;\"	c	file:\n 350074: TYPED_TEST	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST(ATypedDeathTest, ShouldRunFirst) {$/;\"	f\n 350075: TYPED_TEST	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST(TypedTest, Failure) {$/;\"	f\n 350076: TYPED_TEST	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST(TypedTest, Success) {$/;\"	f\n 350077: TYPED_TEST_P	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_P(ATypeParamDeathTest, ShouldRunFirst) {$/;\"	f\n 350078: TYPED_TEST_P	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_P(TypedTestP, Failure) {$/;\"	f\n 350079: TYPED_TEST_P	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_P(TypedTestP, Success) {$/;\"	f\n 350080: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:BarEnvironment\n 350081: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:DeathTestAndMultiThreadsTest\n 350082: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:FatalFailureInFixtureConstructorTest\n 350083: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:FatalFailureInSetUpTest\n 350084: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:FooEnvironment\n 350085: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:NonFatalFailureInFixtureConstructorTest\n 350086: TearDown	modules/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;\"	f	class:NonFatalFailureInSetUpTest\n 350087: TestEq1	modules/gtest/test/gtest_output_test_.cc	/^void TestEq1(int x) {$/;\"	f\n 350088: ThreadRoutine	modules/gtest/test/gtest_output_test_.cc	/^static void ThreadRoutine(SpawnThreadNotifications* notifications) {$/;\"	f	file:\n 350089: ThreadWithScopedTrace	modules/gtest/test/gtest_output_test_.cc	/^static void ThreadWithScopedTrace(CheckPoints* check_points) {$/;\"	f	file:\n 350090: TryTestSubroutine	modules/gtest/test/gtest_output_test_.cc	/^void TryTestSubroutine() {$/;\"	f\n 350091: TypedTest	modules/gtest/test/gtest_output_test_.cc	/^class TypedTest : public testing::Test {$/;\"	c	file:\n 350092: TypedTestP	modules/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_CASE_P(TypedTestP);$/;\"	v\n 350093: TypedTestP	modules/gtest/test/gtest_output_test_.cc	/^class TypedTestP : public testing::Test {$/;\"	c	file:\n 350094: UnsignedTypes	modules/gtest/test/gtest_output_test_.cc	/^typedef testing::Types<unsigned char, unsigned int> UnsignedTypes;$/;\"	t	file:\n 350095: bar	modules/gtest/test/gtest_output_test_.cc	/^namespace bar {$/;\"	n	file:\n 350096: foo	modules/gtest/test/gtest_output_test_.cc	/^namespace foo {$/;\"	n	file:\n 350097: global_integer	modules/gtest/test/gtest_output_test_.cc	/^int global_integer = 0;$/;\"	v\n 350098: internal_skip_environment_and_ad_hoc_tests	modules/gtest/test/gtest_output_test_.cc	/^bool GTEST_FLAG(internal_skip_environment_and_ad_hoc_tests) = false;$/;\"	v\n 350099: kGoldenString	modules/gtest/test/gtest_output_test_.cc	/^static const char kGoldenString[] = \"\\\\\"Line\\\\0 1\\\\\"\\\\nLine 2\";$/;\"	v	file:\n 350100: main	modules/gtest/test/gtest_output_test_.cc	/^int main(int argc, char **argv) {$/;\"	f\n 350101: n1	modules/gtest/test/gtest_output_test_.cc	/^  Notification n1;$/;\"	m	struct:CheckPoints	file:\n 350102: n2	modules/gtest/test/gtest_output_test_.cc	/^  Notification n2;$/;\"	m	struct:CheckPoints	file:\n 350103: n3	modules/gtest/test/gtest_output_test_.cc	/^  Notification n3;$/;\"	m	struct:CheckPoints	file:\n 350104: notifications_	modules/gtest/test/gtest_output_test_.cc	/^  SpawnThreadNotifications notifications_;$/;\"	m	class:DeathTestAndMultiThreadsTest	file:\n 350105: spawn_thread_ok_to_terminate	modules/gtest/test/gtest_output_test_.cc	/^  Notification spawn_thread_ok_to_terminate;$/;\"	m	struct:SpawnThreadNotifications	file:\n 350106: spawn_thread_started	modules/gtest/test/gtest_output_test_.cc	/^  Notification spawn_thread_started;$/;\"	m	struct:SpawnThreadNotifications	file:\n 350107: thread_	modules/gtest/test/gtest_output_test_.cc	/^  scoped_ptr<ThreadWithParam<SpawnThreadNotifications*> > thread_;$/;\"	m	class:DeathTestAndMultiThreadsTest	file:\n 350108: ~FatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^  ~FatalFailureInFixtureConstructorTest() {$/;\"	f	class:FatalFailureInFixtureConstructorTest\n 350109: ~FatalFailureInSetUpTest	modules/gtest/test/gtest_output_test_.cc	/^  virtual ~FatalFailureInSetUpTest() {$/;\"	f	class:FatalFailureInSetUpTest\n 350110: ~NonFatalFailureInFixtureConstructorTest	modules/gtest/test/gtest_output_test_.cc	/^  ~NonFatalFailureInFixtureConstructorTest() {$/;\"	f	class:NonFatalFailureInFixtureConstructorTest\n 350111: ~NonFatalFailureInSetUpTest	modules/gtest/test/gtest_output_test_.cc	/^  virtual ~NonFatalFailureInSetUpTest() {$/;\"	f	class:NonFatalFailureInSetUpTest\n 350112  ASSERT_PRED1Test	modules/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate1Test ASSERT_PRED1Test;$/;\"	t	file:\n 350113  ASSERT_PRED2Test	modules/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate2Test ASSERT_PRED2Test;$/;\"	t	file:\n\n/home/rutk1t0r/src/ardupilot/ArduCopter/motor_test.cpp:\n   63          if (pwm >= MOTOR_TEST_PWM_MIN && pwm <= MOTOR_TEST_PWM_MAX ) {\n   64              // turn on motor to specified pwm vlaue\n   65:             motors.output_test(motor_test_seq, pwm);\n   66          } else {\n   67              motor_test_stop();\n\n/home/rutk1t0r/src/ardupilot/ArduCopter/setup.cpp:\n  239  \n  240  			if (set_mask & 1<<i) {\n  241: 				motors.output_test(i, pwm_high);\n  242  			}\n  243  		}\n  ...\n  266  		for (unsigned i = 0; i < max_channels; i++) {\n  267  			if (set_mask & 1<<i) {\n  268: 				motors.output_test(i, pwm_low);\n  269  			}\n  270  		}\n\n/home/rutk1t0r/src/ardupilot/ArduPlane/motor_test.cpp:\n   69      if (pwm >= MOTOR_TEST_PWM_MIN && pwm <= MOTOR_TEST_PWM_MAX ) {\n   70          // turn on motor to specified pwm vlaue\n   71:         motors->output_test(motor_test.seq, pwm);\n   72      } else {\n   73          motor_test_stop();\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.cpp:\n  270  }\n  271  \n  272: // output_test - spin a motor at the pwm value specified\n  273  //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n  274  //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n  275: void AP_MotorsCoax::output_test(uint8_t motor_seq, int16_t pwm)\n  276  {\n  277      // exit immediately if not armed\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.h:\n   42      virtual void        enable();\n   43  \n   44:     // output_test - spin a motor at the pwm value specified\n   45      //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n   46      //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n   47:     virtual void        output_test(uint8_t motor_seq, int16_t pwm);\n   48  \n   49      // output_to_motors - sends minimum values out to the motors\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli.h:\n   77      void output_min();\n   78  \n   79:     // output_test - spin a motor at the pwm value specified\n   80      //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n   81      //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n   82:     virtual void        output_test(uint8_t motor_seq, int16_t pwm) = 0;\n   83  \n   84      //\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.cpp:\n  180  }\n  181  \n  182: // output_test - spin a motor at the pwm value specified\n  183  //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n  184  //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n  185: void AP_MotorsHeli_Single::output_test(uint8_t motor_seq, int16_t pwm)\n  186  {\n  187      // exit immediately if not armed\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.h:\n   64      void enable();\n   65  \n   66:     // output_test - spin a motor at the pwm value specified\n   67      //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n   68      //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n   69:     void output_test(uint8_t motor_seq, int16_t pwm);\n   70  \n   71      // set_desired_rotor_speed - sets target rotor speed as a number from 0 ~ 1\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.cpp:\n  287  }\n  288  \n  289: // output_test - spin a motor at the pwm value specified\n  290  //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n  291  //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n  292: void AP_MotorsMatrix::output_test(uint8_t motor_seq, int16_t pwm)\n  293  {\n  294      // exit immediately if not armed\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.h:\n   35      void                enable();\n   36  \n   37:     // output_test - spin a motor at the pwm value specified\n   38      //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n   39      //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n   40:     void                output_test(uint8_t motor_seq, int16_t pwm);\n   41  \n   42      // output_to_motors - sends minimum values out to the motors\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.cpp:\n  283  }\n  284  \n  285: // output_test - spin a motor at the pwm value specified\n  286  //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n  287  //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n  288: void AP_MotorsSingle::output_test(uint8_t motor_seq, int16_t pwm)\n  289  {\n  290      // exit immediately if not armed\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.h:\n   42      virtual void        enable();\n   43  \n   44:     // output_test - spin a motor at the pwm value specified\n   45      //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n   46      //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n   47:     virtual void        output_test(uint8_t motor_seq, int16_t pwm);\n   48  \n   49      // output_to_motors - sends minimum values out to the motors\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.cpp:\n  294  }\n  295  \n  296: // output_test - spin a motor at the pwm value specified\n  297  //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n  298  //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n  299: void AP_MotorsTri::output_test(uint8_t motor_seq, int16_t pwm)\n  300  {\n  301      // exit immediately if not armed\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.h:\n   36      virtual void        enable();\n   37  \n   38:     // output_test - spin a motor at the pwm value specified\n   39      //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n   40      //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n   41:     virtual void        output_test(uint8_t motor_seq, int16_t pwm);\n   42  \n   43      // output_to_motors - sends minimum values out to the motors\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.h:\n  117      virtual void        output_min() = 0;\n  118  \n  119:     // output_test - spin a motor at the pwm value specified\n  120      //  motor_seq is the motor's sequence number from 1 to the number of motors on the frame\n  121      //  pwm value is an actual pwm value that will be output, normally in the range of 1000 ~ 2000\n  122:     virtual void        output_test(uint8_t motor_seq, int16_t pwm) = 0;\n  123  \n  124      // get_motor_mask - returns a bitmask of which outputs are being used for motors (1 means being used)\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/examples/AP_Motors_test/AP_Motors_test.cpp:\n  119      for (int8_t i=1; i <= AP_MOTORS_MAX_NUM_MOTORS; i++) {\n  120          hal.console->printf(\"Motor %d\\n\",(int)i);\n  121:         motors.output_test(i, 1150);\n  122          hal.scheduler->delay(300);\n  123:         motors.output_test(i, 1000);\n  124          hal.scheduler->delay(2000);\n  125      }\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf.map:\n 3396   .text._ZN15AP_MotorsSingle24output_armed_stabilizingEv\n 3397                  0x00000000      0x320 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 3398:  .text._ZN15AP_MotorsSingle11output_testEhs\n 3399                  0x00000000       0x4c /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 3400   .text._ZN13AP_MotorsOcta12setup_motorsEv\n ....\n 3462   .text._ZN20AP_MotorsHeli_Single9write_auxEf\n 3463                  0x00000000       0x1a /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 3464:  .text._ZN20AP_MotorsHeli_Single11output_testEhs\n 3465                  0x00000000       0x8c /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 3466   .text._ZN20AP_MotorsHeli_Single8move_yawEf\n ....\n 3482   .text._ZN13AP_MotorsCoax24output_armed_stabilizingEv\n 3483                  0x00000000      0x2c4 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 3484:  .text._ZN13AP_MotorsCoax11output_testEhs\n 3485                  0x00000000       0x4c /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 3486   .text._ZN9AP_Motors20calc_pwm_output_1to1EfRK10RC_Channel\n ....\n 3500   .text._ZN12AP_MotorsTri24output_armed_stabilizingEv\n 3501                  0x00000000      0x2e0 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 3502:  .text._ZN12AP_MotorsTri11output_testEhs\n 3503                  0x00000000       0x3a /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 3504   .text._ZN12AP_MotorsTri19thrust_compensationEv\n ....\n 24020                  0x0804dad8       0x26 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 24021   *fill*         0x0804dafe        0x2 \n 24022:  .text._ZN15AP_MotorsMatrix11output_testEhs\n 24023                  0x0804db00       0x58 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 24024   .text._ZN15AP_MotorsMatrix19thrust_compensationEv\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/module.pre.o.map:\n 136270                  0x00000000                AP_MotorsSingle::output_armed_stabilizing()\n 136271  \n 136272: .text._ZN15AP_MotorsSingle11output_testEhs\n 136273                  0x00000000       0x4c\n 136274:  .text._ZN15AP_MotorsSingle11output_testEhs\n 136275                  0x00000000       0x4c libraries/AP_Motors/AP_MotorsSingle.cpp.o\n 136276:                 0x00000000                AP_MotorsSingle::output_test(unsigned char, short)\n 136277  \n 136278  .text._ZN13AP_MotorsQuad12setup_motorsEv\n .....\n 136523                  0x00000000                AP_MotorsMatrix::set_frame_orientation(unsigned char)\n 136524  \n 136525: .text._ZN15AP_MotorsMatrix11output_testEhs\n 136526                  0x00000000       0x58\n 136527:  .text._ZN15AP_MotorsMatrix11output_testEhs\n 136528                  0x00000000       0x58 libraries/AP_Motors/AP_MotorsMatrix.cpp.o\n 136529:                 0x00000000                AP_MotorsMatrix::output_test(unsigned char, short)\n 136530  \n 136531  .text._ZN15AP_MotorsMatrix19thrust_compensationEv\n .....\n 136673                  0x00000000                AP_MotorsHeli_Single::write_aux(float)\n 136674  \n 136675: .text._ZN20AP_MotorsHeli_Single11output_testEhs\n 136676                  0x00000000       0x8c\n 136677:  .text._ZN20AP_MotorsHeli_Single11output_testEhs\n 136678                  0x00000000       0x8c libraries/AP_Motors/AP_MotorsHeli_Single.cpp.o\n 136679:                 0x00000000                AP_MotorsHeli_Single::output_test(unsigned char, short)\n 136680  \n 136681  .text._ZN20AP_MotorsHeli_Single8move_yawEf\n .....\n 136733                  0x00000000                AP_MotorsCoax::output_armed_stabilizing()\n 136734  \n 136735: .text._ZN13AP_MotorsCoax11output_testEhs\n 136736                  0x00000000       0x4c\n 136737:  .text._ZN13AP_MotorsCoax11output_testEhs\n 136738                  0x00000000       0x4c libraries/AP_Motors/AP_MotorsCoax.cpp.o\n 136739:                 0x00000000                AP_MotorsCoax::output_test(unsigned char, short)\n 136740  \n 136741  .text._ZN9AP_Motors8rc_writeEht\n .....\n 136836                  0x00000000                AP_MotorsTri::output_armed_stabilizing()\n 136837  \n 136838: .text._ZN12AP_MotorsTri11output_testEhs\n 136839                  0x00000000       0x3a\n 136840:  .text._ZN12AP_MotorsTri11output_testEhs\n 136841                  0x00000000       0x3a libraries/AP_Motors/AP_MotorsTri.cpp.o\n 136842:                 0x00000000                AP_MotorsTri::output_test(unsigned char, short)\n 136843  \n 136844  .text._ZN12AP_MotorsTri19thrust_compensationEv\n\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\n/home/rutk1t0r/src/ardupilot/modules/gtest/CMakeLists.txt:\n  226    py_test(gtest_list_tests_unittest)\n  227  \n  228:   cxx_executable(gtest_output_test_ test gtest)\n  229:   py_test(gtest_output_test)\n  230  \n  231    cxx_executable(gtest_shuffle_test_ test gtest)\n\n/home/rutk1t0r/src/ardupilot/modules/gtest/Makefile.am:\n   77    test/gtest_main_unittest.cc \\\n   78    test/gtest_no_test_unittest.cc \\\n   79:   test/gtest_output_test_.cc \\\n   80    test/gtest_pred_impl_unittest.cc \\\n   81    test/gtest_prod_test.cc \\\n   ..\n  104    test/gtest_help_test.py \\\n  105    test/gtest_list_tests_unittest.py \\\n  106:   test/gtest_output_test.py \\\n  107:   test/gtest_output_test_golden_lin.txt \\\n  108    test/gtest_shuffle_test.py \\\n  109    test/gtest_test_utils.py \\\n\n/home/rutk1t0r/src/ardupilot/modules/gtest/test/gtest_output_test.py:\n   33  \n   34  SYNOPSIS\n   35:        gtest_output_test.py --build_dir=BUILD/DIR --gengolden\n   36:          # where BUILD/DIR contains the built gtest_output_test_ file.\n   37:        gtest_output_test.py --gengolden\n   38:        gtest_output_test.py\n   39  \"\"\"\n   40  \n   ..\n   54  \n   55  # TODO(vladl@google.com): remove the _lin suffix.\n   56: GOLDEN_NAME = 'gtest_output_test_golden_lin.txt'\n   57  \n   58: PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_output_test_')\n   59  \n   60  # At least one command we exercise must not have the\n   ..\n  189  \n  190  def NormalizeOutput(output):\n  191:   \"\"\"Normalizes output (the output of gtest_output_test_.exe).\"\"\"\n  192  \n  193    output = ToUnixLineEnding(output)\n  ...\n  303  \n  304        # This code is very handy when debugging golden file differences:\n  305:       if os.getenv('DEBUG_GTEST_OUTPUT_TEST'):\n  306          open(os.path.join(\n  307              gtest_test_utils.GetSourceDir(),\n  308:             '_gtest_output_test_normalized_actual.txt'), 'wb').write(\n  309                  normalized_actual)\n  310          open(os.path.join(\n  311              gtest_test_utils.GetSourceDir(),\n  312:             '_gtest_output_test_normalized_golden.txt'), 'wb').write(\n  313                  normalized_golden)\n  314  \n\n/home/rutk1t0r/src/ardupilot/modules/gtest/test/gtest_output_test_.cc:\n   30  // The purpose of this file is to generate Google Test output under\n   31  // various conditions.  The output will then be verified by\n   32: // gtest_output_test.py to ensure that Google Test generates the\n   33  // desired messages.  Therefore, most tests in this file are MEANT TO\n   34  // FAIL.\n\n/home/rutk1t0r/src/ardupilot/modules/gtest/test/gtest_unittest.cc:\n 4558    // the right file path and line number the same way, as\n 4559    // EXPECT_NONFATAL_FAILURE() doesn't get to see the file path and\n 4560:   // line number.  Instead, we do that in gtest_output_test_.cc.\n 4561  }\n 4562  \n\n/home/rutk1t0r/src/Firmware/unittests/googletest/CMakeLists.txt:\n  226    py_test(gtest_list_tests_unittest)\n  227  \n  228:   cxx_executable(gtest_output_test_ test gtest)\n  229:   py_test(gtest_output_test)\n  230  \n  231    cxx_executable(gtest_shuffle_test_ test gtest)\n\n/home/rutk1t0r/src/Firmware/unittests/googletest/Makefile.am:\n   77    test/gtest_main_unittest.cc \\\n   78    test/gtest_no_test_unittest.cc \\\n   79:   test/gtest_output_test_.cc \\\n   80    test/gtest_pred_impl_unittest.cc \\\n   81    test/gtest_prod_test.cc \\\n   ..\n  104    test/gtest_help_test.py \\\n  105    test/gtest_list_tests_unittest.py \\\n  106:   test/gtest_output_test.py \\\n  107:   test/gtest_output_test_golden_lin.txt \\\n  108    test/gtest_shuffle_test.py \\\n  109    test/gtest_test_utils.py \\\n\n/home/rutk1t0r/src/Firmware/unittests/googletest/test/gtest_output_test.py:\n   33  \n   34  SYNOPSIS\n   35:        gtest_output_test.py --build_dir=BUILD/DIR --gengolden\n   36:          # where BUILD/DIR contains the built gtest_output_test_ file.\n   37:        gtest_output_test.py --gengolden\n   38:        gtest_output_test.py\n   39  \"\"\"\n   40  \n   ..\n   54  \n   55  # TODO(vladl@google.com): remove the _lin suffix.\n   56: GOLDEN_NAME = 'gtest_output_test_golden_lin.txt'\n   57  \n   58: PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_output_test_')\n   59  \n   60  # At least one command we exercise must not have the\n   ..\n  189  \n  190  def NormalizeOutput(output):\n  191:   \"\"\"Normalizes output (the output of gtest_output_test_.exe).\"\"\"\n  192  \n  193    output = ToUnixLineEnding(output)\n  ...\n  303  \n  304        # This code is very handy when debugging golden file differences:\n  305:       if os.getenv('DEBUG_GTEST_OUTPUT_TEST'):\n  306          open(os.path.join(\n  307              gtest_test_utils.GetSourceDir(),\n  308:             '_gtest_output_test_normalized_actual.txt'), 'wb').write(\n  309                  normalized_actual)\n  310          open(os.path.join(\n  311              gtest_test_utils.GetSourceDir(),\n  312:             '_gtest_output_test_normalized_golden.txt'), 'wb').write(\n  313                  normalized_golden)\n  314  \n\n/home/rutk1t0r/src/Firmware/unittests/googletest/test/gtest_output_test_.cc:\n   30  // The purpose of this file is to generate Google Test output under\n   31  // various conditions.  The output will then be verified by\n   32: // gtest_output_test.py to ensure that Google Test generates the\n   33  // desired messages.  Therefore, most tests in this file are MEANT TO\n   34  // FAIL.\n\n/home/rutk1t0r/src/Firmware/unittests/googletest/test/gtest_unittest.cc:\n 4558    // the right file path and line number the same way, as\n 4559    // EXPECT_NONFATAL_FAILURE() doesn't get to see the file path and\n 4560:   // line number.  Instead, we do that in gtest_output_test_.cc.\n 4561  }\n 4562  \n\n/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/drivers/video/omap2/dss/venc.c:\n   85  #define VENC_GEN_CTRL				0xB8\n   86  #define VENC_OUTPUT_CONTROL			0xC4\n   87: #define VENC_OUTPUT_TEST			0xC8\n   88  #define VENC_DAC_B__DAC_C			0xC8\n   89  \n   ..\n  728  	DUMPREG(VENC_GEN_CTRL);\n  729  	DUMPREG(VENC_OUTPUT_CONTROL);\n  730: 	DUMPREG(VENC_OUTPUT_TEST);\n  731  \n  732  	venc_runtime_put();\n\n/home/rutk1t0r/high_tech/linux/kernel/src/linux-4.7/drivers/gpu/drm/omapdrm/dss/venc.c:\n   86  #define VENC_GEN_CTRL				0xB8\n   87  #define VENC_OUTPUT_CONTROL			0xC4\n   88: #define VENC_OUTPUT_TEST			0xC8\n   89  #define VENC_DAC_B__DAC_C			0xC8\n   90  \n   ..\n  714  	DUMPREG(VENC_GEN_CTRL);\n  715  	DUMPREG(VENC_OUTPUT_CONTROL);\n  716: 	DUMPREG(VENC_OUTPUT_TEST);\n  717  \n  718  	venc_runtime_put();\n\n/home/rutk1t0r/high_tech/linux/kernel/src/linux-4.7/drivers/video/fbdev/omap2/omapfb/dss/venc.c:\n   86  #define VENC_GEN_CTRL				0xB8\n   87  #define VENC_OUTPUT_CONTROL			0xC4\n   88: #define VENC_OUTPUT_TEST			0xC8\n   89  #define VENC_DAC_B__DAC_C			0xC8\n   90  \n   ..\n  702  	DUMPREG(VENC_GEN_CTRL);\n  703  	DUMPREG(VENC_OUTPUT_CONTROL);\n  704: 	DUMPREG(VENC_OUTPUT_TEST);\n  705  \n  706  	venc_runtime_put();\n\n462 matches across 33 files\n",
			"settings":
			{
				"buffer_size": 110814,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "libraries/AP_Motors/AP_MotorsMatrix.cpp",
			"settings":
			{
				"buffer_size": 15682,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_Motors_Class.h",
			"settings":
			{
				"buffer_size": 9369,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/// -*- tab-width: 4; Mode: C++; c-basic-offset: 4; indent-tabs-mode: nil -*-\n/*\n   This program is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n#pragma once\n/*\n  This is the main Copter class\n */\n\n////////////////////////////////////////////////////////////////////////////////\n// Header includes\n////////////////////////////////////////////////////////////////////////////////\n\n#include <cmath>\n#include <stdio.h>\n#include <stdarg.h>\n\n#include <AP_HAL/AP_HAL.h>\n\n// Common dependencies\n#include <AP_Common/AP_Common.h>\n#include <AP_Common/Location.h>\n#include <AP_Menu/AP_Menu.h>\n#include <AP_Param/AP_Param.h>\n#include <StorageManager/StorageManager.h>\n\n// Application dependencies\n#include <GCS_MAVLink/GCS.h>\n#include <GCS_MAVLink/GCS_MAVLink.h>        // MAVLink GCS definitions\n#include <AP_SerialManager/AP_SerialManager.h>   // Serial manager library\n#include <AP_GPS/AP_GPS.h>             // ArduPilot GPS library\n#include <DataFlash/DataFlash.h>          // ArduPilot Mega Flash Memory Library\n#include <AP_ADC/AP_ADC.h>             // ArduPilot Mega Analog to Digital Converter Library\n#include <AP_Baro/AP_Baro.h>\n#include <AP_Compass/AP_Compass.h>         // ArduPilot Mega Magnetometer Library\n#include <AP_Math/AP_Math.h>            // ArduPilot Mega Vector/Matrix math Library\n#include <AP_AccelCal/AP_AccelCal.h>                // interface and maths for accelerometer calibration\n#include <AP_InertialSensor/AP_InertialSensor.h>  // ArduPilot Mega Inertial Sensor (accel & gyro) Library\n#include <AP_AHRS/AP_AHRS.h>\n#include <AP_NavEKF/AP_NavEKF.h>\n#include <AP_NavEKF2/AP_NavEKF2.h>\n#include <AP_Mission/AP_Mission.h>         // Mission command library\n#include <AP_Rally/AP_Rally.h>           // Rally point library\n#include <AC_PID/AC_PID.h>             // PID library\n#include <AC_PID/AC_PI_2D.h>           // PID library (2-axis)\n#include <AC_PID/AC_HELI_PID.h>        // Heli specific Rate PID library\n#include <AC_PID/AC_P.h>               // P library\n#include <AC_AttitudeControl/AC_AttitudeControl_Multi.h> // Attitude control library\n#include <AC_AttitudeControl/AC_AttitudeControl_Heli.h> // Attitude control library for traditional helicopter\n#include <AC_AttitudeControl/AC_PosControl.h>      // Position control library\n#include <RC_Channel/RC_Channel.h>         // RC Channel Library\n#include <AP_Motors/AP_Motors.h>          // AP Motors library\n#include <AP_RangeFinder/AP_RangeFinder.h>     // Range finder library\n#include <AP_OpticalFlow/AP_OpticalFlow.h>     // Optical Flow library\n#include <AP_RSSI/AP_RSSI.h>                   // RSSI Library\n#include <Filter/Filter.h>             // Filter library\n#include <AP_Buffer/AP_Buffer.h>          // APM FIFO Buffer\n#include <AP_Relay/AP_Relay.h>           // APM relay\n#include <AP_ServoRelayEvents/AP_ServoRelayEvents.h>\n#include <AP_Camera/AP_Camera.h>          // Photo or video camera\n#include <AP_Mount/AP_Mount.h>           // Camera/Antenna mount\n#include <AP_Airspeed/AP_Airspeed.h>        // needed for AHRS build\n#include <AP_Vehicle/AP_Vehicle.h>         // needed for AHRS build\n#include <AP_InertialNav/AP_InertialNav.h>     // ArduPilot Mega inertial navigation library\n#include <AC_WPNav/AC_WPNav.h>           // ArduCopter waypoint navigation library\n#include <AC_WPNav/AC_Circle.h>          // circle navigation library\n#include <AP_Declination/AP_Declination.h>     // ArduPilot Mega Declination Helper Library\n#include <AC_Fence/AC_Fence.h>           // Arducopter Fence library\n#include <AP_Scheduler/AP_Scheduler.h>       // main loop scheduler\n#include <AP_RCMapper/AP_RCMapper.h>        // RC input mapping library\n#include <AP_Notify/AP_Notify.h>          // Notify library\n#include <AP_BattMonitor/AP_BattMonitor.h>     // Battery monitor library\n#include <AP_BoardConfig/AP_BoardConfig.h>     // board configuration library\n#include <AP_Frsky_Telem/AP_Frsky_Telem.h>\n#include <AP_LandingGear/AP_LandingGear.h>     // Landing Gear library\n#include <AP_Terrain/AP_Terrain.h>\n#include <AP_ADSB/AP_ADSB.h>\n#include <AP_RPM/AP_RPM.h>\n#include <AC_InputManager/AC_InputManager.h>        // Pilot input handling library\n#include <AC_InputManager/AC_InputManager_Heli.h>   // Heli specific pilot input handling library\n\n// Configuration\n#include \"defines.h\"\n#include \"config.h\"\n\n// libraries which are dependent on #defines in defines.h and/or config.h\n#if SPRAYER == ENABLED\n#include <AC_Sprayer/AC_Sprayer.h>         // crop sprayer library\n#endif\n#if EPM_ENABLED == ENABLED\n#include <AP_EPM/AP_EPM.h>             // EPM cargo gripper stuff\n#endif\n#if PARACHUTE == ENABLED\n#include <AP_Parachute/AP_Parachute.h>       // Parachute release library\n#endif\n#if PRECISION_LANDING == ENABLED\n#include <AC_PrecLand/AC_PrecLand.h>\n#include <AP_IRLock/AP_IRLock.h>\n#endif\n\n// Local modules\n#include \"Parameters.h\"\n\n#if CONFIG_HAL_BOARD == HAL_BOARD_SITL\n#include <SITL/SITL.h>\n#endif\n\nclass Copter : public AP_HAL::HAL::Callbacks {\npublic:\n    friend class GCS_MAVLINK;\n    friend class Parameters;\n\n    Copter(void);\n\n    // HAL::Callbacks implementation.\n    void setup() override;\n    void loop() override;\n\nprivate:\n    // key aircraft parameters passed to multiple libraries\n    AP_Vehicle::MultiCopter aparm;\n\n\n    // cliSerial isn't strictly necessary - it is an alias for hal.console. It may\n    // be deprecated in favor of hal.console in later releases.\n    AP_HAL::BetterStream* cliSerial;\n\n    // Global parameters are all contained within the 'g' class.\n    Parameters g;\n\n    // main loop scheduler\n    AP_Scheduler scheduler;\n\n    // AP_Notify instance\n    AP_Notify notify;\n\n    // used to detect MAVLink acks from GCS to stop compassmot\n    uint8_t command_ack_counter;\n\n    // has a log download started?\n    bool in_log_download;\n\n    // primary input control channels\n    RC_Channel *channel_roll;\n    RC_Channel *channel_pitch;\n    RC_Channel *channel_throttle;\n    RC_Channel *channel_yaw;\n\n    // Dataflash\n    DataFlash_Class DataFlash;\n\n    AP_GPS gps;\n\n    // flight modes convenience array\n    AP_Int8 *flight_modes;\n\n    AP_Baro barometer;\n    Compass compass;\n    AP_InertialSensor ins;\n\n    RangeFinder rangefinder {serial_manager};\n    struct {\n        bool enabled:1;\n        bool alt_healthy:1; // true if we can trust the altitude from the rangefinder\n        int16_t alt_cm;     // tilt compensated altitude (in cm) from rangefinder\n        uint32_t last_healthy_ms;\n        LowPassFilterFloat alt_cm_filt; // altitude filter\n    } rangefinder_state = { false, false, 0, 0 };\n\n    AP_RPM rpm_sensor;\n\n    // Inertial Navigation EKF\n    NavEKF EKF{&ahrs, barometer, rangefinder};\n    NavEKF2 EKF2{&ahrs, barometer, rangefinder};\n    AP_AHRS_NavEKF ahrs{ins, barometer, gps, rangefinder, EKF, EKF2, AP_AHRS_NavEKF::FLAG_ALWAYS_USE_EKF};\n\n#if CONFIG_HAL_BOARD == HAL_BOARD_SITL\n    SITL::SITL sitl;\n#endif\n\n    // Mission library\n    AP_Mission mission;\n\n    // Optical flow sensor\n#if OPTFLOW == ENABLED\n    OpticalFlow optflow{ahrs};\n#endif\n\n    // gnd speed limit required to observe optical flow sensor limits\n    float ekfGndSpdLimit;\n\n    // scale factor applied to velocity controller gain to prevent optical flow noise causing excessive angle demand noise\n    float ekfNavVelGainScaler;\n\n    // system time in milliseconds of last recorded yaw reset from ekf\n    uint32_t ekfYawReset_ms = 0;\n\n    // GCS selection\n    AP_SerialManager serial_manager;\n    static const uint8_t num_gcs = MAVLINK_COMM_NUM_BUFFERS;\n\n    GCS_MAVLINK gcs[MAVLINK_COMM_NUM_BUFFERS];\n\n    // User variables\n#ifdef USERHOOK_VARIABLES\n# include USERHOOK_VARIABLES\n#endif\n\n    // Documentation of GLobals:\n    union {\n        struct {\n            uint8_t unused1             : 1; // 0\n            uint8_t simple_mode         : 2; // 1,2     // This is the state of simple mode : 0 = disabled ; 1 = SIMPLE ; 2 = SUPERSIMPLE\n            uint8_t pre_arm_rc_check    : 1; // 3       // true if rc input pre-arm checks have been completed successfully\n            uint8_t pre_arm_check       : 1; // 4       // true if all pre-arm checks (rc, accel calibration, gps lock) have been performed\n            uint8_t auto_armed          : 1; // 5       // stops auto missions from beginning until throttle is raised\n            uint8_t logging_started     : 1; // 6       // true if dataflash logging has started\n            uint8_t land_complete       : 1; // 7       // true if we have detected a landing\n            uint8_t new_radio_frame     : 1; // 8       // Set true if we have new PWM data to act on from the Radio\n            uint8_t usb_connected       : 1; // 9       // true if APM is powered from USB connection\n            uint8_t rc_receiver_present : 1; // 10      // true if we have an rc receiver present (i.e. if we've ever received an update\n            uint8_t compass_mot         : 1; // 11      // true if we are currently performing compassmot calibration\n            uint8_t motor_test          : 1; // 12      // true if we are currently performing the motors test\n            uint8_t initialised         : 1; // 13      // true once the init_ardupilot function has completed.  Extended status to GCS is not sent until this completes\n            uint8_t land_complete_maybe : 1; // 14      // true if we may have landed (less strict version of land_complete)\n            uint8_t throttle_zero       : 1; // 15      // true if the throttle stick is at zero, debounced, determines if pilot intends shut-down when not using motor interlock\n            uint8_t system_time_set     : 1; // 16      // true if the system time has been set from the GPS\n            uint8_t gps_base_pos_set    : 1; // 17      // true when the gps base position has been set (used for RTK gps only)\n            enum HomeState home_state   : 2; // 18,19   // home status (unset, set, locked)\n            uint8_t using_interlock     : 1; // 20      // aux switch motor interlock function is in use\n            uint8_t motor_emergency_stop: 1; // 21      // motor estop switch, shuts off motors when enabled\n            uint8_t land_repo_active    : 1; // 22      // true if the pilot is overriding the landing position\n        };\n        uint32_t value;\n    } ap;\n\n    // This is the state of the flight control system\n    // There are multiple states defined such as STABILIZE, ACRO,\n    control_mode_t control_mode;\n    mode_reason_t control_mode_reason = MODE_REASON_UNKNOWN;\n\n    control_mode_t prev_control_mode;\n    mode_reason_t prev_control_mode_reason = MODE_REASON_UNKNOWN;\n\n    // Structure used to detect changes in the flight mode control switch\n    struct {\n        int8_t debounced_switch_position;   // currently used switch position\n        int8_t last_switch_position;        // switch position in previous iteration\n        uint32_t last_edge_time_ms;         // system time that switch position was last changed\n    } control_switch_state;\n\n    struct {\n        bool running;\n        float max_speed;\n        float alt_delta;\n        uint32_t start_ms;\n    } takeoff_state;\n\n    RCMapper rcmap;\n\n    // board specific config\n    AP_BoardConfig BoardConfig;\n\n    // receiver RSSI\n    uint8_t receiver_rssi;\n\n    // Failsafe\n    struct {\n        uint8_t rc_override_active  : 1; // 0   // true if rc control are overwritten by ground station\n        uint8_t radio               : 1; // 1   // A status flag for the radio failsafe\n        uint8_t battery             : 1; // 2   // A status flag for the battery failsafe\n        uint8_t gcs                 : 1; // 4   // A status flag for the ground station failsafe\n        uint8_t ekf                 : 1; // 5   // true if ekf failsafe has occurred\n        uint8_t terrain             : 1; // 6   // true if the missing terrain data failsafe has occurred\n\n        int8_t radio_counter;            // number of iterations with throttle below throttle_fs_value\n\n        uint32_t last_heartbeat_ms;      // the time when the last HEARTBEAT message arrived from a GCS - used for triggering gcs failsafe\n        uint32_t terrain_first_failure_ms;  // the first time terrain data access failed - used to calculate the duration of the failure\n        uint32_t terrain_last_failure_ms;   // the most recent time terrain data access failed\n    } failsafe;\n\n    // sensor health for logging\n    struct {\n        uint8_t baro        : 1;    // true if baro is healthy\n        uint8_t compass     : 1;    // true if compass is healthy\n    } sensor_health;\n\n    // Motor Output\n#if FRAME_CONFIG == QUAD_FRAME\n #define MOTOR_CLASS AP_MotorsQuad\n#elif FRAME_CONFIG == TRI_FRAME\n #define MOTOR_CLASS AP_MotorsTri\n#elif FRAME_CONFIG == HEXA_FRAME\n #define MOTOR_CLASS AP_MotorsHexa\n#elif FRAME_CONFIG == Y6_FRAME\n #define MOTOR_CLASS AP_MotorsY6\n#elif FRAME_CONFIG == OCTA_FRAME\n #define MOTOR_CLASS AP_MotorsOcta\n#elif FRAME_CONFIG == OCTA_QUAD_FRAME\n #define MOTOR_CLASS AP_MotorsOctaQuad\n#elif FRAME_CONFIG == HELI_FRAME\n #define MOTOR_CLASS AP_MotorsHeli_Single\n#elif FRAME_CONFIG == SINGLE_FRAME\n #define MOTOR_CLASS AP_MotorsSingle\n#elif FRAME_CONFIG == COAX_FRAME\n #define MOTOR_CLASS AP_MotorsCoax\n#else\n #error Unrecognised frame type\n#endif\n\n    MOTOR_CLASS motors;\n\n    // GPS variables\n    // Sometimes we need to remove the scaling for distance calcs\n    float scaleLongDown;\n\n    // Location & Navigation\n    int32_t wp_bearing;\n    // The location of home in relation to the copter in centi-degrees\n    int32_t home_bearing;\n    // distance between plane and home in cm\n    int32_t home_distance;\n    // distance between plane and next waypoint in cm.\n    uint32_t wp_distance;\n    uint8_t land_state;              // records state of land (flying to location, descending)\n\n    // Auto\n    AutoMode auto_mode;   // controls which auto controller is run\n\n    // Guided\n    GuidedMode guided_mode;  // controls which controller is run (pos or vel)\n\n    // RTL\n    RTLState rtl_state;  // records state of rtl (initial climb, returning home, etc)\n    bool rtl_state_complete; // set to true if the current state is completed\n\n    struct {\n        // NEU w/ Z element alt-above-ekf-origin unless use_terrain is true in which case Z element is alt-above-terrain\n        Location_Class origin_point;\n        Location_Class climb_target;\n        Location_Class return_target;\n        Location_Class descent_target;\n        bool land;\n        bool terrain_used;\n    } rtl_path;\n\n    // Circle\n    bool circle_pilot_yaw_override; // true if pilot is overriding yaw\n\n    // SIMPLE Mode\n    // Used to track the orientation of the copter for Simple mode. This value is reset at each arming\n    // or in SuperSimple mode when the copter leaves a 20m radius from home.\n    float simple_cos_yaw;\n    float simple_sin_yaw;\n    int32_t super_simple_last_bearing;\n    float super_simple_cos_yaw;\n    float super_simple_sin_yaw;\n\n    // Stores initial bearing when armed - initial simple bearing is modified in super simple mode so not suitable\n    int32_t initial_armed_bearing;\n\n    // Throttle variables\n    float throttle_average;              // estimated throttle required to hover\n    int16_t desired_climb_rate;          // pilot desired climb rate - for logging purposes only\n\n    // Loiter control\n    uint16_t loiter_time_max;                // How long we should stay in Loiter Mode for mission scripting (time in seconds)\n    uint32_t loiter_time;                    // How long have we been loitering - The start time in millis\n\n    // Brake\n    uint32_t brake_timeout_start;\n    uint32_t brake_timeout_ms;\n\n    // Delay the next navigation command\n    int32_t nav_delay_time_max;  // used for delaying the navigation commands (eg land,takeoff etc.)\n    uint32_t nav_delay_time_start;\n\n    // Flip\n    Vector3f flip_orig_attitude;         // original copter attitude before flip\n\n    // Throw\n    bool throw_early_exit_interlock = true; // value of the throttle interlock that must be restored when exiting throw mode early\n    bool throw_flight_commenced = false;    // true when the throw has been detected and the motors and control loops are running\n    uint32_t throw_free_fall_start_ms = 0;  // system time free fall was detected\n    float throw_free_fall_start_velz = 0.0f;// vertical velocity when free fall was detected\n\n    // Battery Sensors\n    AP_BattMonitor battery;\n\n    // FrSky telemetry support\n#if FRSKY_TELEM_ENABLED == ENABLED\n    AP_Frsky_Telem frsky_telemetry;\n#endif\n\n    // Altitude\n    // The cm/s we are moving up or down based on filtered data - Positive = UP\n    int16_t climb_rate;\n    float target_rangefinder_alt;   // desired altitude in cm above the ground\n    int32_t baro_alt;            // barometer altitude in cm above home\n    float baro_climbrate;        // barometer climbrate in cm/s\n    LowPassFilterVector3f land_accel_ef_filter; // accelerations for land and crash detector tests\n\n    // filtered pilot's throttle input used to cancel landing if throttle held high\n    LowPassFilterFloat rc_throttle_control_in_filter;\n\n    // 3D Location vectors\n    // Current location of the copter (altitude is relative to home)\n    Location_Class current_loc;\n\n    // Navigation Yaw control\n    // auto flight mode's yaw mode\n    uint8_t auto_yaw_mode;\n\n    // Yaw will point at this location if auto_yaw_mode is set to AUTO_YAW_ROI\n    Vector3f roi_WP;\n\n    // bearing from current location to the yaw_look_at_WP\n    float yaw_look_at_WP_bearing;\n\n    // yaw used for YAW_LOOK_AT_HEADING yaw_mode\n    int32_t yaw_look_at_heading;\n\n    // Deg/s we should turn\n    int16_t yaw_look_at_heading_slew;\n\n    // heading when in yaw_look_ahead_bearing\n    float yaw_look_ahead_bearing;\n\n    // Delay Mission Scripting Command\n    int32_t condition_value;  // used in condition commands (eg delay, change alt, etc.)\n    uint32_t condition_start;\n\n    // IMU variables\n    // Integration time (in seconds) for the gyros (DCM algorithm)\n    // Updated with the fast loop\n    float G_Dt;\n\n    // Inertial Navigation\n    AP_InertialNav_NavEKF inertial_nav;\n\n    // Attitude, Position and Waypoint navigation objects\n    // To-Do: move inertial nav up or other navigation variables down here\n#if FRAME_CONFIG == HELI_FRAME\n    AC_AttitudeControl_Heli attitude_control;\n#else\n    AC_AttitudeControl_Multi attitude_control;\n#endif\n    AC_PosControl pos_control;\n    AC_WPNav wp_nav;\n    AC_Circle circle_nav;\n\n    // Performance monitoring\n    int16_t pmTest1;\n\n    // System Timers\n    // --------------\n    // Time in microseconds of main control loop\n    uint32_t fast_loopTimer;\n    // Counter of main loop executions.  Used for performance monitoring and failsafe processing\n    uint16_t mainLoop_count;\n    // Loiter timer - Records how long we have been in loiter\n    uint32_t rtl_loiter_start_time;\n\n    // Used to exit the roll and pitch auto trim function\n    uint8_t auto_trim_counter;\n\n    // Reference to the relay object\n    AP_Relay relay;\n\n    // handle repeated servo and relay events\n    AP_ServoRelayEvents ServoRelayEvents;\n\n    // Reference to the camera object (it uses the relay object inside it)\n#if CAMERA == ENABLED\n    AP_Camera camera;\n#endif\n\n    // Camera/Antenna mount tracking and stabilisation stuff\n#if MOUNT == ENABLED\n    // current_loc uses the baro/gps soloution for altitude rather than gps only.\n    AP_Mount camera_mount;\n#endif\n\n    // AC_Fence library to reduce fly-aways\n#if AC_FENCE == ENABLED\n    AC_Fence    fence;\n#endif\n\n    // Rally library\n#if AC_RALLY == ENABLED\n    AP_Rally rally;\n#endif\n\n    // RSSI \n    AP_RSSI rssi;      \n\n    // Crop Sprayer\n#if SPRAYER == ENABLED\n    AC_Sprayer sprayer;\n#endif\n\n    // EPM Cargo Griper\n#if EPM_ENABLED == ENABLED\n    AP_EPM epm;\n#endif\n\n    // Parachute release\n#if PARACHUTE == ENABLED\n    AP_Parachute parachute;\n#endif\n\n    // Landing Gear Controller\n    AP_LandingGear landinggear;\n\n    // terrain handling\n#if AP_TERRAIN_AVAILABLE && AC_TERRAIN\n    AP_Terrain terrain;\n#endif\n\n    // Precision Landing\n#if PRECISION_LANDING == ENABLED\n    AC_PrecLand precland;\n#endif\n\n    // Pilot Input Management Library\n    // Only used for Helicopter for AC3.3, to be expanded to include Multirotor\n    // child class for AC3.4\n#if FRAME_CONFIG == HELI_FRAME\n    AC_InputManager_Heli input_manager;\n#endif\n\n    AP_ADSB adsb {ahrs};\n\n    // use this to prevent recursion during sensor init\n    bool in_mavlink_delay;\n\n    // true if we are out of time in our event timeslice\n    bool gcs_out_of_time;\n\n    // Top-level logic\n    // setup the var_info table\n    AP_Param param_loader;\n\n#if FRAME_CONFIG == HELI_FRAME\n    // Mode filter to reject RC Input glitches.  Filter size is 5, and it draws the 4th element, so it can reject 3 low glitches,\n    // and 1 high glitch.  This is because any \"off\" glitches can be highly problematic for a helicopter running an ESC\n    // governor.  Even a single \"off\" frame can cause the rotor to slow dramatically and take a long time to restart.\n    ModeFilterInt16_Size5 rotor_speed_deglitch_filter {4};\n\n    // Tradheli flags\n    struct {\n        uint8_t dynamic_flight          : 1;    // 0   // true if we are moving at a significant speed (used to turn on/off leaky I terms)\n        uint8_t init_targets_on_arming  : 1;    // 1   // true if we have been disarmed, and need to reset rate controller targets when we arm\n    } heli_flags;\n#endif\n\n#if GNDEFFECT_COMPENSATION == ENABLED\n    // ground effect detector\n    struct {\n        bool takeoff_expected;\n        bool touchdown_expected;\n        uint32_t takeoff_time_ms;\n        float takeoff_alt_cm;\n    } gndeffect_state;\n#endif // GNDEFFECT_COMPENSATION == ENABLED\n\n    static const AP_Scheduler::Task scheduler_tasks[];\n    static const AP_Param::Info var_info[];\n    static const struct LogStructure log_structure[];\n    \n    static bool arm_ok;   //自定义解锁开关,默认构造为false，表示没有进行油门解锁\n\n    \n     //newflightmode\n    bool newflightmode_init(bool ignore_checks);\n    void newflightmode_run();\n\n\n\n    //自己新加的方法，使得自动解锁实现,直接模拟遥控器变量试试，10Hz调度\n    void auto_arm(void);\n    void auto_althold_fly(void);\n\n    void compass_accumulate(void);\n    void compass_cal_update(void);\n    void barometer_accumulate(void);\n    void perf_update(void);\n    void fast_loop();\n    void rc_loop();\n    void throttle_loop();\n    void update_mount();\n    void update_trigger(void);\n    void update_batt_compass(void);\n    void ten_hz_logging_loop();\n    void twentyfive_hz_logging();\n    void three_hz_loop();\n    void one_hz_loop();\n    void update_GPS(void);\n    void init_simple_bearing();\n    void update_simple_mode(void);\n    void update_super_simple_bearing(bool force_update);\n    void read_AHRS(void);\n    void update_altitude();\n    void set_home_state(enum HomeState new_home_state);\n    bool home_is_set();\n    void set_auto_armed(bool b);\n    void set_simple_mode(uint8_t b);\n    void set_failsafe_radio(bool b);\n    void set_failsafe_battery(bool b);\n    void set_failsafe_gcs(bool b);\n    void set_land_complete(bool b);\n    void set_land_complete_maybe(bool b);\n    void set_pre_arm_check(bool b);\n    void set_pre_arm_rc_check(bool b);\n    void update_using_interlock();\n    void set_motor_emergency_stop(bool b);\n    float get_smoothing_gain();\n    void get_pilot_desired_lean_angles(float roll_in, float pitch_in, float &roll_out, float &pitch_out, float angle_max);\n    float get_pilot_desired_yaw_rate(int16_t stick_angle);\n    void check_ekf_yaw_reset();\n    float get_roi_yaw();\n    float get_look_ahead_yaw();\n    void update_thr_average();\n    void set_throttle_takeoff();\n    float get_pilot_desired_throttle(int16_t throttle_control);\n    float get_pilot_desired_climb_rate(float throttle_control);\n    float get_non_takeoff_throttle();\n    float get_takeoff_trigger_throttle();\n    float get_throttle_pre_takeoff(float input_thr);\n    float get_surface_tracking_climb_rate(int16_t target_rate, float current_alt_target, float dt);\n    void set_accel_throttle_I_from_pilot_throttle(float pilot_throttle);\n    void update_poscon_alt_max();\n    void rotate_body_frame_to_NE(float &x, float &y);\n    void gcs_send_heartbeat(void);\n    void gcs_send_deferred(void);\n    void send_heartbeat(mavlink_channel_t chan);\n    void send_attitude(mavlink_channel_t chan);\n    void send_limits_status(mavlink_channel_t chan);\n    void send_extended_status1(mavlink_channel_t chan);\n    void send_location(mavlink_channel_t chan);\n    void send_nav_controller_output(mavlink_channel_t chan);\n    void send_simstate(mavlink_channel_t chan);\n    void send_hwstatus(mavlink_channel_t chan);\n    void send_servo_out(mavlink_channel_t chan);\n    void send_radio_out(mavlink_channel_t chan);\n    void send_vfr_hud(mavlink_channel_t chan);\n    void send_current_waypoint(mavlink_channel_t chan);\n    void send_rangefinder(mavlink_channel_t chan);\n    void send_rpm(mavlink_channel_t chan);\n    void rpm_update();\n    void send_pid_tuning(mavlink_channel_t chan);\n    bool telemetry_delayed(mavlink_channel_t chan);\n    void gcs_send_message(enum ap_message id);\n    void gcs_send_mission_item_reached_message(uint16_t mission_index);\n    void gcs_data_stream_send(void);\n    void gcs_check_input(void);\n    void gcs_send_text(MAV_SEVERITY severity, const char *str);\n    void do_erase_logs(void);\n    void Log_Write_AutoTune(uint8_t axis, uint8_t tune_step, float meas_target, float meas_min, float meas_max, float new_gain_rp, float new_gain_rd, float new_gain_sp, float new_ddt);\n    void Log_Write_AutoTuneDetails(float angle_cd, float rate_cds);\n    void Log_Write_Current();\n    void Log_Write_Optflow();\n    void Log_Write_Nav_Tuning();\n    void Log_Write_Control_Tuning();\n    void Log_Write_Performance();\n    void Log_Write_Attitude();\n    void Log_Write_MotBatt();\n    void Log_Write_Startup();\n    void Log_Write_Event(uint8_t id);\n    void Log_Write_Data(uint8_t id, int32_t value);\n    void Log_Write_Data(uint8_t id, uint32_t value);\n    void Log_Write_Data(uint8_t id, int16_t value);\n    void Log_Write_Data(uint8_t id, uint16_t value);\n    void Log_Write_Data(uint8_t id, float value);\n    void Log_Write_Error(uint8_t sub_system, uint8_t error_code);\n    void Log_Write_Baro(void);\n    void Log_Write_Parameter_Tuning(uint8_t param, float tuning_val, int16_t control_in, int16_t tune_low, int16_t tune_high);\n    void Log_Write_Home_And_Origin();\n    void Log_Sensor_Health();\n#if FRAME_CONFIG == HELI_FRAME\n    void Log_Write_Heli(void);\n#endif\n    void Log_Write_Precland();\n    void Log_Write_GuidedTarget(uint8_t target_type, const Vector3f& pos_target, const Vector3f& vel_target);\n    void Log_Write_Vehicle_Startup_Messages();\n    void Log_Read(uint16_t log_num, uint16_t start_page, uint16_t end_page);\n    void start_logging() ;\n    void load_parameters(void);\n    void convert_pid_parameters(void);\n    void userhook_init();\n    void userhook_FastLoop();\n    void userhook_50Hz();\n    void userhook_MediumLoop();\n    void userhook_SlowLoop();\n    void userhook_SuperSlowLoop();\n    void update_home_from_EKF();\n    void set_home_to_current_location_inflight();\n    bool set_home_to_current_location();\n    bool set_home_to_current_location_and_lock();\n    bool set_home_and_lock(const Location& loc);\n    bool set_home(const Location& loc);\n    bool far_from_EKF_origin(const Location& loc);\n    void set_system_time_from_GPS();\n    void exit_mission();\n    void do_RTL(void);\n    bool verify_takeoff();\n    bool verify_land();\n    bool verify_loiter_unlimited();\n    bool verify_loiter_time();\n    bool verify_RTL();\n    bool verify_wait_delay();\n    bool verify_within_distance();\n    bool verify_yaw();\n    void do_take_picture();\n    void log_picture();\n    uint8_t mavlink_compassmot(mavlink_channel_t chan);\n    void delay(uint32_t ms);\n    bool acro_init(bool ignore_checks);\n    void acro_run();\n    void get_pilot_desired_angle_rates(int16_t roll_in, int16_t pitch_in, int16_t yaw_in, float &roll_out, float &pitch_out, float &yaw_out);\n    bool althold_init(bool ignore_checks);\n    void althold_run();\n    bool auto_init(bool ignore_checks);\n    void auto_run();\n    void auto_takeoff_start(const Location& dest_loc);\n    void auto_takeoff_run();\n    void auto_wp_start(const Vector3f& destination);\n    void auto_wp_start(const Location_Class& dest_loc);\n    void auto_wp_run();\n    void auto_spline_run();\n    void auto_land_start();\n    void auto_land_start(const Vector3f& destination);\n    void auto_land_run();\n    void auto_rtl_start();\n    void auto_rtl_run();\n    void auto_circle_movetoedge_start(const Location_Class &circle_center, float radius_m);\n    void auto_circle_start();\n    void auto_circle_run();\n    void auto_nav_guided_start();\n    void auto_nav_guided_run();\n    bool auto_loiter_start();\n    void auto_loiter_run();\n    uint8_t get_default_auto_yaw_mode(bool rtl);\n    void set_auto_yaw_mode(uint8_t yaw_mode);\n    void set_auto_yaw_look_at_heading(float angle_deg, float turn_rate_dps, int8_t direction, uint8_t relative_angle);\n    void set_auto_yaw_roi(const Location &roi_location);\n    float get_auto_heading(void);\n    bool autotune_init(bool ignore_checks);\n    void autotune_stop();\n    bool autotune_start(bool ignore_checks);\n    void autotune_run();\n    void autotune_attitude_control();\n    void autotune_backup_gains_and_initialise();\n    void autotune_load_orig_gains();\n    void autotune_load_tuned_gains();\n    void autotune_load_intra_test_gains();\n    void autotune_load_twitch_gains();\n    void autotune_save_tuning_gains();\n    void autotune_update_gcs(uint8_t message_id);\n    bool autotune_roll_enabled();\n    bool autotune_pitch_enabled();\n    bool autotune_yaw_enabled();\n    void autotune_twitching_test(float measurement, float target, float &measurement_min, float &measurement_max);\n    void autotune_updating_d_up(float &tune_d, float tune_d_min, float tune_d_max, float tune_d_step_ratio, float &tune_p, float tune_p_min, float tune_p_max, float tune_p_step_ratio, float target, float measurement_min, float measurement_max);\n    void autotune_updating_d_down(float &tune_d, float tune_d_min, float tune_d_step_ratio, float &tune_p, float tune_p_min, float tune_p_max, float tune_p_step_ratio, float target, float measurement_min, float measurement_max);\n    void autotune_updating_p_down(float &tune_p, float tune_p_min, float tune_p_step_ratio, float target, float measurement_max);\n    void autotune_updating_p_up(float &tune_p, float tune_p_max, float tune_p_step_ratio, float target, float measurement_max);\n    void autotune_updating_p_up_d_down(float &tune_d, float tune_d_min, float tune_d_step_ratio, float &tune_p, float tune_p_min, float tune_p_max, float tune_p_step_ratio, float target, float measurement_min, float measurement_max);\n    void autotune_twitching_measure_acceleration(float &rate_of_change, float rate_measurement, float &rate_measurement_max);\n    void adsb_update(void);\n    void adsb_handle_vehicle_threats(void);\n    bool brake_init(bool ignore_checks);\n    void brake_run();\n    void brake_timeout_to_loiter_ms(uint32_t timeout_ms);\n    bool circle_init(bool ignore_checks);\n    void circle_run();\n    bool drift_init(bool ignore_checks);\n    void drift_run();\n    float get_throttle_assist(float velz, float pilot_throttle_scaled);\n    bool flip_init(bool ignore_checks);\n    void flip_run();\n    bool guided_init(bool ignore_checks);\n    bool guided_takeoff_start(float final_alt_above_home);\n    void guided_pos_control_start();\n    void guided_vel_control_start();\n    void guided_posvel_control_start();\n    void guided_angle_control_start();\n    bool guided_set_destination(const Vector3f& destination);\n    bool guided_set_destination(const Location_Class& dest_loc);\n    void guided_set_velocity(const Vector3f& velocity);\n    void guided_set_destination_posvel(const Vector3f& destination, const Vector3f& velocity);\n    void guided_set_angle(const Quaternion &q, float climb_rate_cms);\n    void guided_run();\n    void guided_takeoff_run();\n    void guided_pos_control_run();\n    void guided_vel_control_run();\n    void guided_posvel_control_run();\n    void guided_angle_control_run();\n    void guided_limit_clear();\n    void guided_limit_set(uint32_t timeout_ms, float alt_min_cm, float alt_max_cm, float horiz_max_cm);\n    void guided_limit_init_time_and_pos();\n    bool guided_limit_check();\n    bool land_init(bool ignore_checks);\n    void land_run();\n    void land_gps_run();\n    void land_nogps_run();\n    float get_land_descent_speed();\n    void land_do_not_use_GPS();\n    void set_mode_land_with_pause(mode_reason_t reason);\n    bool landing_with_GPS();\n    bool loiter_init(bool ignore_checks);\n    void loiter_run();\n    bool poshold_init(bool ignore_checks);\n    void poshold_run();\n    void poshold_update_pilot_lean_angle(float &lean_angle_filtered, float &lean_angle_raw);\n    int16_t poshold_mix_controls(float mix_ratio, int16_t first_control, int16_t second_control);\n    void poshold_update_brake_angle_from_velocity(int16_t &brake_angle, float velocity);\n    void poshold_update_wind_comp_estimate();\n    void poshold_get_wind_comp_lean_angles(int16_t &roll_angle, int16_t &pitch_angle);\n    void poshold_roll_controller_to_pilot_override();\n    void poshold_pitch_controller_to_pilot_override();\n\n\n\n    \n\n\n    // Throw to launch functionality\n    bool throw_init(bool ignore_checks);\n    void throw_exit();\n    void throw_run();\n    bool throw_detected();\n    bool throw_attitude_good();\n    bool throw_height_good();\n\n    bool rtl_init(bool ignore_checks);\n    void rtl_restart_without_terrain();\n    void rtl_run();\n    void rtl_climb_start();\n    void rtl_return_start();\n    void rtl_climb_return_run();\n    void rtl_loiterathome_start();\n    void rtl_loiterathome_run();\n    void rtl_descent_start();\n    void rtl_descent_run();\n    void rtl_land_start();\n    void rtl_land_run();\n    void rtl_build_path(bool terrain_following_allowed);\n    void rtl_compute_return_alt(const Location_Class &rtl_origin_point, Location_Class &rtl_return_target, bool terrain_following_allowed);\n    bool sport_init(bool ignore_checks);\n    void sport_run();\n    bool stabilize_init(bool ignore_checks);\n    void stabilize_run();\n    void crash_check();\n    void parachute_check();\n    void parachute_release();\n    void parachute_manual_release();\n    void ekf_check();\n    bool ekf_over_threshold();\n    void failsafe_ekf_event();\n    void failsafe_ekf_off_event(void);\n    void esc_calibration_startup_check();\n    void esc_calibration_passthrough();\n    void esc_calibration_auto();\n    bool should_disarm_on_failsafe();\n    void failsafe_radio_on_event();\n    void failsafe_radio_off_event();\n    void failsafe_battery_event(void);\n    void failsafe_gcs_check();\n    void failsafe_gcs_off_event(void);\n    void failsafe_terrain_check();\n    void failsafe_terrain_set_status(bool data_ok);\n    void failsafe_terrain_on_event();\n    void set_mode_RTL_or_land_with_pause(mode_reason_t reason);\n    void update_events();\n    void failsafe_enable();\n    void failsafe_disable();\n    void fence_check();\n    void fence_send_mavlink_status(mavlink_channel_t chan);\n    bool set_mode(control_mode_t mode, mode_reason_t reason);\n    bool gcs_set_mode(uint8_t mode) { return set_mode((control_mode_t)mode, MODE_REASON_GCS_COMMAND); }\n    void update_flight_mode();\n    void exit_mode(control_mode_t old_control_mode, control_mode_t new_control_mode);\n    bool mode_requires_GPS(control_mode_t mode);\n    bool mode_has_manual_throttle(control_mode_t mode);\n    bool mode_allows_arming(control_mode_t mode, bool arming_from_gcs);\n    void notify_flight_mode(control_mode_t mode);\n    void heli_init();\n    void check_dynamic_flight(void);\n    void update_heli_control_dynamics(void);\n    void heli_update_landing_swash();\n    void heli_update_rotor_speed_targets();\n    bool heli_acro_init(bool ignore_checks);\n    void heli_acro_run();\n    bool heli_stabilize_init(bool ignore_checks);\n    void heli_stabilize_run();\n    void read_inertia();\n    bool land_complete_maybe();\n    void update_land_and_crash_detectors();\n    void update_land_detector();\n    void update_throttle_thr_mix();\n#if GNDEFFECT_COMPENSATION == ENABLED\n    void update_ground_effect_detector(void);\n#endif // GNDEFFECT_COMPENSATION == ENABLED\n    void landinggear_update();\n    void update_notify();\n    void motor_test_output();\n    bool mavlink_motor_test_check(mavlink_channel_t chan, bool check_rc);\n    uint8_t mavlink_motor_test_start(mavlink_channel_t chan, uint8_t motor_seq, uint8_t throttle_type, uint16_t throttle_value, float timeout_sec);\n    void motor_test_stop();\n    void arm_motors_check();\n    void auto_disarm_check();\n    bool init_arm_motors(bool arming_from_gcs);\n    void update_arming_checks(void);\n    bool all_arming_checks_passing(bool arming_from_gcs);\n    bool pre_arm_checks(bool display_failure);\n    void pre_arm_rc_checks();\n    bool pre_arm_gps_checks(bool display_failure);\n    bool pre_arm_ekf_attitude_check();\n    bool pre_arm_terrain_check(bool display_failure);\n    bool arm_checks(bool display_failure, bool arming_from_gcs);\n    void init_disarm_motors();\n    void motors_output();\n    void lost_vehicle_check();\n    void run_nav_updates(void);\n    void calc_distance_and_bearing();\n    void calc_wp_distance();\n    void calc_wp_bearing();\n    void calc_home_distance_and_bearing();\n    void run_autopilot();\n    void perf_info_reset();\n    void perf_ignore_this_loop();\n    void perf_info_check_loop_time(uint32_t time_in_micros);\n    uint16_t perf_info_get_num_loops();\n    uint32_t perf_info_get_max_time();\n    uint32_t perf_info_get_min_time();\n    uint16_t perf_info_get_num_long_running();\n    uint32_t perf_info_get_num_dropped();\n    Vector3f pv_location_to_vector(const Location& loc);\n    float pv_alt_above_origin(float alt_above_home_cm);\n    float pv_alt_above_home(float alt_above_origin_cm);\n    float pv_get_bearing_cd(const Vector3f &origin, const Vector3f &destination);\n    float pv_get_horizontal_distance_cm(const Vector3f &origin, const Vector3f &destination);\n    float pv_distance_to_home_cm(const Vector3f &destination);\n    void default_dead_zones();\n    void init_rc_in();\n    void init_rc_out();\n    void enable_motor_output();\n    void read_radio();\n    void set_throttle_and_failsafe(uint16_t throttle_pwm);\n    void set_throttle_zero_flag(int16_t throttle_control);\n    void radio_passthrough_to_motors();\n    void init_barometer(bool full_calibration);\n    void read_barometer(void);\n    void init_rangefinder(void);\n    void read_rangefinder(void);\n    bool rangefinder_alt_ok();\n    void init_compass();\n    void init_optflow();\n    void update_optical_flow(void);\n    void init_precland();\n    void update_precland();\n    void read_battery(void);\n    void read_receiver_rssi(void);\n    void epm_update();\n    void terrain_update();\n    void terrain_logging();\n    bool terrain_use();\n    void report_batt_monitor();\n    void report_frame();\n    void report_radio();\n    void report_ins();\n    void report_flight_modes();\n    void report_optflow();\n    void print_radio_values();\n    void print_switch(uint8_t p, uint8_t m, bool b);\n    void print_accel_offsets_and_scaling(void);\n    void print_gyro_offsets(void);\n    void report_compass();\n    void print_blanks(int16_t num);\n    void print_divider(void);\n    void print_enabled(bool b);\n    void report_version();\n    void read_control_switch();\n    bool check_if_auxsw_mode_used(uint8_t auxsw_mode_check);\n    bool check_duplicate_auxsw(void);\n    void reset_control_switch();\n    uint8_t read_3pos_switch(int16_t radio_in);\n    void read_aux_switches();\n    void init_aux_switches();\n    void init_aux_switch_function(int8_t ch_option, uint8_t ch_flag);\n    void do_aux_switch_function(int8_t ch_function, uint8_t ch_flag);\n    void save_trim();\n    void auto_trim();\n    void init_ardupilot();\n    void startup_INS_ground();\n    bool calibrate_gyros();\n    bool position_ok();\n    bool ekf_position_ok();\n    bool optflow_position_ok();\n    void update_auto_armed();\n    void check_usb_mux(void);\n    void frsky_telemetry_send(void);\n    bool should_log(uint32_t mask);\n    bool current_mode_has_user_takeoff(bool must_navigate);\n    bool do_user_takeoff(float takeoff_alt_cm, bool must_navigate);\n    void takeoff_timer_start(float alt_cm);\n    void takeoff_stop();\n    void takeoff_get_climb_rates(float& pilot_climb_rate, float& takeoff_climb_rate);\n    void print_hit_enter();\n    void tuning();\n    void gcs_send_text_fmt(MAV_SEVERITY severity, const char *fmt, ...);\n    bool start_command(const AP_Mission::Mission_Command& cmd);\n    bool verify_command(const AP_Mission::Mission_Command& cmd);\n    bool verify_command_callback(const AP_Mission::Mission_Command& cmd);\n\n    bool do_guided(const AP_Mission::Mission_Command& cmd);\n    void do_takeoff(const AP_Mission::Mission_Command& cmd);\n    void do_nav_wp(const AP_Mission::Mission_Command& cmd);\n    void do_land(const AP_Mission::Mission_Command& cmd);\n    void do_loiter_unlimited(const AP_Mission::Mission_Command& cmd);\n    void do_circle(const AP_Mission::Mission_Command& cmd);\n    void do_loiter_time(const AP_Mission::Mission_Command& cmd);\n    void do_spline_wp(const AP_Mission::Mission_Command& cmd);\n#if NAV_GUIDED == ENABLED\n    void do_nav_guided_enable(const AP_Mission::Mission_Command& cmd);\n    void do_guided_limits(const AP_Mission::Mission_Command& cmd);\n#endif\n    void do_nav_delay(const AP_Mission::Mission_Command& cmd);\n    void do_wait_delay(const AP_Mission::Mission_Command& cmd);\n    void do_within_distance(const AP_Mission::Mission_Command& cmd);\n    void do_yaw(const AP_Mission::Mission_Command& cmd);\n    void do_change_speed(const AP_Mission::Mission_Command& cmd);\n    void do_set_home(const AP_Mission::Mission_Command& cmd);\n    void do_roi(const AP_Mission::Mission_Command& cmd);\n    void do_mount_control(const AP_Mission::Mission_Command& cmd);\n#if CAMERA == ENABLED\n    void do_digicam_configure(const AP_Mission::Mission_Command& cmd);\n    void do_digicam_control(const AP_Mission::Mission_Command& cmd);\n#endif\n#if PARACHUTE == ENABLED\n    void do_parachute(const AP_Mission::Mission_Command& cmd);\n#endif\n#if EPM_ENABLED == ENABLED\n    void do_gripper(const AP_Mission::Mission_Command& cmd);\n#endif\n    bool verify_nav_wp(const AP_Mission::Mission_Command& cmd);\n    bool verify_circle(const AP_Mission::Mission_Command& cmd);\n    bool verify_spline_wp(const AP_Mission::Mission_Command& cmd);\n#if NAV_GUIDED == ENABLED\n    bool verify_nav_guided_enable(const AP_Mission::Mission_Command& cmd);\n#endif\n    bool verify_nav_delay(const AP_Mission::Mission_Command& cmd);\n\n    void auto_spline_start(const Location_Class& destination, bool stopped_at_start, AC_WPNav::spline_segment_end_type seg_end_type, const Location_Class& next_destination);\n    void print_flight_mode(AP_HAL::BetterStream *port, uint8_t mode);\n    void log_init(void);\n    void run_cli(AP_HAL::UARTDriver *port);\n    void init_capabilities(void);\n    void dataflash_periodic(void);\n    void accel_cal_update(void);\n\npublic:\n    void mavlink_delay_cb();\n    void failsafe_check();\n    int8_t dump_log(uint8_t argc, const Menu::arg *argv);\n    int8_t erase_logs(uint8_t argc, const Menu::arg *argv);\n    int8_t select_logs(uint8_t argc, const Menu::arg *argv);\n    bool print_log_menu(void);\n\n    int8_t process_logs(uint8_t argc, const Menu::arg *argv);\n    int8_t main_menu_help(uint8_t, const Menu::arg*);\n    int8_t setup_mode(uint8_t argc, const Menu::arg *argv);\n    int8_t setup_factory(uint8_t argc, const Menu::arg *argv);\n    int8_t setup_set(uint8_t argc, const Menu::arg *argv);\n    int8_t setup_show(uint8_t argc, const Menu::arg *argv);\n    int8_t esc_calib(uint8_t argc, const Menu::arg *argv);\n\n    int8_t test_mode(uint8_t argc, const Menu::arg *argv);\n    int8_t test_baro(uint8_t argc, const Menu::arg *argv);\n    int8_t test_compass(uint8_t argc, const Menu::arg *argv);\n    int8_t test_ins(uint8_t argc, const Menu::arg *argv);\n    int8_t test_optflow(uint8_t argc, const Menu::arg *argv);\n    int8_t test_relay(uint8_t argc, const Menu::arg *argv);\n    int8_t test_shell(uint8_t argc, const Menu::arg *argv);\n    int8_t test_rangefinder(uint8_t argc, const Menu::arg *argv);\n\n    int8_t reboot_board(uint8_t argc, const Menu::arg *argv);\n\n\n\n\n   \n};\n\n#define MENU_FUNC(func) FUNCTOR_BIND(&copter, &Copter::func, int8_t, uint8_t, const Menu::arg *)\n\nextern const AP_HAL::HAL& hal;\nextern Copter copter;\n\nusing AP_HAL::millis;\nusing AP_HAL::micros;\n",
			"file": "ArduCopter/Copter.h",
			"file_size": 45022,
			"file_write_time": 1469183763000000,
			"settings":
			{
				"buffer_size": 44921,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_HAL/HAL.h",
			"settings":
			{
				"buffer_size": 2719,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: Li",
				"Package Control: List Packages"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 252.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/arch/blackfin/include/asm/ptrace.h",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-4.7/include/linux/sched.h",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/include/linux/sched.h",
		"/home/rutk1t0r/github/for_work/datastruct_and_algorithm/BiTree/test_for_sqstack.c",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/arch/x86/boot/boot.h",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/arch/x86/boot/compressed/early_serial_console.c",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/arch/x86/boot/compressed/misc.c",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/arch/x86/boot/compressed/misc.h",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/include/acpi/actypes.h",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/include/acpi/platform/acenv.h",
		"/home/rutk1t0r/github/for_work/datastruct_and_algorithm/BiTree/SqStack.c",
		"/home/rutk1t0r/github/for_work/datastruct_and_algorithm/BiTree/SqStack.h",
		"/home/rutk1t0r/github/for_work/datastruct_and_algorithm/BiTree/BT.h",
		"/home/rutk1t0r/github/for_work/datastruct_and_algorithm/BiTree/test_for_BT.c",
		"/home/rutk1t0r/github/for_work/datastruct_and_algorithm/BiTree/BiTree_base_operator.c",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/arch/x86/boot/printf.c",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/drivers/scsi/arm/cumana_2.c",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/drivers/scsi/sym53c8xx_2/sym_hipd.c",
		"/home/rutk1t0r/github/for_work/datastruct_and_algorithm/string/BF.c",
		"/home/rutk1t0r/github/for_work/datastruct_and_algorithm/string/KMP.c",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/arch/x86/boot/ctype.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/flight_mode.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/control_althold.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/takeoff.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/defines.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/Parameters.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/config.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/Parameters.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_AttitudeControl/AC_PosControl.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_WPNav/AC_WPNav.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/system.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/control_loiter.cpp",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/kernel/printk.c",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/include/linux/linkage.h",
		"/home/rutk1t0r/high_tech/linux/kernel/src/linux-3.2.81/arch/ia64/include/asm/linkage.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/ArduCopter.cpp",
		"/home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/libc/stdio/lib_libvsprintf.c",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/utility/print_vprintf.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/Copter.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/Copter.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/UARTDriver.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/UARTDriver.cpp",
		"/home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/include/stdarg.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/stdarg.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/stdarg.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/libc/stdio/lib_vprintf.c",
		"/home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/libc/stdio/lib_vfprintf.c",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_WPNav/AC_WPNav.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_OpticalFlow/OpticalFlow.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_OpticalFlow/AP_OpticalFlow_PX4.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/HAL.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/Buzzer.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Empty/GPIO.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/GPIO.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/px4io.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/GPIO.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/GPIO.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/Buzzer.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/Attitude.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_AttitudeControl/AC_AttitudeControl.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/control_stabilize.cpp",
		"/home/rutk1t0r/src/ardupilot/mk/PX4/ROMFS/init.d/rc.APM",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/control_auto.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/radio.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/AP_Notify.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/ToneAlarm_PX4.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/ToneAlarm_PX4.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/AP_Notify.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/leds.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/motors.cpp",
		"/home/rutk1t0r/src/Firmware/ROMFS/px4fmu_common/init.d/rcS",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/stm32/tone_alarm/tone_alarm.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/AP_HAL_Boards.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCInput.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/AP_State.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/switches.cpp",
		"/home/rutk1t0r/src/ardupilot/mk/PX4/ROMFS/init.d/rcS",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/stm32/tone_alarm/module.mk",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Scheduler/AP_Scheduler.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Scheduler/AP_Scheduler.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/utility/functor.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/HAL_PX4_Class.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Scheduler/examples/Scheduler_test/Scheduler_test.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/AP_HAL_Main.h",
		"/media/rutk1t0r/PGP/项目/四轴飞行器/匿名小四/ANO-MR-F1/APP/main.c",
		"/media/rutk1t0r/PGP/项目/四轴飞行器/匿名小四/ANO-MR-F1/BSP/Moto.c",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCInput.cpp",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/drv_tone_alarm.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/ROMFS/px4fmu_common/init.d/rcS",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/modules/uORB/topics/input_rc.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/sched/pthread_mutexlock.c",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/platforms/qurt/stubs/stubs_posix.c",
		"/media/rutk1t0r/PGP/项目/四轴飞行器/老飞机/code/ANO-MR-F1/APP/Control.c",
		"/home/rutk1t0r/src/ardupilot/APMrover2/APMrover2.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/APM_Config.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_AttitudeControl/AC_PosControl.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.h",
		"/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/RC_Channel.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_AHRS/AP_AHRS_NavEKF.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Param/AP_Param.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMulticopter.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/GCS_Mavlink.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/APM_Config_mavlink_hil.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/navigation.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduPlane/ArduPlane.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/RC_Channel.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMulticopter.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4io-v2_default.build/nuttx-export/include/stdint.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/drv_pwm_output.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Math/AP_Math.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Math/AP_Math.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/land_detector.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/control_newflightmode.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/failsafe.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/RCOutput.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_AttitudeControl/AC_AttitudeControl_Heli.cpp",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/lib/mathlib/math/Limits.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/heli.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsQuad.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Baro/AP_Baro.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/sensors.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_RCMapper/AP_RCMapper.h"
	],
	"find":
	{
		"height": 46.0
	},
	"find_in_files":
	{
		"height": 114.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"output_test",
			"task_struct",
			"printf",
			"pilot_velocity_z_max",
			"vprintf",
			"ap.simple_mode",
			"ap.new_radio_frame",
			"AP_NOTIFY_PX4_TONE_QUIET_NEG_FEEDBACK",
			"AP_Notify",
			"tone_alarm",
			"set_simple_mode",
			"ap.simple_mode",
			"ap.new_radio_frame",
			"_override_valid",
			"takeoff_state",
			"ap.using_interlock",
			"set_throttle_zero_flag",
			"ap.throttle_zero",
			"update_flight_mode",
			"define AUTO_DISARMING_DELAY",
			"disarm_delay",
			"constrain",
			"constrains",
			"set_desired_spool_state",
			"default_dead_zones",
			"channel_throttle",
			"rc_3",
			"AP_HAL",
			"CONFIG_HAL_BOARD",
			"failsafe_check",
			"auto_armed",
			"read_control_switch",
			"set_mode",
			"update_flight_mode",
			"stabilize_init",
			"disarm_delay",
			"Initialising APM",
			"_flags.armed",
			"arm_motors_check",
			"rcmap",
			"set_range",
			"_low_in",
			"read_control_switch",
			"control_mode",
			"set_mode",
			"NEWFLIGHTMODE",
			"newflightmode_init",
			"perf_info_min_time",
			"sc",
			"ArduPilot_main",
			"set_freq",
			"set_freq_fd",
			"g.rc_speed",
			"set_update_rate",
			"set_freq",
			"hal.rcout->enable_ch",
			"_flags.frame_orientation",
			"get_rate_roll_pid",
			"angle_ef_roll_pitch_rate_ef_yaw",
			"_cycle_timestamp - _last_safety_check >= (unsigned int)1e5",
			"GPIO_BTN_SAFETY",
			"circuit_breaker_enabled(\"CBRK_IO_SAFETY\", CBRK_IO_SAFETY_KEY)",
			"CBRK_IO_SAFETY",
			"rate_controller_run"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ArduCopter/ArduCopter.cpp",
					"settings":
					{
						"buffer_size": 23557,
						"regions":
						{
						},
						"selection":
						[
							[
								12593,
								12593
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9172.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 110814,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										363,
										374
									],
									[
										480,
										491
									],
									[
										610,
										621
									],
									[
										1274,
										1285
									],
									[
										2052,
										2063
									],
									[
										2500,
										2511
									],
									[
										3217,
										3228
									],
									[
										3775,
										3786
									],
									[
										4351,
										4362
									],
									[
										4979,
										4990
									],
									[
										5808,
										5819
									],
									[
										5949,
										5960
									],
									[
										6053,
										6064
									],
									[
										6153,
										6164
									],
									[
										6602,
										6613
									],
									[
										7142,
										7153
									],
									[
										7846,
										7857
									],
									[
										7964,
										7975
									],
									[
										8704,
										8715
									],
									[
										9296,
										9307
									],
									[
										9437,
										9448
									],
									[
										10139,
										10150
									],
									[
										10800,
										10811
									],
									[
										11314,
										11325
									],
									[
										12010,
										12021
									],
									[
										12126,
										12137
									],
									[
										12306,
										12317
									],
									[
										12461,
										12472
									],
									[
										13111,
										13122
									],
									[
										13706,
										13717
									],
									[
										14172,
										14183
									],
									[
										14210,
										14221
									],
									[
										14289,
										14300
									],
									[
										14830,
										14841
									],
									[
										14914,
										14925
									],
									[
										15462,
										15473
									],
									[
										16197,
										16208
									],
									[
										16839,
										16850
									],
									[
										17697,
										17708
									],
									[
										18430,
										18441
									],
									[
										19076,
										19087
									],
									[
										19225,
										19236
									],
									[
										19390,
										19401
									],
									[
										19571,
										19582
									],
									[
										20424,
										20435
									],
									[
										21202,
										21213
									],
									[
										21392,
										21403
									],
									[
										21554,
										21565
									],
									[
										22539,
										22550
									],
									[
										22652,
										22663
									],
									[
										23387,
										23398
									],
									[
										24191,
										24202
									],
									[
										24269,
										24280
									],
									[
										24906,
										24917
									],
									[
										25017,
										25028
									],
									[
										25906,
										25917
									],
									[
										26018,
										26029
									],
									[
										26693,
										26704
									],
									[
										26791,
										26802
									],
									[
										27066,
										27077
									],
									[
										27186,
										27197
									],
									[
										27899,
										27910
									],
									[
										28540,
										28551
									],
									[
										28818,
										28829
									],
									[
										29039,
										29050
									],
									[
										29180,
										29191
									],
									[
										29921,
										29932
									],
									[
										30692,
										30703
									],
									[
										30802,
										30813
									],
									[
										30926,
										30937
									],
									[
										31058,
										31069
									],
									[
										31177,
										31188
									],
									[
										31287,
										31298
									],
									[
										31422,
										31433
									],
									[
										32022,
										32033
									],
									[
										32169,
										32180
									],
									[
										32758,
										32769
									],
									[
										32859,
										32870
									],
									[
										33377,
										33388
									],
									[
										33475,
										33486
									],
									[
										33606,
										33617
									],
									[
										33700,
										33711
									],
									[
										33823,
										33834
									],
									[
										33951,
										33962
									],
									[
										34072,
										34083
									],
									[
										34192,
										34203
									],
									[
										34321,
										34332
									],
									[
										34447,
										34458
									],
									[
										34577,
										34588
									],
									[
										34707,
										34718
									],
									[
										34833,
										34844
									],
									[
										34958,
										34969
									],
									[
										35082,
										35093
									],
									[
										35205,
										35216
									],
									[
										35340,
										35351
									],
									[
										35472,
										35483
									],
									[
										35602,
										35613
									],
									[
										35738,
										35749
									],
									[
										35858,
										35869
									],
									[
										35972,
										35983
									],
									[
										36089,
										36100
									],
									[
										36206,
										36217
									],
									[
										36320,
										36331
									],
									[
										36417,
										36428
									],
									[
										36514,
										36525
									],
									[
										36615,
										36626
									],
									[
										36718,
										36729
									],
									[
										36819,
										36830
									],
									[
										36926,
										36937
									],
									[
										37027,
										37038
									],
									[
										37134,
										37145
									],
									[
										37274,
										37285
									],
									[
										37837,
										37848
									],
									[
										37950,
										37961
									],
									[
										38075,
										38086
									],
									[
										38191,
										38202
									],
									[
										38319,
										38330
									],
									[
										38443,
										38454
									],
									[
										38570,
										38581
									],
									[
										38704,
										38715
									],
									[
										38819,
										38830
									],
									[
										38956,
										38967
									],
									[
										39094,
										39105
									],
									[
										39220,
										39231
									],
									[
										39349,
										39360
									],
									[
										39472,
										39483
									],
									[
										39595,
										39606
									],
									[
										39732,
										39743
									],
									[
										39850,
										39861
									],
									[
										39990,
										40001
									],
									[
										40123,
										40134
									],
									[
										40748,
										40759
									],
									[
										41274,
										41285
									],
									[
										41900,
										41911
									],
									[
										42716,
										42727
									],
									[
										42831,
										42842
									],
									[
										42933,
										42944
									],
									[
										43540,
										43551
									],
									[
										43663,
										43674
									],
									[
										43770,
										43781
									],
									[
										44422,
										44433
									],
									[
										44538,
										44549
									],
									[
										44668,
										44679
									],
									[
										44806,
										44817
									],
									[
										44931,
										44942
									],
									[
										45047,
										45058
									],
									[
										45188,
										45199
									],
									[
										45758,
										45769
									],
									[
										46422,
										46433
									],
									[
										47184,
										47195
									],
									[
										47999,
										48010
									],
									[
										48658,
										48669
									],
									[
										49277,
										49288
									],
									[
										49955,
										49966
									],
									[
										50055,
										50066
									],
									[
										50663,
										50674
									],
									[
										51296,
										51307
									],
									[
										52002,
										52013
									],
									[
										52558,
										52569
									],
									[
										53212,
										53223
									],
									[
										54021,
										54032
									],
									[
										54786,
										54797
									],
									[
										55368,
										55379
									],
									[
										56217,
										56228
									],
									[
										56795,
										56806
									],
									[
										57373,
										57384
									],
									[
										57964,
										57975
									],
									[
										58526,
										58537
									],
									[
										58598,
										58609
									],
									[
										58677,
										58688
									],
									[
										58763,
										58774
									],
									[
										58849,
										58860
									],
									[
										58925,
										58936
									],
									[
										59006,
										59017
									],
									[
										59082,
										59093
									],
									[
										59163,
										59174
									],
									[
										59233,
										59244
									],
									[
										59830,
										59841
									],
									[
										59992,
										60003
									],
									[
										60673,
										60684
									],
									[
										61353,
										61364
									],
									[
										62086,
										62097
									],
									[
										63076,
										63087
									],
									[
										63246,
										63257
									],
									[
										64209,
										64220
									],
									[
										64388,
										64399
									],
									[
										65133,
										65144
									],
									[
										65205,
										65216
									],
									[
										65923,
										65934
									],
									[
										66009,
										66020
									],
									[
										66709,
										66720
									],
									[
										66785,
										66796
									],
									[
										67434,
										67445
									],
									[
										67510,
										67521
									],
									[
										68156,
										68167
									],
									[
										68226,
										68237
									],
									[
										68854,
										68865
									],
									[
										68994,
										69005
									],
									[
										69127,
										69138
									],
									[
										69267,
										69278
									],
									[
										69409,
										69420
									],
									[
										69514,
										69525
									],
									[
										69615,
										69626
									],
									[
										69727,
										69738
									],
									[
										69827,
										69838
									],
									[
										69865,
										69876
									],
									[
										69945,
										69956
									],
									[
										70091,
										70102
									],
									[
										70215,
										70226
									],
									[
										70326,
										70337
									],
									[
										70435,
										70446
									],
									[
										70544,
										70555
									],
									[
										70657,
										70668
									],
									[
										70772,
										70783
									],
									[
										70850,
										70861
									],
									[
										70921,
										70932
									],
									[
										71032,
										71043
									],
									[
										71160,
										71171
									],
									[
										71272,
										71283
									],
									[
										71377,
										71388
									],
									[
										71475,
										71486
									],
									[
										71578,
										71589
									],
									[
										71698,
										71709
									],
									[
										71847,
										71858
									],
									[
										71974,
										71985
									],
									[
										72078,
										72089
									],
									[
										72219,
										72230
									],
									[
										72341,
										72352
									],
									[
										72434,
										72445
									],
									[
										72547,
										72558
									],
									[
										72660,
										72671
									],
									[
										72791,
										72802
									],
									[
										72909,
										72920
									],
									[
										73040,
										73051
									],
									[
										73161,
										73172
									],
									[
										73249,
										73260
									],
									[
										73403,
										73414
									],
									[
										73572,
										73583
									],
									[
										73701,
										73712
									],
									[
										73815,
										73826
									],
									[
										73946,
										73957
									],
									[
										74065,
										74076
									],
									[
										74186,
										74197
									],
									[
										74292,
										74303
									],
									[
										74434,
										74445
									],
									[
										74576,
										74587
									],
									[
										74712,
										74723
									],
									[
										74852,
										74863
									],
									[
										74974,
										74985
									],
									[
										75091,
										75102
									],
									[
										75272,
										75283
									],
									[
										75428,
										75439
									],
									[
										75562,
										75573
									],
									[
										75701,
										75712
									],
									[
										75786,
										75797
									],
									[
										75854,
										75865
									],
									[
										75997,
										76008
									],
									[
										76146,
										76157
									],
									[
										76311,
										76322
									],
									[
										76492,
										76503
									],
									[
										76654,
										76665
									],
									[
										76815,
										76826
									],
									[
										77005,
										77016
									],
									[
										77167,
										77178
									],
									[
										77302,
										77313
									],
									[
										77428,
										77439
									],
									[
										77543,
										77554
									],
									[
										77688,
										77699
									],
									[
										77798,
										77809
									],
									[
										77922,
										77933
									],
									[
										78054,
										78065
									],
									[
										78173,
										78184
									],
									[
										78283,
										78294
									],
									[
										78418,
										78429
									],
									[
										78559,
										78570
									],
									[
										78706,
										78717
									],
									[
										78817,
										78828
									],
									[
										78918,
										78929
									],
									[
										79011,
										79022
									],
									[
										79109,
										79120
									],
									[
										79240,
										79251
									],
									[
										79334,
										79345
									],
									[
										79457,
										79468
									],
									[
										79585,
										79596
									],
									[
										79706,
										79717
									],
									[
										79826,
										79837
									],
									[
										79955,
										79966
									],
									[
										80081,
										80092
									],
									[
										80211,
										80222
									],
									[
										80341,
										80352
									],
									[
										80467,
										80478
									],
									[
										80592,
										80603
									],
									[
										80716,
										80727
									],
									[
										80839,
										80850
									],
									[
										80974,
										80985
									],
									[
										81106,
										81117
									],
									[
										81236,
										81247
									],
									[
										81372,
										81383
									],
									[
										81492,
										81503
									],
									[
										81606,
										81617
									],
									[
										81723,
										81734
									],
									[
										81840,
										81851
									],
									[
										81954,
										81965
									],
									[
										82051,
										82062
									],
									[
										82148,
										82159
									],
									[
										82249,
										82260
									],
									[
										82352,
										82363
									],
									[
										82453,
										82464
									],
									[
										82560,
										82571
									],
									[
										82661,
										82672
									],
									[
										82768,
										82779
									],
									[
										82908,
										82919
									],
									[
										83037,
										83048
									],
									[
										83150,
										83161
									],
									[
										83275,
										83286
									],
									[
										83391,
										83402
									],
									[
										83519,
										83530
									],
									[
										83643,
										83654
									],
									[
										83770,
										83781
									],
									[
										83904,
										83915
									],
									[
										84019,
										84030
									],
									[
										84156,
										84167
									],
									[
										84294,
										84305
									],
									[
										84420,
										84431
									],
									[
										84549,
										84560
									],
									[
										84672,
										84683
									],
									[
										84795,
										84806
									],
									[
										84932,
										84943
									],
									[
										85050,
										85061
									],
									[
										85190,
										85201
									],
									[
										85323,
										85334
									],
									[
										85498,
										85509
									],
									[
										85637,
										85648
									],
									[
										85766,
										85777
									],
									[
										85909,
										85920
									],
									[
										86024,
										86035
									],
									[
										86126,
										86137
									],
									[
										86230,
										86241
									],
									[
										86353,
										86364
									],
									[
										86460,
										86471
									],
									[
										86563,
										86574
									],
									[
										86679,
										86690
									],
									[
										86809,
										86820
									],
									[
										86947,
										86958
									],
									[
										87072,
										87083
									],
									[
										87188,
										87199
									],
									[
										87329,
										87340
									],
									[
										87456,
										87467
									],
									[
										87550,
										87561
									],
									[
										87705,
										87716
									],
									[
										87850,
										87861
									],
									[
										87945,
										87956
									],
									[
										88061,
										88072
									],
									[
										88161,
										88172
									],
									[
										88281,
										88292
									],
									[
										88416,
										88427
									],
									[
										88500,
										88511
									],
									[
										88595,
										88606
									],
									[
										88720,
										88731
									],
									[
										88861,
										88872
									],
									[
										88994,
										89005
									],
									[
										89089,
										89100
									],
									[
										89194,
										89205
									],
									[
										89299,
										89310
									],
									[
										89416,
										89427
									],
									[
										89587,
										89598
									],
									[
										89749,
										89760
									],
									[
										89890,
										89901
									],
									[
										90094,
										90105
									],
									[
										90264,
										90275
									],
									[
										90432,
										90443
									],
									[
										90611,
										90622
									],
									[
										91186,
										91197
									],
									[
										91393,
										91404
									],
									[
										91554,
										91565
									],
									[
										91810,
										91821
									],
									[
										91994,
										92005
									],
									[
										92273,
										92284
									],
									[
										92500,
										92511
									],
									[
										92791,
										92802
									],
									[
										93035,
										93046
									],
									[
										93326,
										93337
									],
									[
										93500,
										93511
									],
									[
										93786,
										93797
									],
									[
										94005,
										94016
									],
									[
										94281,
										94292
									],
									[
										94519,
										94530
									],
									[
										94800,
										94811
									],
									[
										95029,
										95040
									],
									[
										95320,
										95331
									],
									[
										95543,
										95554
									],
									[
										95824,
										95835
									],
									[
										96053,
										96064
									],
									[
										96344,
										96355
									],
									[
										96564,
										96575
									],
									[
										96842,
										96853
									],
									[
										97068,
										97079
									],
									[
										97359,
										97370
									],
									[
										97624,
										97635
									],
									[
										97915,
										97926
									],
									[
										98324,
										98335
									],
									[
										98410,
										98421
									],
									[
										98843,
										98854
									],
									[
										99330,
										99341
									],
									[
										99821,
										99832
									],
									[
										100325,
										100336
									],
									[
										100810,
										100821
									],
									[
										101311,
										101322
									],
									[
										101411,
										101422
									],
									[
										101583,
										101594
									],
									[
										101836,
										101847
									],
									[
										101936,
										101947
									],
									[
										102108,
										102119
									],
									[
										102360,
										102371
									],
									[
										102465,
										102476
									],
									[
										102647,
										102658
									],
									[
										102888,
										102899
									],
									[
										102986,
										102997
									],
									[
										103154,
										103165
									],
									[
										103382,
										103393
									],
									[
										103479,
										103490
									],
									[
										103645,
										103656
									],
									[
										104059,
										104070
									],
									[
										104107,
										104118
									],
									[
										104342,
										104353
									],
									[
										104545,
										104556
									],
									[
										104582,
										104593
									],
									[
										104800,
										104811
									],
									[
										104908,
										104919
									],
									[
										104947,
										104958
									],
									[
										104994,
										105005
									],
									[
										105127,
										105138
									],
									[
										105231,
										105242
									],
									[
										105415,
										105426
									],
									[
										105620,
										105631
									],
									[
										105748,
										105759
									],
									[
										105953,
										105964
									],
									[
										106283,
										106294
									],
									[
										106695,
										106706
									],
									[
										106877,
										106888
									],
									[
										106925,
										106936
									],
									[
										107166,
										107177
									],
									[
										107369,
										107380
									],
									[
										107406,
										107417
									],
									[
										107630,
										107641
									],
									[
										107738,
										107749
									],
									[
										107777,
										107788
									],
									[
										107824,
										107835
									],
									[
										107957,
										107968
									],
									[
										108061,
										108072
									],
									[
										108245,
										108256
									],
									[
										108450,
										108461
									],
									[
										108578,
										108589
									],
									[
										108783,
										108794
									],
									[
										109119,
										109130
									],
									[
										109537,
										109548
									],
									[
										109758,
										109769
									],
									[
										109922,
										109933
									],
									[
										110160,
										110171
									],
									[
										110324,
										110335
									],
									[
										110571,
										110582
									],
									[
										110735,
										110746
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								94804,
								94804
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 52483.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "libraries/AP_Motors/AP_MotorsMatrix.cpp",
					"settings":
					{
						"buffer_size": 15682,
						"regions":
						{
						},
						"selection":
						[
							[
								2219,
								2219
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2155.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "libraries/AP_Motors/AP_Motors_Class.h",
					"settings":
					{
						"buffer_size": 9369,
						"regions":
						{
						},
						"selection":
						[
							[
								663,
								663
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 231.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "ArduCopter/Copter.h",
					"settings":
					{
						"buffer_size": 44921,
						"regions":
						{
						},
						"selection":
						[
							[
								32942,
								32942
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 23304.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "libraries/AP_HAL/HAL.h",
					"settings":
					{
						"buffer_size": 2719,
						"regions":
						{
						},
						"selection":
						[
							[
								1642,
								1642
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1401.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 255.0,
	"status_bar_visible": true
}
