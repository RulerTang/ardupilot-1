{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "libraries/AP_HAL/examples/RCOutput/RCOutput.cpp",
			"settings":
			{
				"buffer_size": 2329,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_HAL/HAL.h",
			"settings":
			{
				"buffer_size": 2719,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_HAL/RCOutput.h",
			"settings":
			{
				"buffer_size": 3868,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_HAL_PX4/RCOutput.cpp",
			"settings":
			{
				"buffer_size": 16374,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_HAL_PX4/RCOutput.h",
			"settings":
			{
				"buffer_size": 2323,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 16684 files for \"set_freq\"\n\n/home/rutk1t0r/src/ardupilot/.tags:\n 327859  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     read_last_sent(uint16_t* period_us, uint8_t len) override;$/;\"	m	class:PX4::PX4RCOutput\n 327860  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_failsafe_pwm(uint32_t chmask, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n 327861: override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\"	m	class:PX4::PX4RCOutput\n 327862  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_safety_pwm(uint32_t chmask, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n 327863  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n .....\n 327885  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     init() override;$/;\"	m	class:HALSITL::RCOutput\n 327886  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     read(uint16_t* period_us, uint8_t len) override;$/;\"	m	class:HALSITL::RCOutput\n 327887: override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\"	m	class:HALSITL::RCOutput\n 327888  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\"	m	class:HALSITL::RCOutput\n 327889  override	libraries/AP_HAL_VRBRAIN/HAL_VRBRAIN_Class.h	/^    void run(int argc, char* const argv[], Callbacks* callbacks) const override;$/;\"	m	class:HAL_VRBRAIN\n .....\n 334700  rc_return_th	modules/PX4Firmware/src/modules/sensors/sensors.cpp	/^		param_t rc_return_th;$/;\"	m	struct:Sensors::__anon472	file:\n 334701  rc_reverse	modules/PX4Firmware/src/drivers/drv_pwm_output.h	/^	bool     rc_reverse;$/;\"	m	struct:pwm_output_rc_config\n 334702: rc_set_freq	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)$/;\"	f	class:AP_Motors\n 334703  rc_signal_found_once	modules/PX4Firmware/src/modules/uORB/topics/vehicle_status.h	/^	bool rc_signal_found_once;$/;\"	m	struct:vehicle_status_s\n 334704  rc_signal_lost	modules/PX4Firmware/src/modules/uORB/topics/vehicle_status.h	/^	bool rc_signal_lost;$/;\"	m	struct:vehicle_status_s\n .....\n 341666  set_frame_orientation	libraries/AP_Motors/AP_Motors_Class.h	/^    virtual void        set_frame_orientation( uint8_t new_orientation ) { _flags.frame_orientation = new_orientation; };$/;\"	f	class:AP_Motors\n 341667  set_frametype	modules/PX4Firmware/src/drivers/mkblctrl/mkblctrl.cpp	/^MK::set_frametype(int frametype)$/;\"	f	class:MK\n 341668: set_freq	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) {}$/;\"	f	class:RCOutput\n 341669: set_freq	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_freq(uint32_t freq)$/;\"	f	class:Linux::PWM_Sysfs_Base\n 341670: set_freq	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_AioPRU\n 341671: set_freq	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_Bebop\n 341672: set_freq	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_PCA9685\n 341673: set_freq	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::set_freq(uint32_t chmask, uint16_t freq_hz)            \\/\\/LSB corresponds to CHAN_1$/;\"	f	class:RCOutput_PRU\n 341674: set_freq	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_Raspilot\n 341675: set_freq	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:Linux::RCOutput_Sysfs\n 341676: set_freq	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::set_freq(uint32_t chmask, uint16_t freq_hz)            \\/\\/LSB corresponds to CHAN_1$/;\"	f	class:RCOutput_ZYNQ\n 341677: set_freq	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_QFLIGHT\n 341678: set_freq	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 341679: set_freq	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput\n 341680: set_freq	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput\n 341681: set_freq	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:VRBRAINRCOutput\n 341682: set_freq_fd	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 341683: set_frequency	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::set_frequency(uint32_t frequency)$/;\"	f	class:device::SPI\n 341684  set_full_paths_hpux	modules/waf/waflib/Tools/ccroot.py	/^def set_full_paths_hpux(self):$/;\"	f\n 341685  set_gcj_classpath	modules/waf/playground/gcj/gcj.py	/^def set_gcj_classpath(self):$/;\"	f\n\n/home/rutk1t0r/src/ardupilot/.tags_sorted_by_file:\n 24348  read	libraries/AP_HAL_Empty/RCOutput.cpp	/^uint16_t RCOutput::read(uint8_t ch) {$/;\"	f	class:RCOutput\n 24349  read	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput\n 24350: set_freq	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) {}$/;\"	f	class:RCOutput\n 24351  write	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput\n 24352  RCOutput	libraries/AP_HAL_Empty/RCOutput.h	/^class Empty::RCOutput : public AP_HAL::RCOutput {$/;\"	c	class:Empty\n .....\n 25145  is_enabled	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^bool PWM_Sysfs_Base::is_enabled()$/;\"	f	class:Linux::PWM_Sysfs_Base\n 25146  set_duty_cycle	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^bool PWM_Sysfs_Base::set_duty_cycle(uint32_t nsec_duty_cycle)$/;\"	f	class:Linux::PWM_Sysfs_Base\n 25147: set_freq	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_freq(uint32_t freq)$/;\"	f	class:Linux::PWM_Sysfs_Base\n 25148  set_period	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_period(uint32_t nsec_period)$/;\"	f	class:Linux::PWM_Sysfs_Base\n 25149  set_polarity	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_polarity(PWM_Sysfs_Base::Polarity polarity)$/;\"	f	class:Linux::PWM_Sysfs_Base\n .....\n 25450  read	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^uint16_t RCOutput_AioPRU::read(uint8_t ch)$/;\"	f	class:RCOutput_AioPRU\n 25451  read	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput_AioPRU\n 25452: set_freq	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_AioPRU\n 25453  write	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_AioPRU\n 25454  PWM_CHAN_COUNT	libraries/AP_HAL_Linux/RCOutput_AioPRU.h	17;\"	d\n .....\n 25520  rpm	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint16_t    rpm[BEBOP_BLDC_MOTORS_NUM];$/;\"	m	struct:bldc_ref_speed_data	file:\n 25521  set_esc_scaling	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_esc_scaling(uint16_t min_pwm, uint16_t max_pwm)$/;\"	f	class:RCOutput_Bebop\n 25522: set_freq	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_Bebop\n 25523  status	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint8_t     status;$/;\"	m	struct:bldc_obs_data	file:\n 25524  temp	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint8_t     temp;$/;\"	m	struct:bldc_obs_data	file:\n .....\n 25622  read	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput_PCA9685\n 25623  reset_all_channels	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::reset_all_channels()$/;\"	f	class:RCOutput_PCA9685\n 25624: set_freq	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_PCA9685\n 25625  write	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_PCA9685\n 25626  ~RCOutput_PCA9685	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^RCOutput_PCA9685::~RCOutput_PCA9685()$/;\"	f	class:RCOutput_PCA9685\n .....\n 25652  read	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^uint16_t RCOutput_PRU::read(uint8_t ch)$/;\"	f	class:RCOutput_PRU\n 25653  read	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput_PRU\n 25654: set_freq	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::set_freq(uint32_t chmask, uint16_t freq_hz)            \\/\\/LSB corresponds to CHAN_1$/;\"	f	class:RCOutput_PRU\n 25655  write	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_PRU\n 25656  MAX_PWMS	libraries/AP_HAL_Linux/RCOutput_PRU.h	5;\"	d\n .....\n 25685  read	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^uint16_t RCOutput_Raspilot::read(uint8_t ch)$/;\"	f	class:RCOutput_Raspilot\n 25686  read	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput_Raspilot\n 25687: set_freq	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_Raspilot\n 25688  write	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_Raspilot\n 25689  RCOutput_Raspilot	libraries/AP_HAL_Linux/RCOutput_Raspilot.h	/^class Linux::RCOutput_Raspilot : public AP_HAL::RCOutput {$/;\"	c	class:Linux\n .....\n 25701  read	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^uint16_t RCOutput_Sysfs::read(uint8_t ch)$/;\"	f	class:Linux::RCOutput_Sysfs\n 25702  read	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::read(uint16_t *period_us, uint8_t len)$/;\"	f	class:Linux::RCOutput_Sysfs\n 25703: set_freq	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:Linux::RCOutput_Sysfs\n 25704  write	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:Linux::RCOutput_Sysfs\n 25705  ~RCOutput_Sysfs	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^RCOutput_Sysfs::~RCOutput_Sysfs()$/;\"	f	class:Linux::RCOutput_Sysfs\n .....\n 25717  read	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^uint16_t RCOutput_ZYNQ::read(uint8_t ch)$/;\"	f	class:RCOutput_ZYNQ\n 25718  read	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput_ZYNQ\n 25719: set_freq	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::set_freq(uint32_t chmask, uint16_t freq_hz)            \\/\\/LSB corresponds to CHAN_1$/;\"	f	class:RCOutput_ZYNQ\n 25720  write	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_ZYNQ\n 25721  MAX_ZYNQ_PWMS	libraries/AP_HAL_Linux/RCOutput_ZYNQ.h	5;\"	d\n .....\n 25745  read	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::read(uint16_t *period_us, uint8_t len)$/;\"	f	class:RCOutput_QFLIGHT\n 25746  set_device_path	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_device_path(const char *_device)$/;\"	f	class:RCOutput_QFLIGHT\n 25747: set_freq	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_QFLIGHT\n 25748  timer_update	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::timer_update(void)$/;\"	f	class:RCOutput_QFLIGHT\n 25749  write	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_QFLIGHT\n .....\n 26890  read_last_sent	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::read_last_sent(uint16_t* period_us, uint8_t len)$/;\"	f	class:PX4RCOutput\n 26891  set_failsafe_pwm	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_failsafe_pwm(uint32_t chmask, uint16_t period_us)$/;\"	f	class:PX4RCOutput\n 26892: set_freq	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 26893: set_freq_fd	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 26894  set_output_mode	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_output_mode(enum output_mode mode)$/;\"	f	class:PX4RCOutput\n 26895  set_safety_pwm	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_safety_pwm(uint32_t chmask, uint16_t period_us)$/;\"	f	class:PX4RCOutput\n .....\n 26931  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     read_last_sent(uint16_t* period_us, uint8_t len) override;$/;\"	m	class:PX4::PX4RCOutput\n 26932  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_failsafe_pwm(uint32_t chmask, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n 26933: override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\"	m	class:PX4::PX4RCOutput\n 26934  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_safety_pwm(uint32_t chmask, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n 26935  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n .....\n 27171  read	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::read(uint16_t *period_us, uint8_t len)$/;\"	f	class:RCOutput\n 27172  read_callback_trampoline	libraries/AP_HAL_QURT/RCOutput.cpp	/^    static void read_callback_trampoline(void *, char *, size_t ) {}$/;\"	f	file:\n 27173: set_freq	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput\n 27174  timer_update	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::timer_update(void)$/;\"	f	class:RCOutput\n 27175  write	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput\n .....\n 27414  read	libraries/AP_HAL_SITL/RCOutput.cpp	/^uint16_t RCOutput::read(uint8_t ch)$/;\"	f	class:RCOutput\n 27415  read	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput\n 27416: set_freq	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput\n 27417  write	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput\n 27418  RCOutput	libraries/AP_HAL_SITL/RCOutput.h	/^    RCOutput(SITL_State *sitlState) {$/;\"	f	class:HALSITL::RCOutput\n .....\n 27427  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     init() override;$/;\"	m	class:HALSITL::RCOutput\n 27428  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     read(uint16_t* period_us, uint8_t len) override;$/;\"	m	class:HALSITL::RCOutput\n 27429: override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\"	m	class:HALSITL::RCOutput\n 27430  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\"	m	class:HALSITL::RCOutput\n 27431  _apply_servo_filter	libraries/AP_HAL_SITL/SITL_State.cpp	/^void SITL_State::_apply_servo_filter(float deltat)$/;\"	f	class:SITL_State\n .....\n 27857  read	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:VRBRAINRCOutput\n 27858  set_failsafe_pwm	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_failsafe_pwm(uint32_t chmask, uint16_t period_us)$/;\"	f	class:VRBRAINRCOutput\n 27859: set_freq	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:VRBRAINRCOutput\n 27860  set_safety_pwm	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_safety_pwm(uint32_t chmask, uint16_t period_us)$/;\"	f	class:VRBRAINRCOutput\n 27861  write	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:VRBRAINRCOutput\n .....\n 30536  rc_enable_ch	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_enable_ch(uint8_t chan)$/;\"	f	class:AP_Motors\n 30537  rc_map_mask	libraries/AP_Motors/AP_Motors_Class.cpp	/^uint32_t AP_Motors::rc_map_mask(uint32_t mask) const$/;\"	f	class:AP_Motors\n 30538: rc_set_freq	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)$/;\"	f	class:AP_Motors\n 30539  rc_write	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_write(uint8_t chan, uint16_t pwm)$/;\"	f	class:AP_Motors\n 30540  set_radio_passthrough	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::set_radio_passthrough(float roll_input, float pitch_input, float throttle_input, float yaw_input)$/;\"	f	class:AP_Motors\n .....\n 128748  init	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::init()$/;\"	f	class:device::SPI\n 128749  probe	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::probe()$/;\"	f	class:device::SPI\n 128750: set_frequency	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::set_frequency(uint32_t frequency)$/;\"	f	class:device::SPI\n 128751  transfer	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::transfer(uint8_t *send, uint8_t *recv, unsigned len)$/;\"	f	class:device::SPI\n 128752  ~SPI	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::~SPI()$/;\"	f	class:device::SPI\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/RCOutput.h:\n   34  \n   35      /* Output freq (1/period) control */\n   36:     virtual void     set_freq(uint32_t chmask, uint16_t freq_hz) = 0;\n   37      virtual uint16_t get_freq(uint8_t ch) = 0;\n   38  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput/RCOutput.cpp:\n   34  /* Function to drive a RC output TYPE especified */\n   35  void drive(uint16_t hz_speed) {\n   36:     hal.rcout->set_freq(0xFF, hz_speed);\n   37  \n   38      while (1) {\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput2/RCOutput.cpp:\n   34  /* Function to drive a RC output TYPE especified */\n   35  void drive(uint16_t hz_speed) {\n   36:     hal.rcout->set_freq(0xFF, hz_speed);\n   37  \n   38      while (1) {\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.cpp:\n   98    set output frequency on outputs associated with fd\n   99   */\n  100: void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) \n  101  {\n  102      // we can't set this per channel\n  ...\n  164    set output frequency\n  165   */\n  166: void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) \n  167  {\n  168      if (freq_hz > 50 && _output_mode == MODE_PWM_ONESHOT) {\n  ...\n  189      uint32_t alt_mask = chmask >> _servo_count;\n  190      if (primary_mask && _pwm_fd != -1) {\n  191:         set_freq_fd(_pwm_fd, primary_mask, freq_hz);\n  192      }\n  193      if (alt_mask && _alt_fd != -1) {\n  194:         set_freq_fd(_alt_fd, alt_mask, freq_hz);\n  195      }\n  196  }\n  ...\n  559          // produced except when triggered by push() when the main loop\n  560          // is running\n  561:         set_freq(_rate_mask, 1);\n  562      }\n  563      _output_mode = mode;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.h:\n   12  public:\n   13      void     init() override;\n   14:     void     set_freq(uint32_t chmask, uint16_t freq_hz) override;\n   15      uint16_t get_freq(uint8_t ch) override;\n   16      void     enable_ch(uint8_t ch) override;\n   ..\n   66      void _publish_actuators(void);\n   67      void _arm_actuators(bool arm);\n   68:     void set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz);\n   69      bool _corking;\n   70      enum output_mode _output_mode = MODE_PWM_NORMAL;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.cpp:\n   94          1U << AP_MOTORS_MOT_3 |\n   95          1U << AP_MOTORS_MOT_4 ;\n   96:     rc_set_freq(mask, _servo_speed);\n   97      uint32_t mask2 =\n   98          1U << AP_MOTORS_MOT_5 |\n   99          1U << AP_MOTORS_MOT_6 ;\n  100:     rc_set_freq(mask2, _speed_hz);\n  101  }\n  102  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.cpp:\n  150          1U << AP_MOTORS_MOT_3 |\n  151          1U << AP_MOTORS_MOT_4;\n  152:     rc_set_freq(mask, _speed_hz);\n  153  }\n  154  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.cpp:\n   50          }\n   51      }\n   52:     rc_set_freq( mask, _speed_hz );\n   53  }\n   54  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.cpp:\n   97          1U << AP_MOTORS_MOT_3 |\n   98          1U << AP_MOTORS_MOT_4 ;\n   99:     rc_set_freq(mask, _servo_speed);\n  100      uint32_t mask2 =\n  101          1U << AP_MOTORS_MOT_5 |\n  102          1U << AP_MOTORS_MOT_6 ;\n  103:     rc_set_freq(mask2, _speed_hz);\n  104  }\n  105  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.cpp:\n  110  	    1U << AP_MOTORS_MOT_2 |\n  111  	    1U << AP_MOTORS_MOT_4;\n  112:     rc_set_freq(mask, _speed_hz);\n  113  }\n  114  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.cpp:\n   99    set frequency of a set of channels\n  100   */\n  101: void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)\n  102  {\n  103      mask = rc_map_mask(mask);\n  ...\n  105          _motor_fast_mask |= mask;\n  106      }\n  107:     hal.rcout->set_freq(mask, freq_hz);\n  108      if ((_pwm_type == PWM_TYPE_ONESHOT ||\n  109           _pwm_type == PWM_TYPE_ONESHOT125) &&\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.h:\n  133      virtual void        output_armed_stabilizing()=0;\n  134      virtual void        rc_write(uint8_t chan, uint16_t pwm);\n  135:     virtual void        rc_set_freq(uint32_t mask, uint16_t freq_hz);\n  136      virtual void        rc_enable_ch(uint8_t chan);\n  137      virtual uint32_t    rc_map_mask(uint32_t mask) const;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/RCOutputRGBLed.cpp:\n   67          const uint32_t mask = 1 << _red_channel | 1 << _green_channel\n   68                                | 1 << _blue_channel;\n   69:         hal.rcout->set_freq(mask, freq_motor);\n   70      }\n   71  \n\n/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/examples/RC_UART/RC_UART.cpp:\n   38      hal.console->println(\"RC_UART starting\");\n   39      hal.UART->begin(baudrate, 512, 512);\n   40:     hal.rcout->set_freq(0xFF, RC_SPEED);\n   41  }\n   42  \n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf.map:\n 5852   .text._ZN5Empty8RCOutput4initEv\n 5853                  0x00000000        0x2 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 5854:  .text._ZN5Empty8RCOutput8set_freqEjt\n 5855                  0x00000000        0x2 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 5856   .text._ZN5Empty8RCOutput8get_freqEh\n ....\n 22434                  0x08005f7c       0x3e /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 22435   *fill*         0x08005fba        0x2 \n 22436:  .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\n 22437                  0x08005fbc       0xc4 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 22438:  .text._ZN3PX411PX4RCOutput8set_freqEjt\n 22439                  0x08006080       0xa8 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 22440   .text._ZN3PX411PX4RCOutput14_arm_actuatorsEb\n .....\n 23064                  0x0800aa1c                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\n 23065                  0x0800aa1c                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\n 23066:  .text._ZN6device3SPI13set_frequencyEj\n 23067                  0x0800aa64        0x4 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o\n 23068:                 0x0800aa64                device::SPI::set_frequency(unsigned int)\n 23069   .text._ZN6device3SPI9_transferEPhS1_j\n 23070                  0x0800aa68       0x60 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/module.pre.o.map:\n 62633                  0x00000000                Empty::RCOutput::init()\n 62634  \n 62635: .text._ZN5Empty8RCOutput8set_freqEjt\n 62636                  0x00000000        0x2\n 62637:  .text._ZN5Empty8RCOutput8set_freqEjt\n 62638                  0x00000000        0x2 libraries/AP_HAL_Empty/RCOutput.cpp.o\n 62639:                 0x00000000                Empty::RCOutput::set_freq(unsigned int, unsigned short)\n 62640  \n 62641  .text._ZN5Empty8RCOutput8get_freqEh\n .....\n 63291                  0x00000000                PX4::PX4RCOutput::enable_ch(unsigned char)\n 63292  \n 63293: .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\n 63294                  0x00000000       0xc4\n 63295:  .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\n 63296                  0x00000000       0xc4 libraries/AP_HAL_PX4/RCOutput.cpp.o\n 63297:                 0x00000000                PX4::PX4RCOutput::set_freq_fd(int, unsigned int, unsigned short)\n 63298  \n 63299: .text._ZN3PX411PX4RCOutput8set_freqEjt\n 63300                  0x00000000       0xa8\n 63301:  .text._ZN3PX411PX4RCOutput8set_freqEjt\n 63302                  0x00000000       0xa8 libraries/AP_HAL_PX4/RCOutput.cpp.o\n 63303:                 0x00000000                PX4::PX4RCOutput::set_freq(unsigned int, unsigned short)\n 63304  \n 63305  .text._ZN3PX411PX4RCOutput14_arm_actuatorsEb\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o.map:\n 1544                  0x00000000                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\n 1545  \n 1546: .text._ZN6device3SPI13set_frequencyEj\n 1547                  0x00000000        0x4\n 1548:  .text._ZN6device3SPI13set_frequencyEj\n 1549                  0x00000000        0x4 spi.cpp.o\n 1550:                 0x00000000                device::SPI::set_frequency(unsigned int)\n 1551  \n 1552  .text._ZN6device3SPI9_transferEPhS1_j\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/spi.cpp:\n  174  \n  175  void\n  176: SPI::set_frequency(uint32_t frequency)\n  177  {\n  178  	_frequency = frequency;\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/spi.h:\n  124  	 * @param frequency	Frequency to set (Hz)\n  125  	 */\n  126: 	void		set_frequency(uint32_t frequency);\n  127  \n  128  	/**\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu6000/mpu6000.cpp:\n 1087  \n 1088  	// get baseline values without self-test enabled\n 1089: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\n 1090  \n 1091  	memset(accel_baseline, 0, sizeof(accel_baseline));\n ....\n 1121  \n 1122  	// get values with self-test enabled\n 1123: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\n 1124  \n 1125  \n ....\n 1538  \n 1539  	// general register transfer at low clock speed\n 1540: 	set_frequency(speed);\n 1541  \n 1542  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1551  \n 1552  	// general register transfer at low clock speed\n 1553: 	set_frequency(MPU6000_LOW_BUS_SPEED);\n 1554  \n 1555  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1567  \n 1568  	// general register transfer at low clock speed\n 1569: 	set_frequency(MPU6000_LOW_BUS_SPEED);\n 1570  \n 1571  	transfer(cmd, nullptr, sizeof(cmd));\n ....\n 1769  \n 1770  	// sensor transfer at high clock speed\n 1771: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\n 1772  \n 1773  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu6500/mpu6500.cpp:\n 1019  //\n 1020  //	// get baseline values without self-test enabled\n 1021: //      set_frequency(MPU6500_HIGH_BUS_SPEED);\n 1022  \n 1023  //	memset(accel_baseline, 0, sizeof(accel_baseline));\n ....\n 1053  \n 1054  //	// get values with self-test enabled\n 1055: //        set_frequency(MPU6500_HIGH_BUS_SPEED);\n 1056  \n 1057  \n ....\n 1446  \n 1447  	// general register transfer at low clock speed\n 1448: 	set_frequency(speed);\n 1449  \n 1450  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1459  \n 1460  	// general register transfer at low clock speed\n 1461: 	set_frequency(MPU6500_LOW_BUS_SPEED);\n 1462  \n 1463  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1475  \n 1476  	// general register transfer at low clock speed\n 1477: 	set_frequency(MPU6500_LOW_BUS_SPEED);\n 1478  \n 1479  	transfer(cmd, nullptr, sizeof(cmd));\n ....\n 1679  \n 1680  	// sensor transfer at high clock speed\n 1681: 	set_frequency(MPU6500_HIGH_BUS_SPEED);\n 1682  \n 1683  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu9250/mpu9250.cpp:\n 1053  \n 1054  	// general register transfer at low clock speed\n 1055: 	set_frequency(speed);\n 1056  \n 1057  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1066  \n 1067  	// general register transfer at low clock speed\n 1068: 	set_frequency(MPU9250_LOW_BUS_SPEED);\n 1069  \n 1070  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1082  \n 1083  	// general register transfer at low clock speed\n 1084: 	set_frequency(MPU9250_LOW_BUS_SPEED);\n 1085  \n 1086  	transfer(cmd, nullptr, sizeof(cmd));\n ....\n 1310  \n 1311  	// sensor transfer at high clock speed\n 1312: 	set_frequency(MPU9250_HIGH_BUS_SPEED);\n 1313  \n 1314  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/platforms/posix/drivers/gyrosim/gyrosim.cpp:\n 1047  \n 1048  	// sensor transfer at high clock speed\n 1049: 	//set_frequency(GYROSIM_HIGH_BUS_SPEED);\n 1050  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\n 1051  		return;\n\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\n130 matches across 25 files\n\n\nSearching 16944 files for \"set_update_rate\"\n\n/home/rutk1t0r/src/ardupilot/.tags:\n 169821  PWM_SERVO_SET_SELECT_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	165;\"	d\n 169822  PWM_SERVO_SET_TERMINATION_FAILSAFE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	227;\"	d\n 169823: PWM_SERVO_SET_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	156;\"	d\n 169824  PWM_Sysfs	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^PWM_Sysfs::PWM_Sysfs(uint8_t chip, uint8_t channel) :$/;\"	f	class:Linux::PWM_Sysfs\n 169825  PWM_Sysfs	libraries/AP_HAL_Linux/PWM_Sysfs.h	/^class Linux::PWM_Sysfs : public Linux::PWM_Sysfs_Base {$/;\"	c	class:Linux\n .....\n 336865  reset_takeoff_state	modules/PX4Firmware/src/modules/fw_pos_control_l1/fw_pos_control_l1_main.cpp	/^void FixedwingPositionControl::reset_takeoff_state()$/;\"	f	class:FixedwingPositionControl\n 336866  reset_target_validity	modules/PX4Firmware/src/modules/navigator/follow_target.cpp	/^void FollowTarget::reset_target_validity()$/;\"	f	class:FollowTarget\n 336867: reset_update_rates	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::reset_update_rates()$/;\"	f	class:GPS_Helper\n 336868  resgen	modules/waf/waflib/extras/resx.py	/^class resgen(Task.Task):$/;\"	c\n 336869  residue	modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/usb/storage.h	/^  uint8_t residue[4];             \\/* Amount not transferred *\\/$/;\"	m	struct:usbmsc_csw_s\n .....\n 342134  set_up_was_run	modules/gtest/test/gtest_environment_test.cc	/^  bool set_up_was_run() const { return set_up_was_run_; }$/;\"	f	class:__anon823::MyEnvironment\n 342135  set_up_was_run_	modules/gtest/test/gtest_environment_test.cc	/^  bool set_up_was_run_;$/;\"	m	class:__anon823::MyEnvironment	file:\n 342136: set_update_rate	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsCoax\n 342137: set_update_rate	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsHeli_Single\n 342138: set_update_rate	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsMatrix\n 342139: set_update_rate	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsSingle\n 342140: set_update_rate	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsTri\n 342141: set_update_rate	libraries/AP_Motors/AP_Motors_Class.h	/^    virtual void        set_update_rate( uint16_t speed_hz ) { _speed_hz = speed_hz; };$/;\"	f	class:AP_Motors\n 342142: set_update_rate	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^PX4IO::set_update_rate(int rate)$/;\"	f	class:PX4IO\n 342143  set_usb_connected	libraries/AP_HAL_PX4/GPIO.h	/^    void set_usb_connected(void) { _usb_connected = true; }$/;\"	f	class:PX4::PX4GPIO\n 342144  set_use_imt	Tools/Replay/LogReader.h	/^    void set_use_imt(bool _use_imt) { use_imt = _use_imt; }$/;\"	f	class:LogReader\n\n/home/rutk1t0r/src/ardupilot/.tags_sorted_by_file:\n 30149  output_test	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsCoax\n 30150  output_to_motors	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_to_motors()$/;\"	f	class:AP_MotorsCoax\n 30151: set_update_rate	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsCoax\n 30152  var_info	libraries/AP_Motors/AP_MotorsCoax.cpp	/^const AP_Param::GroupInfo AP_MotorsCoax::var_info[] = {$/;\"	m	class:AP_MotorsCoax	file:\n 30153  AP_MOTORS_COAX_NEGATIVE	libraries/AP_Motors/AP_MotorsCoax.h	14;\"	d\n .....\n 30294  servo_test	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::servo_test()$/;\"	f	class:AP_MotorsHeli_Single\n 30295  set_desired_rotor_speed	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::set_desired_rotor_speed(float desired_speed)$/;\"	f	class:AP_MotorsHeli_Single\n 30296: set_update_rate	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsHeli_Single\n 30297  update_motor_control	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::update_motor_control(RotorControlState state)$/;\"	f	class:AP_MotorsHeli_Single\n 30298  var_info	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^const AP_Param::GroupInfo AP_MotorsHeli_Single::var_info[] = {$/;\"	m	class:AP_MotorsHeli_Single	file:\n .....\n 30365  remove_motor	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::remove_motor(int8_t motor_num)$/;\"	f	class:AP_MotorsMatrix\n 30366  set_frame_orientation	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::set_frame_orientation( uint8_t new_orientation )$/;\"	f	class:AP_MotorsMatrix\n 30367: set_update_rate	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsMatrix\n 30368  thrust_compensation	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::thrust_compensation(void)$/;\"	f	class:AP_MotorsMatrix\n 30369  AP_MOTORS_MATRIX_YAW_FACTOR_CCW	libraries/AP_Motors/AP_MotorsMatrix.h	13;\"	d\n .....\n 30480  output_test	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsSingle\n 30481  output_to_motors	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::output_to_motors()$/;\"	f	class:AP_MotorsSingle\n 30482: set_update_rate	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsSingle\n 30483  var_info	libraries/AP_Motors/AP_MotorsSingle.cpp	/^const AP_Param::GroupInfo AP_MotorsSingle::var_info[] = {$/;\"	m	class:AP_MotorsSingle	file:\n 30484  AP_MOTORS_SINGLE_SERVO_INPUT_RANGE	libraries/AP_Motors/AP_MotorsSingle.h	21;\"	d\n .....\n 30506  output_test	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::output_test(uint8_t motor_seq, int16_t pwm)$/;\"	f	class:AP_MotorsTri\n 30507  output_to_motors	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::output_to_motors()$/;\"	f	class:AP_MotorsTri\n 30508: set_update_rate	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::set_update_rate( uint16_t speed_hz )$/;\"	f	class:AP_MotorsTri\n 30509  thrust_compensation	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::thrust_compensation(void)$/;\"	f	class:AP_MotorsTri\n 30510  var_info	libraries/AP_Motors/AP_MotorsTri.cpp	/^const AP_Param::GroupInfo AP_MotorsTri::var_info[] = {$/;\"	m	class:AP_MotorsTri	file:\n .....\n 30610  set_throttle	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_throttle(float throttle_in) { _throttle_in = throttle_in; };   \\/\\/ range 0 ~ 1$/;\"	f	class:AP_Motors\n 30611  set_throttle_filter_cutoff	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_throttle_filter_cutoff(float filt_hz) { _throttle_filter.set_cutoff_frequency(filt_hz); }$/;\"	f	class:AP_Motors\n 30612: set_update_rate	libraries/AP_Motors/AP_Motors_Class.h	/^    virtual void        set_update_rate( uint16_t speed_hz ) { _speed_hz = speed_hz; };$/;\"	f	class:AP_Motors\n 30613  set_voltage	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_voltage(float volts){ _batt_voltage = volts; }$/;\"	f	class:AP_Motors\n 30614  set_yaw	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_yaw(float yaw_in) { _yaw_in = yaw_in; };            \\/\\/ range -1 ~ +1$/;\"	f	class:AP_Motors\n .....\n 129337  PWM_SERVO_SET_SELECT_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	165;\"	d\n 129338  PWM_SERVO_SET_TERMINATION_FAILSAFE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	227;\"	d\n 129339: PWM_SERVO_SET_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	156;\"	d\n 129340  _PWM_SERVO_BASE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	144;\"	d\n 129341  channel	modules/PX4Firmware/src/drivers/drv_pwm_output.h	/^	uint8_t channel;$/;\"	m	struct:pwm_output_rc_config\n .....\n 129817  get_velocity_update_rate	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::get_velocity_update_rate()$/;\"	f	class:GPS_Helper\n 129818  poll_or_read	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::poll_or_read(int fd, uint8_t *buf, size_t buf_length, uint64_t timeout)$/;\"	f	class:GPS_Helper\n 129819: reset_update_rates	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::reset_update_rates()$/;\"	f	class:GPS_Helper\n 129820  set_baudrate	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::set_baudrate(const int &fd, unsigned baud)$/;\"	f	class:GPS_Helper\n 129821  store_update_rates	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::store_update_rates()$/;\"	f	class:GPS_Helper\n .....\n 133193  set_battery_current_scaling	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^PX4IO::set_battery_current_scaling(float amp_per_volt, float amp_bias)$/;\"	f	class:PX4IO\n 133194  set_dsm_vcc_ctl	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^	inline void		set_dsm_vcc_ctl(bool enable)$/;\"	f	class:PX4IO\n 133195: set_update_rate	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^PX4IO::set_update_rate(int rate)$/;\"	f	class:PX4IO\n 133196  start	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^start(int argc, char *argv[])$/;\"	f	namespace:__anon801\n 133197  system_status	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^	inline uint16_t		system_status() const {return _status;}$/;\"	f	class:PX4IO\n\n/home/rutk1t0r/src/ardupilot/ArduCopter/esc_calibration.cpp:\n   83  \n   84      // reduce update rate to motors to 50Hz\n   85:     motors.set_update_rate(50);\n   86  \n   87      // send message to GCS\n   ..\n  113  \n  114      // reduce update rate to motors to 50Hz\n  115:     motors.set_update_rate(50);\n  116  \n  117      // send message to GCS\n\n/home/rutk1t0r/src/ardupilot/ArduCopter/radio.cpp:\n   55  void Copter::init_rc_out()\n   56  {\n   57:     motors.set_update_rate(g.rc_speed);\n   58      motors.set_frame_orientation(g.frame_orientation);\n   59      motors.Init();                                              // motor initialisation\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.cpp:\n  111              freq_hz = 1;\n  112          }\n  113:         //::printf(\"SET_UPDATE_RATE %u\\n\", (unsigned)freq_hz);\n  114:         if (ioctl(fd, PWM_SERVO_SET_UPDATE_RATE, (unsigned long)freq_hz) != 0) {\n  115              hal.console->printf(\"RCOutput: Unable to set alt rate to %uHz\\n\", (unsigned)freq_hz);\n  116              return;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_VRBRAIN/RCOutput.cpp:\n   52      if (freq_hz > 50) {\n   53          // we're being asked to set the alt rate\n   54:         if (ioctl(_pwm_fd, PWM_SERVO_SET_UPDATE_RATE, (unsigned long)freq_hz) != 0) {\n   55              hal.console->printf(\"RCOutput: Unable to set alt rate to %uHz\\n\", (unsigned)freq_hz);\n   56              return;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.cpp:\n   65  {\n   66      // set update rate for the 3 motors (but not the servo on channel 7)\n   67:     set_update_rate(_speed_hz);\n   68  \n   69      // set the motor_enabled flag so that the main ESC can be calibrated like other frame types\n   ..\n   83  \n   84  // set update rate to motors - a value in hertz\n   85: void AP_MotorsCoax::set_update_rate( uint16_t speed_hz )\n   86  {\n   87      // record requested speed\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.h:\n   37  \n   38      // set update rate to motors - a value in hertz\n   39:     void                set_update_rate( uint16_t speed_hz );\n   40  \n   41      // enable - starts allowing signals to be sent to motors\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli.cpp:\n  168  {\n  169      // set update rate\n  170:     set_update_rate(_speed_hz);\n  171  \n  172      // load boot-up servo test cycles into counter to be consumed\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli.h:\n   69      // set update rate to motors - a value in hertz\n   70      // you must have setup_motors before calling this\n   71:     virtual void set_update_rate( uint16_t speed_hz ) = 0;\n   72  \n   73      // enable - starts allowing signals to be sent to motors\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.cpp:\n  139  \n  140  // set update rate to motors - a value in hertz\n  141: void AP_MotorsHeli_Single::set_update_rate( uint16_t speed_hz )\n  142  {\n  143      // record requested speed\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.h:\n   59      // set update rate to motors - a value in hertz\n   60      // you must have setup_motors before calling this\n   61:     void set_update_rate(uint16_t speed_hz);\n   62  \n   63      // enable - starts allowing signals to be sent to motors and servos\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.cpp:\n   32  \n   33      // enable fast channels or instant pwm\n   34:     set_update_rate(_speed_hz);\n   35  }\n   36  \n   37  // set update rate to motors - a value in hertz\n   38: void AP_MotorsMatrix::set_update_rate( uint16_t speed_hz )\n   39  {\n   40      uint8_t i;\n   ..\n   68  \n   69      // enable fast channels or instant pwm\n   70:     set_update_rate(_speed_hz);\n   71  }\n   72  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.h:\n   27      // set update rate to motors - a value in hertz\n   28      // you must have setup_motors before calling this\n   29:     void                set_update_rate(uint16_t speed_hz);\n   30  \n   31      // set frame orientation (normally + or X)\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.cpp:\n   65  {\n   66      // set update rate for the 3 motors (but not the servo on channel 7)\n   67:     set_update_rate(_speed_hz);\n   68  \n   69      // set the motor_enabled flag so that the main ESC can be calibrated like other frame types\n   ..\n   86  \n   87  // set update rate to motors - a value in hertz\n   88: void AP_MotorsSingle::set_update_rate( uint16_t speed_hz )\n   89  {\n   90      // record requested speed\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.h:\n   37  \n   38      // set update rate to motors - a value in hertz\n   39:     void                set_update_rate( uint16_t speed_hz );\n   40  \n   41      // enable - starts allowing signals to be sent to motors\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.cpp:\n   88      \n   89      // set update rate for the 3 motors (but not the servo on channel 7)\n   90:     set_update_rate(_speed_hz);\n   91  \n   92      // set the motor_enabled flag so that the ESCs can be calibrated like other frame types\n   ..\n  100  \n  101  // set update rate to motors - a value in hertz\n  102: void AP_MotorsTri::set_update_rate( uint16_t speed_hz )\n  103  {\n  104      // record requested speed\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.h:\n   31  \n   32      // set update rate to motors - a value in hertz\n   33:     void                set_update_rate( uint16_t speed_hz );\n   34  \n   35      // enable - starts allowing signals to be sent to motors\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.h:\n   44  \n   45      // set update rate to motors - a value in hertz\n   46:     virtual void        set_update_rate( uint16_t speed_hz ) { _speed_hz = speed_hz; };\n   47  \n   48      // set frame orientation (normally + or X)\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/examples/AP_Motors_test/AP_Motors_test.cpp:\n   64  \n   65      // motor initialisation\n   66:     motors.set_update_rate(490);\n   67      motors.set_frame_orientation(AP_MOTORS_X_FRAME);\n   68      motors.Init();\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf.map:\n 24324   .text._ZN5PX4IO12print_statusEb\n 24325                  0x0801e9d8      0x8f8 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/module.pre.o\n 24326:  .text._ZN5PX4IO15set_update_rateEi\n 24327                  0x0801f2d0       0x40 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/module.pre.o\n 24328   .text.px4io_main\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/module.pre.o.map:\n  940                  0x00000000                PX4IO::print_status(bool)\n  941  \n  942: .text._ZN5PX4IO15set_update_rateEi\n  943                  0x00000000       0x40\n  944:  .text._ZN5PX4IO15set_update_rateEi\n  945                  0x00000000       0x40 px4io.cpp.o\n  946:                 0x00000000                PX4IO::set_update_rate(int)\n  947  \n  948  .text._ZN5PX4IO27set_battery_current_scalingEff\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/drv_pwm_output.h:\n  154  \n  155  /** set alternate servo update rate */\n  156: #define PWM_SERVO_SET_UPDATE_RATE _PX4_IOC(_PWM_SERVO_BASE, 3)\n  157  \n  158  /** get alternate servo update rate */\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/gps/gps.cpp:\n  361  \n  362  					/* GPS is obviously detected successfully, reset statistics */\n  363: 					_Helper->reset_update_rates();\n  364  				}\n  365  \n  ...\n  398  						last_rate_count = 0;\n  399  						_Helper->store_update_rates();\n  400: 						_Helper->reset_update_rates();\n  401  					}\n  402  \n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/gps/gps_helper.cpp:\n   70  \n   71  void\n   72: GPS_Helper::reset_update_rates()\n   73  {\n   74  	_rate_count_vel = 0;\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/gps/gps_helper.h:\n   59  	float				get_position_update_rate();\n   60  	float				get_velocity_update_rate();\n   61: 	void				reset_update_rates();\n   62  	void				store_update_rates();\n   63  \n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mkblctrl/mkblctrl.cpp:\n  998  		break;\n  999  \n 1000: 	case PWM_SERVO_SET_UPDATE_RATE:\n 1001  		ret = OK;\n 1002  		break;\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/pwm_out_sim/pwm_out_sim.cpp:\n  619  		break;\n  620  \n  621: 	case PWM_SERVO_SET_UPDATE_RATE:\n  622  		// PWMSim always outputs at the alternate (usually faster) rate\n  623  		g_pwm_sim->set_pwm_rate(arg);\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4fmu/fmu.cpp:\n 1531  		break;\n 1532  \n 1533: 	case PWM_SERVO_SET_UPDATE_RATE:\n 1534  		ret = set_pwm_rate(_pwm_alt_rate_channels, _pwm_default_rate, arg);\n 1535  		break;\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/px4io.cpp:\n  185  	* 			Min 10 Hz, max 400 Hz\n  186  	*/\n  187: 	int      		set_update_rate(int rate);\n  188  \n  189  	/**\n  ...\n 2423  		break;\n 2424  \n 2425: 	case PWM_SERVO_SET_UPDATE_RATE:\n 2426  		/* set the requested alternate rate */\n 2427  		ret = io_reg_set(PX4IO_PAGE_SETUP, PX4IO_P_SETUP_PWM_ALTRATE, arg);\n ....\n 2986  \n 2987  int\n 2988: PX4IO::set_update_rate(int rate)\n 2989  {\n 2990  	int interval_ms = 1000 / rate;\n ....\n 3628  \n 3629  			if (limitrate > 0) {\n 3630: 				g_dev->set_update_rate(limitrate);\n 3631  \n 3632  			} else {\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/platforms/posix/drivers/gpssim/gpssim.cpp:\n  358  \n  359  			// GPS is obviously detected successfully, reset statistics\n  360: 			//_Helper->reset_update_rates();\n  361  \n  362  			while ((receive(TIMEOUT_5HZ)) > 0 && !_task_should_exit) {\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/systemcmds/pwm/pwm.c:\n  305  		/* change alternate PWM rate */\n  306  		if (alt_rate > 0) {\n  307: 			ret = ioctl(fd, PWM_SERVO_SET_UPDATE_RATE, alt_rate);\n  308  \n  309  			if (ret != OK) {\n  310: 				err(1, \"PWM_SERVO_SET_UPDATE_RATE (check rate for sanity)\");\n  311  			}\n  312  		}\n\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\n78 matches across 32 files\n\n\nSearching 16944 files for \"g.rc_speed\"\n\n/home/rutk1t0r/src/ardupilot/ArduCopter/radio.cpp:\n   55  void Copter::init_rc_out()\n   56  {\n   57:     motors.set_update_rate(g.rc_speed);\n   58      motors.set_frame_orientation(g.frame_orientation);\n   59      motors.Init();                                              // motor initialisation\n\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\n1 match in 1 file\n\n\nSearching 16944 files for \"g.rc_speed\"\n\n/home/rutk1t0r/src/ardupilot/ArduCopter/radio.cpp:\n   55  void Copter::init_rc_out()\n   56  {\n   57:     motors.set_update_rate(g.rc_speed);\n   58      motors.set_frame_orientation(g.frame_orientation);\n   59      motors.Init();                                              // motor initialisation\n\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\n1 match in 1 file\n\n\nSearching 16944 files for \"set_freq_fd\"\n\n/home/rutk1t0r/src/ardupilot/.tags:\n 341680  set_freq	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput\n 341681  set_freq	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:VRBRAINRCOutput\n 341682: set_freq_fd	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 341683  set_frequency	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::set_frequency(uint32_t frequency)$/;\"	f	class:device::SPI\n 341684  set_full_paths_hpux	modules/waf/waflib/Tools/ccroot.py	/^def set_full_paths_hpux(self):$/;\"	f\n\n/home/rutk1t0r/src/ardupilot/.tags_sorted_by_file:\n 26891  set_failsafe_pwm	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_failsafe_pwm(uint32_t chmask, uint16_t period_us)$/;\"	f	class:PX4RCOutput\n 26892  set_freq	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 26893: set_freq_fd	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 26894  set_output_mode	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_output_mode(enum output_mode mode)$/;\"	f	class:PX4RCOutput\n 26895  set_safety_pwm	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_safety_pwm(uint32_t chmask, uint16_t period_us)$/;\"	f	class:PX4RCOutput\n\n/home/rutk1t0r/src/ardupilot/ardupilot_amd64.sublime-workspace:\n   25  		},\n   26  		{\n   27: 			\"contents\": \"Searching 16684 files for \\\"set_freq\\\"\\n\\n/home/rutk1t0r/src/ardupilot/.tags:\\n 327859  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     read_last_sent(uint16_t* period_us, uint8_t len) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 327860  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_failsafe_pwm(uint32_t chmask, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 327861: override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 327862  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_safety_pwm(uint32_t chmask, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 327863  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n .....\\n 327885  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     init() override;$/;\\\"	m	class:HALSITL::RCOutput\\n 327886  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     read(uint16_t* period_us, uint8_t len) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 327887: override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 327888  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 327889  override	libraries/AP_HAL_VRBRAIN/HAL_VRBRAIN_Class.h	/^    void run(int argc, char* const argv[], Callbacks* callbacks) const override;$/;\\\"	m	class:HAL_VRBRAIN\\n .....\\n 334700  rc_return_th	modules/PX4Firmware/src/modules/sensors/sensors.cpp	/^		param_t rc_return_th;$/;\\\"	m	struct:Sensors::__anon472	file:\\n 334701  rc_reverse	modules/PX4Firmware/src/drivers/drv_pwm_output.h	/^	bool     rc_reverse;$/;\\\"	m	struct:pwm_output_rc_config\\n 334702: rc_set_freq	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)$/;\\\"	f	class:AP_Motors\\n 334703  rc_signal_found_once	modules/PX4Firmware/src/modules/uORB/topics/vehicle_status.h	/^	bool rc_signal_found_once;$/;\\\"	m	struct:vehicle_status_s\\n 334704  rc_signal_lost	modules/PX4Firmware/src/modules/uORB/topics/vehicle_status.h	/^	bool rc_signal_lost;$/;\\\"	m	struct:vehicle_status_s\\n .....\\n 341666  set_frame_orientation	libraries/AP_Motors/AP_Motors_Class.h	/^    virtual void        set_frame_orientation( uint8_t new_orientation ) { _flags.frame_orientation = new_orientation; };$/;\\\"	f	class:AP_Motors\\n 341667  set_frametype	modules/PX4Firmware/src/drivers/mkblctrl/mkblctrl.cpp	/^MK::set_frametype(int frametype)$/;\\\"	f	class:MK\\n 341668: set_freq	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) {}$/;\\\"	f	class:RCOutput\\n 341669: set_freq	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_freq(uint32_t freq)$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n 341670: set_freq	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_AioPRU\\n 341671: set_freq	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_Bebop\\n 341672: set_freq	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_PCA9685\\n 341673: set_freq	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::set_freq(uint32_t chmask, uint16_t freq_hz)            \\\\/\\\\/LSB corresponds to CHAN_1$/;\\\"	f	class:RCOutput_PRU\\n 341674: set_freq	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_Raspilot\\n 341675: set_freq	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n 341676: set_freq	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::set_freq(uint32_t chmask, uint16_t freq_hz)            \\\\/\\\\/LSB corresponds to CHAN_1$/;\\\"	f	class:RCOutput_ZYNQ\\n 341677: set_freq	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_QFLIGHT\\n 341678: set_freq	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) $/;\\\"	f	class:PX4RCOutput\\n 341679: set_freq	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput\\n 341680: set_freq	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput\\n 341681: set_freq	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:VRBRAINRCOutput\\n 341682: set_freq_fd	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) $/;\\\"	f	class:PX4RCOutput\\n 341683: set_frequency	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::set_frequency(uint32_t frequency)$/;\\\"	f	class:device::SPI\\n 341684  set_full_paths_hpux	modules/waf/waflib/Tools/ccroot.py	/^def set_full_paths_hpux(self):$/;\\\"	f\\n 341685  set_gcj_classpath	modules/waf/playground/gcj/gcj.py	/^def set_gcj_classpath(self):$/;\\\"	f\\n\\n/home/rutk1t0r/src/ardupilot/.tags_sorted_by_file:\\n 24348  read	libraries/AP_HAL_Empty/RCOutput.cpp	/^uint16_t RCOutput::read(uint8_t ch) {$/;\\\"	f	class:RCOutput\\n 24349  read	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput\\n 24350: set_freq	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) {}$/;\\\"	f	class:RCOutput\\n 24351  write	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput\\n 24352  RCOutput	libraries/AP_HAL_Empty/RCOutput.h	/^class Empty::RCOutput : public AP_HAL::RCOutput {$/;\\\"	c	class:Empty\\n .....\\n 25145  is_enabled	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^bool PWM_Sysfs_Base::is_enabled()$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n 25146  set_duty_cycle	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^bool PWM_Sysfs_Base::set_duty_cycle(uint32_t nsec_duty_cycle)$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n 25147: set_freq	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_freq(uint32_t freq)$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n 25148  set_period	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_period(uint32_t nsec_period)$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n 25149  set_polarity	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_polarity(PWM_Sysfs_Base::Polarity polarity)$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n .....\\n 25450  read	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^uint16_t RCOutput_AioPRU::read(uint8_t ch)$/;\\\"	f	class:RCOutput_AioPRU\\n 25451  read	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput_AioPRU\\n 25452: set_freq	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_AioPRU\\n 25453  write	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_AioPRU\\n 25454  PWM_CHAN_COUNT	libraries/AP_HAL_Linux/RCOutput_AioPRU.h	17;\\\"	d\\n .....\\n 25520  rpm	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint16_t    rpm[BEBOP_BLDC_MOTORS_NUM];$/;\\\"	m	struct:bldc_ref_speed_data	file:\\n 25521  set_esc_scaling	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_esc_scaling(uint16_t min_pwm, uint16_t max_pwm)$/;\\\"	f	class:RCOutput_Bebop\\n 25522: set_freq	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_Bebop\\n 25523  status	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint8_t     status;$/;\\\"	m	struct:bldc_obs_data	file:\\n 25524  temp	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint8_t     temp;$/;\\\"	m	struct:bldc_obs_data	file:\\n .....\\n 25622  read	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput_PCA9685\\n 25623  reset_all_channels	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::reset_all_channels()$/;\\\"	f	class:RCOutput_PCA9685\\n 25624: set_freq	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_PCA9685\\n 25625  write	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_PCA9685\\n 25626  ~RCOutput_PCA9685	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^RCOutput_PCA9685::~RCOutput_PCA9685()$/;\\\"	f	class:RCOutput_PCA9685\\n .....\\n 25652  read	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^uint16_t RCOutput_PRU::read(uint8_t ch)$/;\\\"	f	class:RCOutput_PRU\\n 25653  read	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput_PRU\\n 25654: set_freq	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::set_freq(uint32_t chmask, uint16_t freq_hz)            \\\\/\\\\/LSB corresponds to CHAN_1$/;\\\"	f	class:RCOutput_PRU\\n 25655  write	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_PRU\\n 25656  MAX_PWMS	libraries/AP_HAL_Linux/RCOutput_PRU.h	5;\\\"	d\\n .....\\n 25685  read	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^uint16_t RCOutput_Raspilot::read(uint8_t ch)$/;\\\"	f	class:RCOutput_Raspilot\\n 25686  read	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput_Raspilot\\n 25687: set_freq	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_Raspilot\\n 25688  write	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_Raspilot\\n 25689  RCOutput_Raspilot	libraries/AP_HAL_Linux/RCOutput_Raspilot.h	/^class Linux::RCOutput_Raspilot : public AP_HAL::RCOutput {$/;\\\"	c	class:Linux\\n .....\\n 25701  read	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^uint16_t RCOutput_Sysfs::read(uint8_t ch)$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n 25702  read	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::read(uint16_t *period_us, uint8_t len)$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n 25703: set_freq	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n 25704  write	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n 25705  ~RCOutput_Sysfs	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^RCOutput_Sysfs::~RCOutput_Sysfs()$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n .....\\n 25717  read	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^uint16_t RCOutput_ZYNQ::read(uint8_t ch)$/;\\\"	f	class:RCOutput_ZYNQ\\n 25718  read	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput_ZYNQ\\n 25719: set_freq	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::set_freq(uint32_t chmask, uint16_t freq_hz)            \\\\/\\\\/LSB corresponds to CHAN_1$/;\\\"	f	class:RCOutput_ZYNQ\\n 25720  write	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_ZYNQ\\n 25721  MAX_ZYNQ_PWMS	libraries/AP_HAL_Linux/RCOutput_ZYNQ.h	5;\\\"	d\\n .....\\n 25745  read	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::read(uint16_t *period_us, uint8_t len)$/;\\\"	f	class:RCOutput_QFLIGHT\\n 25746  set_device_path	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_device_path(const char *_device)$/;\\\"	f	class:RCOutput_QFLIGHT\\n 25747: set_freq	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_QFLIGHT\\n 25748  timer_update	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::timer_update(void)$/;\\\"	f	class:RCOutput_QFLIGHT\\n 25749  write	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_QFLIGHT\\n .....\\n 26890  read_last_sent	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::read_last_sent(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:PX4RCOutput\\n 26891  set_failsafe_pwm	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_failsafe_pwm(uint32_t chmask, uint16_t period_us)$/;\\\"	f	class:PX4RCOutput\\n 26892: set_freq	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) $/;\\\"	f	class:PX4RCOutput\\n 26893: set_freq_fd	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) $/;\\\"	f	class:PX4RCOutput\\n 26894  set_output_mode	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_output_mode(enum output_mode mode)$/;\\\"	f	class:PX4RCOutput\\n 26895  set_safety_pwm	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_safety_pwm(uint32_t chmask, uint16_t period_us)$/;\\\"	f	class:PX4RCOutput\\n .....\\n 26931  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     read_last_sent(uint16_t* period_us, uint8_t len) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 26932  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_failsafe_pwm(uint32_t chmask, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 26933: override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 26934  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_safety_pwm(uint32_t chmask, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 26935  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n .....\\n 27171  read	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::read(uint16_t *period_us, uint8_t len)$/;\\\"	f	class:RCOutput\\n 27172  read_callback_trampoline	libraries/AP_HAL_QURT/RCOutput.cpp	/^    static void read_callback_trampoline(void *, char *, size_t ) {}$/;\\\"	f	file:\\n 27173: set_freq	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput\\n 27174  timer_update	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::timer_update(void)$/;\\\"	f	class:RCOutput\\n 27175  write	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput\\n .....\\n 27414  read	libraries/AP_HAL_SITL/RCOutput.cpp	/^uint16_t RCOutput::read(uint8_t ch)$/;\\\"	f	class:RCOutput\\n 27415  read	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput\\n 27416: set_freq	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput\\n 27417  write	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput\\n 27418  RCOutput	libraries/AP_HAL_SITL/RCOutput.h	/^    RCOutput(SITL_State *sitlState) {$/;\\\"	f	class:HALSITL::RCOutput\\n .....\\n 27427  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     init() override;$/;\\\"	m	class:HALSITL::RCOutput\\n 27428  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     read(uint16_t* period_us, uint8_t len) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 27429: override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 27430  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 27431  _apply_servo_filter	libraries/AP_HAL_SITL/SITL_State.cpp	/^void SITL_State::_apply_servo_filter(float deltat)$/;\\\"	f	class:SITL_State\\n .....\\n 27857  read	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:VRBRAINRCOutput\\n 27858  set_failsafe_pwm	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_failsafe_pwm(uint32_t chmask, uint16_t period_us)$/;\\\"	f	class:VRBRAINRCOutput\\n 27859: set_freq	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:VRBRAINRCOutput\\n 27860  set_safety_pwm	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_safety_pwm(uint32_t chmask, uint16_t period_us)$/;\\\"	f	class:VRBRAINRCOutput\\n 27861  write	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:VRBRAINRCOutput\\n .....\\n 30536  rc_enable_ch	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_enable_ch(uint8_t chan)$/;\\\"	f	class:AP_Motors\\n 30537  rc_map_mask	libraries/AP_Motors/AP_Motors_Class.cpp	/^uint32_t AP_Motors::rc_map_mask(uint32_t mask) const$/;\\\"	f	class:AP_Motors\\n 30538: rc_set_freq	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)$/;\\\"	f	class:AP_Motors\\n 30539  rc_write	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_write(uint8_t chan, uint16_t pwm)$/;\\\"	f	class:AP_Motors\\n 30540  set_radio_passthrough	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::set_radio_passthrough(float roll_input, float pitch_input, float throttle_input, float yaw_input)$/;\\\"	f	class:AP_Motors\\n .....\\n 128748  init	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::init()$/;\\\"	f	class:device::SPI\\n 128749  probe	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::probe()$/;\\\"	f	class:device::SPI\\n 128750: set_frequency	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::set_frequency(uint32_t frequency)$/;\\\"	f	class:device::SPI\\n 128751  transfer	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::transfer(uint8_t *send, uint8_t *recv, unsigned len)$/;\\\"	f	class:device::SPI\\n 128752  ~SPI	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::~SPI()$/;\\\"	f	class:device::SPI\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/RCOutput.h:\\n   34  \\n   35      /* Output freq (1/period) control */\\n   36:     virtual void     set_freq(uint32_t chmask, uint16_t freq_hz) = 0;\\n   37      virtual uint16_t get_freq(uint8_t ch) = 0;\\n   38  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput/RCOutput.cpp:\\n   34  /* Function to drive a RC output TYPE especified */\\n   35  void drive(uint16_t hz_speed) {\\n   36:     hal.rcout->set_freq(0xFF, hz_speed);\\n   37  \\n   38      while (1) {\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput2/RCOutput.cpp:\\n   34  /* Function to drive a RC output TYPE especified */\\n   35  void drive(uint16_t hz_speed) {\\n   36:     hal.rcout->set_freq(0xFF, hz_speed);\\n   37  \\n   38      while (1) {\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.cpp:\\n   98    set output frequency on outputs associated with fd\\n   99   */\\n  100: void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) \\n  101  {\\n  102      // we can't set this per channel\\n  ...\\n  164    set output frequency\\n  165   */\\n  166: void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) \\n  167  {\\n  168      if (freq_hz > 50 && _output_mode == MODE_PWM_ONESHOT) {\\n  ...\\n  189      uint32_t alt_mask = chmask >> _servo_count;\\n  190      if (primary_mask && _pwm_fd != -1) {\\n  191:         set_freq_fd(_pwm_fd, primary_mask, freq_hz);\\n  192      }\\n  193      if (alt_mask && _alt_fd != -1) {\\n  194:         set_freq_fd(_alt_fd, alt_mask, freq_hz);\\n  195      }\\n  196  }\\n  ...\\n  559          // produced except when triggered by push() when the main loop\\n  560          // is running\\n  561:         set_freq(_rate_mask, 1);\\n  562      }\\n  563      _output_mode = mode;\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.h:\\n   12  public:\\n   13      void     init() override;\\n   14:     void     set_freq(uint32_t chmask, uint16_t freq_hz) override;\\n   15      uint16_t get_freq(uint8_t ch) override;\\n   16      void     enable_ch(uint8_t ch) override;\\n   ..\\n   66      void _publish_actuators(void);\\n   67      void _arm_actuators(bool arm);\\n   68:     void set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz);\\n   69      bool _corking;\\n   70      enum output_mode _output_mode = MODE_PWM_NORMAL;\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.cpp:\\n   94          1U << AP_MOTORS_MOT_3 |\\n   95          1U << AP_MOTORS_MOT_4 ;\\n   96:     rc_set_freq(mask, _servo_speed);\\n   97      uint32_t mask2 =\\n   98          1U << AP_MOTORS_MOT_5 |\\n   99          1U << AP_MOTORS_MOT_6 ;\\n  100:     rc_set_freq(mask2, _speed_hz);\\n  101  }\\n  102  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.cpp:\\n  150          1U << AP_MOTORS_MOT_3 |\\n  151          1U << AP_MOTORS_MOT_4;\\n  152:     rc_set_freq(mask, _speed_hz);\\n  153  }\\n  154  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.cpp:\\n   50          }\\n   51      }\\n   52:     rc_set_freq( mask, _speed_hz );\\n   53  }\\n   54  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.cpp:\\n   97          1U << AP_MOTORS_MOT_3 |\\n   98          1U << AP_MOTORS_MOT_4 ;\\n   99:     rc_set_freq(mask, _servo_speed);\\n  100      uint32_t mask2 =\\n  101          1U << AP_MOTORS_MOT_5 |\\n  102          1U << AP_MOTORS_MOT_6 ;\\n  103:     rc_set_freq(mask2, _speed_hz);\\n  104  }\\n  105  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.cpp:\\n  110  	    1U << AP_MOTORS_MOT_2 |\\n  111  	    1U << AP_MOTORS_MOT_4;\\n  112:     rc_set_freq(mask, _speed_hz);\\n  113  }\\n  114  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.cpp:\\n   99    set frequency of a set of channels\\n  100   */\\n  101: void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)\\n  102  {\\n  103      mask = rc_map_mask(mask);\\n  ...\\n  105          _motor_fast_mask |= mask;\\n  106      }\\n  107:     hal.rcout->set_freq(mask, freq_hz);\\n  108      if ((_pwm_type == PWM_TYPE_ONESHOT ||\\n  109           _pwm_type == PWM_TYPE_ONESHOT125) &&\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.h:\\n  133      virtual void        output_armed_stabilizing()=0;\\n  134      virtual void        rc_write(uint8_t chan, uint16_t pwm);\\n  135:     virtual void        rc_set_freq(uint32_t mask, uint16_t freq_hz);\\n  136      virtual void        rc_enable_ch(uint8_t chan);\\n  137      virtual uint32_t    rc_map_mask(uint32_t mask) const;\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/RCOutputRGBLed.cpp:\\n   67          const uint32_t mask = 1 << _red_channel | 1 << _green_channel\\n   68                                | 1 << _blue_channel;\\n   69:         hal.rcout->set_freq(mask, freq_motor);\\n   70      }\\n   71  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/examples/RC_UART/RC_UART.cpp:\\n   38      hal.console->println(\\\"RC_UART starting\\\");\\n   39      hal.UART->begin(baudrate, 512, 512);\\n   40:     hal.rcout->set_freq(0xFF, RC_SPEED);\\n   41  }\\n   42  \\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf.map:\\n 5852   .text._ZN5Empty8RCOutput4initEv\\n 5853                  0x00000000        0x2 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\\n 5854:  .text._ZN5Empty8RCOutput8set_freqEjt\\n 5855                  0x00000000        0x2 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\\n 5856   .text._ZN5Empty8RCOutput8get_freqEh\\n ....\\n 22434                  0x08005f7c       0x3e /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\\n 22435   *fill*         0x08005fba        0x2 \\n 22436:  .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\\n 22437                  0x08005fbc       0xc4 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\\n 22438:  .text._ZN3PX411PX4RCOutput8set_freqEjt\\n 22439                  0x08006080       0xa8 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\\n 22440   .text._ZN3PX411PX4RCOutput14_arm_actuatorsEb\\n .....\\n 23064                  0x0800aa1c                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\\n 23065                  0x0800aa1c                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\\n 23066:  .text._ZN6device3SPI13set_frequencyEj\\n 23067                  0x0800aa64        0x4 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o\\n 23068:                 0x0800aa64                device::SPI::set_frequency(unsigned int)\\n 23069   .text._ZN6device3SPI9_transferEPhS1_j\\n 23070                  0x0800aa68       0x60 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/module.pre.o.map:\\n 62633                  0x00000000                Empty::RCOutput::init()\\n 62634  \\n 62635: .text._ZN5Empty8RCOutput8set_freqEjt\\n 62636                  0x00000000        0x2\\n 62637:  .text._ZN5Empty8RCOutput8set_freqEjt\\n 62638                  0x00000000        0x2 libraries/AP_HAL_Empty/RCOutput.cpp.o\\n 62639:                 0x00000000                Empty::RCOutput::set_freq(unsigned int, unsigned short)\\n 62640  \\n 62641  .text._ZN5Empty8RCOutput8get_freqEh\\n .....\\n 63291                  0x00000000                PX4::PX4RCOutput::enable_ch(unsigned char)\\n 63292  \\n 63293: .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\\n 63294                  0x00000000       0xc4\\n 63295:  .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\\n 63296                  0x00000000       0xc4 libraries/AP_HAL_PX4/RCOutput.cpp.o\\n 63297:                 0x00000000                PX4::PX4RCOutput::set_freq_fd(int, unsigned int, unsigned short)\\n 63298  \\n 63299: .text._ZN3PX411PX4RCOutput8set_freqEjt\\n 63300                  0x00000000       0xa8\\n 63301:  .text._ZN3PX411PX4RCOutput8set_freqEjt\\n 63302                  0x00000000       0xa8 libraries/AP_HAL_PX4/RCOutput.cpp.o\\n 63303:                 0x00000000                PX4::PX4RCOutput::set_freq(unsigned int, unsigned short)\\n 63304  \\n 63305  .text._ZN3PX411PX4RCOutput14_arm_actuatorsEb\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o.map:\\n 1544                  0x00000000                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\\n 1545  \\n 1546: .text._ZN6device3SPI13set_frequencyEj\\n 1547                  0x00000000        0x4\\n 1548:  .text._ZN6device3SPI13set_frequencyEj\\n 1549                  0x00000000        0x4 spi.cpp.o\\n 1550:                 0x00000000                device::SPI::set_frequency(unsigned int)\\n 1551  \\n 1552  .text._ZN6device3SPI9_transferEPhS1_j\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/spi.cpp:\\n  174  \\n  175  void\\n  176: SPI::set_frequency(uint32_t frequency)\\n  177  {\\n  178  	_frequency = frequency;\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/spi.h:\\n  124  	 * @param frequency	Frequency to set (Hz)\\n  125  	 */\\n  126: 	void		set_frequency(uint32_t frequency);\\n  127  \\n  128  	/**\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu6000/mpu6000.cpp:\\n 1087  \\n 1088  	// get baseline values without self-test enabled\\n 1089: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\\n 1090  \\n 1091  	memset(accel_baseline, 0, sizeof(accel_baseline));\\n ....\\n 1121  \\n 1122  	// get values with self-test enabled\\n 1123: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\\n 1124  \\n 1125  \\n ....\\n 1538  \\n 1539  	// general register transfer at low clock speed\\n 1540: 	set_frequency(speed);\\n 1541  \\n 1542  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1551  \\n 1552  	// general register transfer at low clock speed\\n 1553: 	set_frequency(MPU6000_LOW_BUS_SPEED);\\n 1554  \\n 1555  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1567  \\n 1568  	// general register transfer at low clock speed\\n 1569: 	set_frequency(MPU6000_LOW_BUS_SPEED);\\n 1570  \\n 1571  	transfer(cmd, nullptr, sizeof(cmd));\\n ....\\n 1769  \\n 1770  	// sensor transfer at high clock speed\\n 1771: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\\n 1772  \\n 1773  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu6500/mpu6500.cpp:\\n 1019  //\\n 1020  //	// get baseline values without self-test enabled\\n 1021: //      set_frequency(MPU6500_HIGH_BUS_SPEED);\\n 1022  \\n 1023  //	memset(accel_baseline, 0, sizeof(accel_baseline));\\n ....\\n 1053  \\n 1054  //	// get values with self-test enabled\\n 1055: //        set_frequency(MPU6500_HIGH_BUS_SPEED);\\n 1056  \\n 1057  \\n ....\\n 1446  \\n 1447  	// general register transfer at low clock speed\\n 1448: 	set_frequency(speed);\\n 1449  \\n 1450  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1459  \\n 1460  	// general register transfer at low clock speed\\n 1461: 	set_frequency(MPU6500_LOW_BUS_SPEED);\\n 1462  \\n 1463  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1475  \\n 1476  	// general register transfer at low clock speed\\n 1477: 	set_frequency(MPU6500_LOW_BUS_SPEED);\\n 1478  \\n 1479  	transfer(cmd, nullptr, sizeof(cmd));\\n ....\\n 1679  \\n 1680  	// sensor transfer at high clock speed\\n 1681: 	set_frequency(MPU6500_HIGH_BUS_SPEED);\\n 1682  \\n 1683  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu9250/mpu9250.cpp:\\n 1053  \\n 1054  	// general register transfer at low clock speed\\n 1055: 	set_frequency(speed);\\n 1056  \\n 1057  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1066  \\n 1067  	// general register transfer at low clock speed\\n 1068: 	set_frequency(MPU9250_LOW_BUS_SPEED);\\n 1069  \\n 1070  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1082  \\n 1083  	// general register transfer at low clock speed\\n 1084: 	set_frequency(MPU9250_LOW_BUS_SPEED);\\n 1085  \\n 1086  	transfer(cmd, nullptr, sizeof(cmd));\\n ....\\n 1310  \\n 1311  	// sensor transfer at high clock speed\\n 1312: 	set_frequency(MPU9250_HIGH_BUS_SPEED);\\n 1313  \\n 1314  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/platforms/posix/drivers/gyrosim/gyrosim.cpp:\\n 1047  \\n 1048  	// sensor transfer at high clock speed\\n 1049: 	//set_frequency(GYROSIM_HIGH_BUS_SPEED);\\n 1050  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\\n 1051  		return;\\n\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\\n130 matches across 25 files\\n\\n\\nSearching 16944 files for \\\"set_update_rate\\\"\\n\\n/home/rutk1t0r/src/ardupilot/.tags:\\n 169821  PWM_SERVO_SET_SELECT_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	165;\\\"	d\\n 169822  PWM_SERVO_SET_TERMINATION_FAILSAFE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	227;\\\"	d\\n 169823: PWM_SERVO_SET_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	156;\\\"	d\\n 169824  PWM_Sysfs	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^PWM_Sysfs::PWM_Sysfs(uint8_t chip, uint8_t channel) :$/;\\\"	f	class:Linux::PWM_Sysfs\\n 169825  PWM_Sysfs	libraries/AP_HAL_Linux/PWM_Sysfs.h	/^class Linux::PWM_Sysfs : public Linux::PWM_Sysfs_Base {$/;\\\"	c	class:Linux\\n .....\\n 336865  reset_takeoff_state	modules/PX4Firmware/src/modules/fw_pos_control_l1/fw_pos_control_l1_main.cpp	/^void FixedwingPositionControl::reset_takeoff_state()$/;\\\"	f	class:FixedwingPositionControl\\n 336866  reset_target_validity	modules/PX4Firmware/src/modules/navigator/follow_target.cpp	/^void FollowTarget::reset_target_validity()$/;\\\"	f	class:FollowTarget\\n 336867: reset_update_rates	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::reset_update_rates()$/;\\\"	f	class:GPS_Helper\\n 336868  resgen	modules/waf/waflib/extras/resx.py	/^class resgen(Task.Task):$/;\\\"	c\\n 336869  residue	modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/usb/storage.h	/^  uint8_t residue[4];             \\\\/* Amount not transferred *\\\\/$/;\\\"	m	struct:usbmsc_csw_s\\n .....\\n 342134  set_up_was_run	modules/gtest/test/gtest_environment_test.cc	/^  bool set_up_was_run() const { return set_up_was_run_; }$/;\\\"	f	class:__anon823::MyEnvironment\\n 342135  set_up_was_run_	modules/gtest/test/gtest_environment_test.cc	/^  bool set_up_was_run_;$/;\\\"	m	class:__anon823::MyEnvironment	file:\\n 342136: set_update_rate	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsCoax\\n 342137: set_update_rate	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsHeli_Single\\n 342138: set_update_rate	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsMatrix\\n 342139: set_update_rate	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsSingle\\n 342140: set_update_rate	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsTri\\n 342141: set_update_rate	libraries/AP_Motors/AP_Motors_Class.h	/^    virtual void        set_update_rate( uint16_t speed_hz ) { _speed_hz = speed_hz; };$/;\\\"	f	class:AP_Motors\\n 342142: set_update_rate	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^PX4IO::set_update_rate(int rate)$/;\\\"	f	class:PX4IO\\n 342143  set_usb_connected	libraries/AP_HAL_PX4/GPIO.h	/^    void set_usb_connected(void) { _usb_connected = true; }$/;\\\"	f	class:PX4::PX4GPIO\\n 342144  set_use_imt	Tools/Replay/LogReader.h	/^    void set_use_imt(bool _use_imt) { use_imt = _use_imt; }$/;\\\"	f	class:LogReader\\n\\n/home/rutk1t0r/src/ardupilot/.tags_sorted_by_file:\\n 30149  output_test	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_test(uint8_t motor_seq, int16_t pwm)$/;\\\"	f	class:AP_MotorsCoax\\n 30150  output_to_motors	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_to_motors()$/;\\\"	f	class:AP_MotorsCoax\\n 30151: set_update_rate	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsCoax\\n 30152  var_info	libraries/AP_Motors/AP_MotorsCoax.cpp	/^const AP_Param::GroupInfo AP_MotorsCoax::var_info[] = {$/;\\\"	m	class:AP_MotorsCoax	file:\\n 30153  AP_MOTORS_COAX_NEGATIVE	libraries/AP_Motors/AP_MotorsCoax.h	14;\\\"	d\\n .....\\n 30294  servo_test	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::servo_test()$/;\\\"	f	class:AP_MotorsHeli_Single\\n 30295  set_desired_rotor_speed	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::set_desired_rotor_speed(float desired_speed)$/;\\\"	f	class:AP_MotorsHeli_Single\\n 30296: set_update_rate	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsHeli_Single\\n 30297  update_motor_control	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::update_motor_control(RotorControlState state)$/;\\\"	f	class:AP_MotorsHeli_Single\\n 30298  var_info	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^const AP_Param::GroupInfo AP_MotorsHeli_Single::var_info[] = {$/;\\\"	m	class:AP_MotorsHeli_Single	file:\\n .....\\n 30365  remove_motor	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::remove_motor(int8_t motor_num)$/;\\\"	f	class:AP_MotorsMatrix\\n 30366  set_frame_orientation	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::set_frame_orientation( uint8_t new_orientation )$/;\\\"	f	class:AP_MotorsMatrix\\n 30367: set_update_rate	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsMatrix\\n 30368  thrust_compensation	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::thrust_compensation(void)$/;\\\"	f	class:AP_MotorsMatrix\\n 30369  AP_MOTORS_MATRIX_YAW_FACTOR_CCW	libraries/AP_Motors/AP_MotorsMatrix.h	13;\\\"	d\\n .....\\n 30480  output_test	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::output_test(uint8_t motor_seq, int16_t pwm)$/;\\\"	f	class:AP_MotorsSingle\\n 30481  output_to_motors	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::output_to_motors()$/;\\\"	f	class:AP_MotorsSingle\\n 30482: set_update_rate	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsSingle\\n 30483  var_info	libraries/AP_Motors/AP_MotorsSingle.cpp	/^const AP_Param::GroupInfo AP_MotorsSingle::var_info[] = {$/;\\\"	m	class:AP_MotorsSingle	file:\\n 30484  AP_MOTORS_SINGLE_SERVO_INPUT_RANGE	libraries/AP_Motors/AP_MotorsSingle.h	21;\\\"	d\\n .....\\n 30506  output_test	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::output_test(uint8_t motor_seq, int16_t pwm)$/;\\\"	f	class:AP_MotorsTri\\n 30507  output_to_motors	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::output_to_motors()$/;\\\"	f	class:AP_MotorsTri\\n 30508: set_update_rate	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsTri\\n 30509  thrust_compensation	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::thrust_compensation(void)$/;\\\"	f	class:AP_MotorsTri\\n 30510  var_info	libraries/AP_Motors/AP_MotorsTri.cpp	/^const AP_Param::GroupInfo AP_MotorsTri::var_info[] = {$/;\\\"	m	class:AP_MotorsTri	file:\\n .....\\n 30610  set_throttle	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_throttle(float throttle_in) { _throttle_in = throttle_in; };   \\\\/\\\\/ range 0 ~ 1$/;\\\"	f	class:AP_Motors\\n 30611  set_throttle_filter_cutoff	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_throttle_filter_cutoff(float filt_hz) { _throttle_filter.set_cutoff_frequency(filt_hz); }$/;\\\"	f	class:AP_Motors\\n 30612: set_update_rate	libraries/AP_Motors/AP_Motors_Class.h	/^    virtual void        set_update_rate( uint16_t speed_hz ) { _speed_hz = speed_hz; };$/;\\\"	f	class:AP_Motors\\n 30613  set_voltage	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_voltage(float volts){ _batt_voltage = volts; }$/;\\\"	f	class:AP_Motors\\n 30614  set_yaw	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_yaw(float yaw_in) { _yaw_in = yaw_in; };            \\\\/\\\\/ range -1 ~ +1$/;\\\"	f	class:AP_Motors\\n .....\\n 129337  PWM_SERVO_SET_SELECT_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	165;\\\"	d\\n 129338  PWM_SERVO_SET_TERMINATION_FAILSAFE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	227;\\\"	d\\n 129339: PWM_SERVO_SET_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	156;\\\"	d\\n 129340  _PWM_SERVO_BASE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	144;\\\"	d\\n 129341  channel	modules/PX4Firmware/src/drivers/drv_pwm_output.h	/^	uint8_t channel;$/;\\\"	m	struct:pwm_output_rc_config\\n .....\\n 129817  get_velocity_update_rate	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::get_velocity_update_rate()$/;\\\"	f	class:GPS_Helper\\n 129818  poll_or_read	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::poll_or_read(int fd, uint8_t *buf, size_t buf_length, uint64_t timeout)$/;\\\"	f	class:GPS_Helper\\n 129819: reset_update_rates	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::reset_update_rates()$/;\\\"	f	class:GPS_Helper\\n 129820  set_baudrate	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::set_baudrate(const int &fd, unsigned baud)$/;\\\"	f	class:GPS_Helper\\n 129821  store_update_rates	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::store_update_rates()$/;\\\"	f	class:GPS_Helper\\n .....\\n 133193  set_battery_current_scaling	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^PX4IO::set_battery_current_scaling(float amp_per_volt, float amp_bias)$/;\\\"	f	class:PX4IO\\n 133194  set_dsm_vcc_ctl	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^	inline void		set_dsm_vcc_ctl(bool enable)$/;\\\"	f	class:PX4IO\\n 133195: set_update_rate	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^PX4IO::set_update_rate(int rate)$/;\\\"	f	class:PX4IO\\n 133196  start	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^start(int argc, char *argv[])$/;\\\"	f	namespace:__anon801\\n 133197  system_status	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^	inline uint16_t		system_status() const {return _status;}$/;\\\"	f	class:PX4IO\\n\\n/home/rutk1t0r/src/ardupilot/ArduCopter/esc_calibration.cpp:\\n   83  \\n   84      // reduce update rate to motors to 50Hz\\n   85:     motors.set_update_rate(50);\\n   86  \\n   87      // send message to GCS\\n   ..\\n  113  \\n  114      // reduce update rate to motors to 50Hz\\n  115:     motors.set_update_rate(50);\\n  116  \\n  117      // send message to GCS\\n\\n/home/rutk1t0r/src/ardupilot/ArduCopter/radio.cpp:\\n   55  void Copter::init_rc_out()\\n   56  {\\n   57:     motors.set_update_rate(g.rc_speed);\\n   58      motors.set_frame_orientation(g.frame_orientation);\\n   59      motors.Init();                                              // motor initialisation\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.cpp:\\n  111              freq_hz = 1;\\n  112          }\\n  113:         //::printf(\\\"SET_UPDATE_RATE %u\\\\n\\\", (unsigned)freq_hz);\\n  114:         if (ioctl(fd, PWM_SERVO_SET_UPDATE_RATE, (unsigned long)freq_hz) != 0) {\\n  115              hal.console->printf(\\\"RCOutput: Unable to set alt rate to %uHz\\\\n\\\", (unsigned)freq_hz);\\n  116              return;\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_VRBRAIN/RCOutput.cpp:\\n   52      if (freq_hz > 50) {\\n   53          // we're being asked to set the alt rate\\n   54:         if (ioctl(_pwm_fd, PWM_SERVO_SET_UPDATE_RATE, (unsigned long)freq_hz) != 0) {\\n   55              hal.console->printf(\\\"RCOutput: Unable to set alt rate to %uHz\\\\n\\\", (unsigned)freq_hz);\\n   56              return;\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.cpp:\\n   65  {\\n   66      // set update rate for the 3 motors (but not the servo on channel 7)\\n   67:     set_update_rate(_speed_hz);\\n   68  \\n   69      // set the motor_enabled flag so that the main ESC can be calibrated like other frame types\\n   ..\\n   83  \\n   84  // set update rate to motors - a value in hertz\\n   85: void AP_MotorsCoax::set_update_rate( uint16_t speed_hz )\\n   86  {\\n   87      // record requested speed\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.h:\\n   37  \\n   38      // set update rate to motors - a value in hertz\\n   39:     void                set_update_rate( uint16_t speed_hz );\\n   40  \\n   41      // enable - starts allowing signals to be sent to motors\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli.cpp:\\n  168  {\\n  169      // set update rate\\n  170:     set_update_rate(_speed_hz);\\n  171  \\n  172      // load boot-up servo test cycles into counter to be consumed\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli.h:\\n   69      // set update rate to motors - a value in hertz\\n   70      // you must have setup_motors before calling this\\n   71:     virtual void set_update_rate( uint16_t speed_hz ) = 0;\\n   72  \\n   73      // enable - starts allowing signals to be sent to motors\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.cpp:\\n  139  \\n  140  // set update rate to motors - a value in hertz\\n  141: void AP_MotorsHeli_Single::set_update_rate( uint16_t speed_hz )\\n  142  {\\n  143      // record requested speed\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.h:\\n   59      // set update rate to motors - a value in hertz\\n   60      // you must have setup_motors before calling this\\n   61:     void set_update_rate(uint16_t speed_hz);\\n   62  \\n   63      // enable - starts allowing signals to be sent to motors and servos\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.cpp:\\n   32  \\n   33      // enable fast channels or instant pwm\\n   34:     set_update_rate(_speed_hz);\\n   35  }\\n   36  \\n   37  // set update rate to motors - a value in hertz\\n   38: void AP_MotorsMatrix::set_update_rate( uint16_t speed_hz )\\n   39  {\\n   40      uint8_t i;\\n   ..\\n   68  \\n   69      // enable fast channels or instant pwm\\n   70:     set_update_rate(_speed_hz);\\n   71  }\\n   72  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.h:\\n   27      // set update rate to motors - a value in hertz\\n   28      // you must have setup_motors before calling this\\n   29:     void                set_update_rate(uint16_t speed_hz);\\n   30  \\n   31      // set frame orientation (normally + or X)\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.cpp:\\n   65  {\\n   66      // set update rate for the 3 motors (but not the servo on channel 7)\\n   67:     set_update_rate(_speed_hz);\\n   68  \\n   69      // set the motor_enabled flag so that the main ESC can be calibrated like other frame types\\n   ..\\n   86  \\n   87  // set update rate to motors - a value in hertz\\n   88: void AP_MotorsSingle::set_update_rate( uint16_t speed_hz )\\n   89  {\\n   90      // record requested speed\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.h:\\n   37  \\n   38      // set update rate to motors - a value in hertz\\n   39:     void                set_update_rate( uint16_t speed_hz );\\n   40  \\n   41      // enable - starts allowing signals to be sent to motors\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.cpp:\\n   88      \\n   89      // set update rate for the 3 motors (but not the servo on channel 7)\\n   90:     set_update_rate(_speed_hz);\\n   91  \\n   92      // set the motor_enabled flag so that the ESCs can be calibrated like other frame types\\n   ..\\n  100  \\n  101  // set update rate to motors - a value in hertz\\n  102: void AP_MotorsTri::set_update_rate( uint16_t speed_hz )\\n  103  {\\n  104      // record requested speed\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.h:\\n   31  \\n   32      // set update rate to motors - a value in hertz\\n   33:     void                set_update_rate( uint16_t speed_hz );\\n   34  \\n   35      // enable - starts allowing signals to be sent to motors\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.h:\\n   44  \\n   45      // set update rate to motors - a value in hertz\\n   46:     virtual void        set_update_rate( uint16_t speed_hz ) { _speed_hz = speed_hz; };\\n   47  \\n   48      // set frame orientation (normally + or X)\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/examples/AP_Motors_test/AP_Motors_test.cpp:\\n   64  \\n   65      // motor initialisation\\n   66:     motors.set_update_rate(490);\\n   67      motors.set_frame_orientation(AP_MOTORS_X_FRAME);\\n   68      motors.Init();\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf.map:\\n 24324   .text._ZN5PX4IO12print_statusEb\\n 24325                  0x0801e9d8      0x8f8 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/module.pre.o\\n 24326:  .text._ZN5PX4IO15set_update_rateEi\\n 24327                  0x0801f2d0       0x40 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/module.pre.o\\n 24328   .text.px4io_main\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/module.pre.o.map:\\n  940                  0x00000000                PX4IO::print_status(bool)\\n  941  \\n  942: .text._ZN5PX4IO15set_update_rateEi\\n  943                  0x00000000       0x40\\n  944:  .text._ZN5PX4IO15set_update_rateEi\\n  945                  0x00000000       0x40 px4io.cpp.o\\n  946:                 0x00000000                PX4IO::set_update_rate(int)\\n  947  \\n  948  .text._ZN5PX4IO27set_battery_current_scalingEff\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/drv_pwm_output.h:\\n  154  \\n  155  /** set alternate servo update rate */\\n  156: #define PWM_SERVO_SET_UPDATE_RATE _PX4_IOC(_PWM_SERVO_BASE, 3)\\n  157  \\n  158  /** get alternate servo update rate */\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/gps/gps.cpp:\\n  361  \\n  362  					/* GPS is obviously detected successfully, reset statistics */\\n  363: 					_Helper->reset_update_rates();\\n  364  				}\\n  365  \\n  ...\\n  398  						last_rate_count = 0;\\n  399  						_Helper->store_update_rates();\\n  400: 						_Helper->reset_update_rates();\\n  401  					}\\n  402  \\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/gps/gps_helper.cpp:\\n   70  \\n   71  void\\n   72: GPS_Helper::reset_update_rates()\\n   73  {\\n   74  	_rate_count_vel = 0;\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/gps/gps_helper.h:\\n   59  	float				get_position_update_rate();\\n   60  	float				get_velocity_update_rate();\\n   61: 	void				reset_update_rates();\\n   62  	void				store_update_rates();\\n   63  \\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mkblctrl/mkblctrl.cpp:\\n  998  		break;\\n  999  \\n 1000: 	case PWM_SERVO_SET_UPDATE_RATE:\\n 1001  		ret = OK;\\n 1002  		break;\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/pwm_out_sim/pwm_out_sim.cpp:\\n  619  		break;\\n  620  \\n  621: 	case PWM_SERVO_SET_UPDATE_RATE:\\n  622  		// PWMSim always outputs at the alternate (usually faster) rate\\n  623  		g_pwm_sim->set_pwm_rate(arg);\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4fmu/fmu.cpp:\\n 1531  		break;\\n 1532  \\n 1533: 	case PWM_SERVO_SET_UPDATE_RATE:\\n 1534  		ret = set_pwm_rate(_pwm_alt_rate_channels, _pwm_default_rate, arg);\\n 1535  		break;\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/px4io.cpp:\\n  185  	* 			Min 10 Hz, max 400 Hz\\n  186  	*/\\n  187: 	int      		set_update_rate(int rate);\\n  188  \\n  189  	/**\\n  ...\\n 2423  		break;\\n 2424  \\n 2425: 	case PWM_SERVO_SET_UPDATE_RATE:\\n 2426  		/* set the requested alternate rate */\\n 2427  		ret = io_reg_set(PX4IO_PAGE_SETUP, PX4IO_P_SETUP_PWM_ALTRATE, arg);\\n ....\\n 2986  \\n 2987  int\\n 2988: PX4IO::set_update_rate(int rate)\\n 2989  {\\n 2990  	int interval_ms = 1000 / rate;\\n ....\\n 3628  \\n 3629  			if (limitrate > 0) {\\n 3630: 				g_dev->set_update_rate(limitrate);\\n 3631  \\n 3632  			} else {\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/platforms/posix/drivers/gpssim/gpssim.cpp:\\n  358  \\n  359  			// GPS is obviously detected successfully, reset statistics\\n  360: 			//_Helper->reset_update_rates();\\n  361  \\n  362  			while ((receive(TIMEOUT_5HZ)) > 0 && !_task_should_exit) {\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/systemcmds/pwm/pwm.c:\\n  305  		/* change alternate PWM rate */\\n  306  		if (alt_rate > 0) {\\n  307: 			ret = ioctl(fd, PWM_SERVO_SET_UPDATE_RATE, alt_rate);\\n  308  \\n  309  			if (ret != OK) {\\n  310: 				err(1, \\\"PWM_SERVO_SET_UPDATE_RATE (check rate for sanity)\\\");\\n  311  			}\\n  312  		}\\n\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\\n78 matches across 32 files\\n\\n\\nSearching 16944 files for \\\"g.rc_speed\\\"\\n\\n/home/rutk1t0r/src/ardupilot/ArduCopter/radio.cpp:\\n   55  void Copter::init_rc_out()\\n   56  {\\n   57:     motors.set_update_rate(g.rc_speed);\\n   58      motors.set_frame_orientation(g.frame_orientation);\\n   59      motors.Init();                                              // motor initialisation\\n\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\\n1 match in 1 file\\n\\n\\nSearching 16944 files for \\\"g.rc_speed\\\"\\n\\n/home/rutk1t0r/src/ardupilot/ArduCopter/radio.cpp:\\n   55  void Copter::init_rc_out()\\n   56  {\\n   57:     motors.set_update_rate(g.rc_speed);\\n   58      motors.set_frame_orientation(g.frame_orientation);\\n   59      motors.Init();                                              // motor initialisation\\n\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\\n1 match in 1 file\\n\",\n   28  			\"settings\":\n   29  			{\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.cpp:\n   98    set output frequency on outputs associated with fd\n   99   */\n  100: void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) \n  101  {\n  102      // we can't set this per channel\n  ...\n  189      uint32_t alt_mask = chmask >> _servo_count;\n  190      if (primary_mask && _pwm_fd != -1) {\n  191:         set_freq_fd(_pwm_fd, primary_mask, freq_hz);\n  192      }\n  193      if (alt_mask && _alt_fd != -1) {\n  194:         set_freq_fd(_alt_fd, alt_mask, freq_hz);\n  195      }\n  196  }\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.h:\n   66      void _publish_actuators(void);\n   67      void _arm_actuators(bool arm);\n   68:     void set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz);\n   69      bool _corking;\n   70      enum output_mode _output_mode = MODE_PWM_NORMAL;\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf.map:\n 25402                  0x0805cc4c       0x3e /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 25403   *fill*         0x0805cc8a        0x2 \n 25404:  .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\n 25405                  0x0805cc8c       0xc4 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 25406   .text._ZN3PX411PX4RCOutput8set_freqEjt\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/module.pre.o.map:\n 139058                  0x00000000                PX4::PX4RCOutput::enable_ch(unsigned char)\n 139059  \n 139060: .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\n 139061                  0x00000000       0xc4\n 139062:  .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\n 139063                  0x00000000       0xc4 libraries/AP_HAL_PX4/RCOutput.cpp.o\n 139064:                 0x00000000                PX4::PX4RCOutput::set_freq_fd(int, unsigned int, unsigned short)\n 139065  \n 139066  .text._ZN3PX411PX4RCOutput8set_freqEjt\n\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\n24 matches across 7 files\n\n\nSearching 16944 files for \"set_freq\"\n\n/home/rutk1t0r/src/ardupilot/.tags:\n 327859  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     read_last_sent(uint16_t* period_us, uint8_t len) override;$/;\"	m	class:PX4::PX4RCOutput\n 327860  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_failsafe_pwm(uint32_t chmask, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n 327861: override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\"	m	class:PX4::PX4RCOutput\n 327862  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_safety_pwm(uint32_t chmask, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n 327863  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n .....\n 327885  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     init() override;$/;\"	m	class:HALSITL::RCOutput\n 327886  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     read(uint16_t* period_us, uint8_t len) override;$/;\"	m	class:HALSITL::RCOutput\n 327887: override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\"	m	class:HALSITL::RCOutput\n 327888  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\"	m	class:HALSITL::RCOutput\n 327889  override	libraries/AP_HAL_VRBRAIN/HAL_VRBRAIN_Class.h	/^    void run(int argc, char* const argv[], Callbacks* callbacks) const override;$/;\"	m	class:HAL_VRBRAIN\n .....\n 334700  rc_return_th	modules/PX4Firmware/src/modules/sensors/sensors.cpp	/^		param_t rc_return_th;$/;\"	m	struct:Sensors::__anon472	file:\n 334701  rc_reverse	modules/PX4Firmware/src/drivers/drv_pwm_output.h	/^	bool     rc_reverse;$/;\"	m	struct:pwm_output_rc_config\n 334702: rc_set_freq	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)$/;\"	f	class:AP_Motors\n 334703  rc_signal_found_once	modules/PX4Firmware/src/modules/uORB/topics/vehicle_status.h	/^	bool rc_signal_found_once;$/;\"	m	struct:vehicle_status_s\n 334704  rc_signal_lost	modules/PX4Firmware/src/modules/uORB/topics/vehicle_status.h	/^	bool rc_signal_lost;$/;\"	m	struct:vehicle_status_s\n .....\n 341666  set_frame_orientation	libraries/AP_Motors/AP_Motors_Class.h	/^    virtual void        set_frame_orientation( uint8_t new_orientation ) { _flags.frame_orientation = new_orientation; };$/;\"	f	class:AP_Motors\n 341667  set_frametype	modules/PX4Firmware/src/drivers/mkblctrl/mkblctrl.cpp	/^MK::set_frametype(int frametype)$/;\"	f	class:MK\n 341668: set_freq	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) {}$/;\"	f	class:RCOutput\n 341669: set_freq	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_freq(uint32_t freq)$/;\"	f	class:Linux::PWM_Sysfs_Base\n 341670: set_freq	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_AioPRU\n 341671: set_freq	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_Bebop\n 341672: set_freq	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_PCA9685\n 341673: set_freq	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::set_freq(uint32_t chmask, uint16_t freq_hz)            \\/\\/LSB corresponds to CHAN_1$/;\"	f	class:RCOutput_PRU\n 341674: set_freq	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_Raspilot\n 341675: set_freq	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:Linux::RCOutput_Sysfs\n 341676: set_freq	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::set_freq(uint32_t chmask, uint16_t freq_hz)            \\/\\/LSB corresponds to CHAN_1$/;\"	f	class:RCOutput_ZYNQ\n 341677: set_freq	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_QFLIGHT\n 341678: set_freq	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 341679: set_freq	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput\n 341680: set_freq	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput\n 341681: set_freq	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:VRBRAINRCOutput\n 341682: set_freq_fd	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 341683: set_frequency	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::set_frequency(uint32_t frequency)$/;\"	f	class:device::SPI\n 341684  set_full_paths_hpux	modules/waf/waflib/Tools/ccroot.py	/^def set_full_paths_hpux(self):$/;\"	f\n 341685  set_gcj_classpath	modules/waf/playground/gcj/gcj.py	/^def set_gcj_classpath(self):$/;\"	f\n\n/home/rutk1t0r/src/ardupilot/.tags_sorted_by_file:\n 24348  read	libraries/AP_HAL_Empty/RCOutput.cpp	/^uint16_t RCOutput::read(uint8_t ch) {$/;\"	f	class:RCOutput\n 24349  read	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput\n 24350: set_freq	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) {}$/;\"	f	class:RCOutput\n 24351  write	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput\n 24352  RCOutput	libraries/AP_HAL_Empty/RCOutput.h	/^class Empty::RCOutput : public AP_HAL::RCOutput {$/;\"	c	class:Empty\n .....\n 25145  is_enabled	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^bool PWM_Sysfs_Base::is_enabled()$/;\"	f	class:Linux::PWM_Sysfs_Base\n 25146  set_duty_cycle	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^bool PWM_Sysfs_Base::set_duty_cycle(uint32_t nsec_duty_cycle)$/;\"	f	class:Linux::PWM_Sysfs_Base\n 25147: set_freq	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_freq(uint32_t freq)$/;\"	f	class:Linux::PWM_Sysfs_Base\n 25148  set_period	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_period(uint32_t nsec_period)$/;\"	f	class:Linux::PWM_Sysfs_Base\n 25149  set_polarity	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_polarity(PWM_Sysfs_Base::Polarity polarity)$/;\"	f	class:Linux::PWM_Sysfs_Base\n .....\n 25450  read	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^uint16_t RCOutput_AioPRU::read(uint8_t ch)$/;\"	f	class:RCOutput_AioPRU\n 25451  read	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput_AioPRU\n 25452: set_freq	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_AioPRU\n 25453  write	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_AioPRU\n 25454  PWM_CHAN_COUNT	libraries/AP_HAL_Linux/RCOutput_AioPRU.h	17;\"	d\n .....\n 25520  rpm	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint16_t    rpm[BEBOP_BLDC_MOTORS_NUM];$/;\"	m	struct:bldc_ref_speed_data	file:\n 25521  set_esc_scaling	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_esc_scaling(uint16_t min_pwm, uint16_t max_pwm)$/;\"	f	class:RCOutput_Bebop\n 25522: set_freq	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_Bebop\n 25523  status	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint8_t     status;$/;\"	m	struct:bldc_obs_data	file:\n 25524  temp	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint8_t     temp;$/;\"	m	struct:bldc_obs_data	file:\n .....\n 25622  read	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput_PCA9685\n 25623  reset_all_channels	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::reset_all_channels()$/;\"	f	class:RCOutput_PCA9685\n 25624: set_freq	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_PCA9685\n 25625  write	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_PCA9685\n 25626  ~RCOutput_PCA9685	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^RCOutput_PCA9685::~RCOutput_PCA9685()$/;\"	f	class:RCOutput_PCA9685\n .....\n 25652  read	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^uint16_t RCOutput_PRU::read(uint8_t ch)$/;\"	f	class:RCOutput_PRU\n 25653  read	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput_PRU\n 25654: set_freq	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::set_freq(uint32_t chmask, uint16_t freq_hz)            \\/\\/LSB corresponds to CHAN_1$/;\"	f	class:RCOutput_PRU\n 25655  write	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_PRU\n 25656  MAX_PWMS	libraries/AP_HAL_Linux/RCOutput_PRU.h	5;\"	d\n .....\n 25685  read	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^uint16_t RCOutput_Raspilot::read(uint8_t ch)$/;\"	f	class:RCOutput_Raspilot\n 25686  read	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput_Raspilot\n 25687: set_freq	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_Raspilot\n 25688  write	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_Raspilot\n 25689  RCOutput_Raspilot	libraries/AP_HAL_Linux/RCOutput_Raspilot.h	/^class Linux::RCOutput_Raspilot : public AP_HAL::RCOutput {$/;\"	c	class:Linux\n .....\n 25701  read	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^uint16_t RCOutput_Sysfs::read(uint8_t ch)$/;\"	f	class:Linux::RCOutput_Sysfs\n 25702  read	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::read(uint16_t *period_us, uint8_t len)$/;\"	f	class:Linux::RCOutput_Sysfs\n 25703: set_freq	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:Linux::RCOutput_Sysfs\n 25704  write	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:Linux::RCOutput_Sysfs\n 25705  ~RCOutput_Sysfs	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^RCOutput_Sysfs::~RCOutput_Sysfs()$/;\"	f	class:Linux::RCOutput_Sysfs\n .....\n 25717  read	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^uint16_t RCOutput_ZYNQ::read(uint8_t ch)$/;\"	f	class:RCOutput_ZYNQ\n 25718  read	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput_ZYNQ\n 25719: set_freq	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::set_freq(uint32_t chmask, uint16_t freq_hz)            \\/\\/LSB corresponds to CHAN_1$/;\"	f	class:RCOutput_ZYNQ\n 25720  write	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_ZYNQ\n 25721  MAX_ZYNQ_PWMS	libraries/AP_HAL_Linux/RCOutput_ZYNQ.h	5;\"	d\n .....\n 25745  read	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::read(uint16_t *period_us, uint8_t len)$/;\"	f	class:RCOutput_QFLIGHT\n 25746  set_device_path	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_device_path(const char *_device)$/;\"	f	class:RCOutput_QFLIGHT\n 25747: set_freq	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput_QFLIGHT\n 25748  timer_update	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::timer_update(void)$/;\"	f	class:RCOutput_QFLIGHT\n 25749  write	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput_QFLIGHT\n .....\n 26890  read_last_sent	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::read_last_sent(uint16_t* period_us, uint8_t len)$/;\"	f	class:PX4RCOutput\n 26891  set_failsafe_pwm	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_failsafe_pwm(uint32_t chmask, uint16_t period_us)$/;\"	f	class:PX4RCOutput\n 26892: set_freq	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 26893: set_freq_fd	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) $/;\"	f	class:PX4RCOutput\n 26894  set_output_mode	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_output_mode(enum output_mode mode)$/;\"	f	class:PX4RCOutput\n 26895  set_safety_pwm	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_safety_pwm(uint32_t chmask, uint16_t period_us)$/;\"	f	class:PX4RCOutput\n .....\n 26931  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     read_last_sent(uint16_t* period_us, uint8_t len) override;$/;\"	m	class:PX4::PX4RCOutput\n 26932  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_failsafe_pwm(uint32_t chmask, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n 26933: override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\"	m	class:PX4::PX4RCOutput\n 26934  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_safety_pwm(uint32_t chmask, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n 26935  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\"	m	class:PX4::PX4RCOutput\n .....\n 27171  read	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::read(uint16_t *period_us, uint8_t len)$/;\"	f	class:RCOutput\n 27172  read_callback_trampoline	libraries/AP_HAL_QURT/RCOutput.cpp	/^    static void read_callback_trampoline(void *, char *, size_t ) {}$/;\"	f	file:\n 27173: set_freq	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput\n 27174  timer_update	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::timer_update(void)$/;\"	f	class:RCOutput\n 27175  write	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput\n .....\n 27414  read	libraries/AP_HAL_SITL/RCOutput.cpp	/^uint16_t RCOutput::read(uint8_t ch)$/;\"	f	class:RCOutput\n 27415  read	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:RCOutput\n 27416: set_freq	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:RCOutput\n 27417  write	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:RCOutput\n 27418  RCOutput	libraries/AP_HAL_SITL/RCOutput.h	/^    RCOutput(SITL_State *sitlState) {$/;\"	f	class:HALSITL::RCOutput\n .....\n 27427  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     init() override;$/;\"	m	class:HALSITL::RCOutput\n 27428  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     read(uint16_t* period_us, uint8_t len) override;$/;\"	m	class:HALSITL::RCOutput\n 27429: override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\"	m	class:HALSITL::RCOutput\n 27430  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\"	m	class:HALSITL::RCOutput\n 27431  _apply_servo_filter	libraries/AP_HAL_SITL/SITL_State.cpp	/^void SITL_State::_apply_servo_filter(float deltat)$/;\"	f	class:SITL_State\n .....\n 27857  read	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::read(uint16_t* period_us, uint8_t len)$/;\"	f	class:VRBRAINRCOutput\n 27858  set_failsafe_pwm	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_failsafe_pwm(uint32_t chmask, uint16_t period_us)$/;\"	f	class:VRBRAINRCOutput\n 27859: set_freq	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\"	f	class:VRBRAINRCOutput\n 27860  set_safety_pwm	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_safety_pwm(uint32_t chmask, uint16_t period_us)$/;\"	f	class:VRBRAINRCOutput\n 27861  write	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::write(uint8_t ch, uint16_t period_us)$/;\"	f	class:VRBRAINRCOutput\n .....\n 30536  rc_enable_ch	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_enable_ch(uint8_t chan)$/;\"	f	class:AP_Motors\n 30537  rc_map_mask	libraries/AP_Motors/AP_Motors_Class.cpp	/^uint32_t AP_Motors::rc_map_mask(uint32_t mask) const$/;\"	f	class:AP_Motors\n 30538: rc_set_freq	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)$/;\"	f	class:AP_Motors\n 30539  rc_write	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_write(uint8_t chan, uint16_t pwm)$/;\"	f	class:AP_Motors\n 30540  set_radio_passthrough	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::set_radio_passthrough(float roll_input, float pitch_input, float throttle_input, float yaw_input)$/;\"	f	class:AP_Motors\n .....\n 128748  init	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::init()$/;\"	f	class:device::SPI\n 128749  probe	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::probe()$/;\"	f	class:device::SPI\n 128750: set_frequency	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::set_frequency(uint32_t frequency)$/;\"	f	class:device::SPI\n 128751  transfer	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::transfer(uint8_t *send, uint8_t *recv, unsigned len)$/;\"	f	class:device::SPI\n 128752  ~SPI	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::~SPI()$/;\"	f	class:device::SPI\n\n/home/rutk1t0r/src/ardupilot/ardupilot_amd64.sublime-workspace:\n   25  		},\n   26  		{\n   27: 			\"contents\": \"Searching 16684 files for \\\"set_freq\\\"\\n\\n/home/rutk1t0r/src/ardupilot/.tags:\\n 327859  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     read_last_sent(uint16_t* period_us, uint8_t len) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 327860  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_failsafe_pwm(uint32_t chmask, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 327861: override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 327862  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_safety_pwm(uint32_t chmask, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 327863  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n .....\\n 327885  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     init() override;$/;\\\"	m	class:HALSITL::RCOutput\\n 327886  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     read(uint16_t* period_us, uint8_t len) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 327887: override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 327888  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 327889  override	libraries/AP_HAL_VRBRAIN/HAL_VRBRAIN_Class.h	/^    void run(int argc, char* const argv[], Callbacks* callbacks) const override;$/;\\\"	m	class:HAL_VRBRAIN\\n .....\\n 334700  rc_return_th	modules/PX4Firmware/src/modules/sensors/sensors.cpp	/^		param_t rc_return_th;$/;\\\"	m	struct:Sensors::__anon472	file:\\n 334701  rc_reverse	modules/PX4Firmware/src/drivers/drv_pwm_output.h	/^	bool     rc_reverse;$/;\\\"	m	struct:pwm_output_rc_config\\n 334702: rc_set_freq	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)$/;\\\"	f	class:AP_Motors\\n 334703  rc_signal_found_once	modules/PX4Firmware/src/modules/uORB/topics/vehicle_status.h	/^	bool rc_signal_found_once;$/;\\\"	m	struct:vehicle_status_s\\n 334704  rc_signal_lost	modules/PX4Firmware/src/modules/uORB/topics/vehicle_status.h	/^	bool rc_signal_lost;$/;\\\"	m	struct:vehicle_status_s\\n .....\\n 341666  set_frame_orientation	libraries/AP_Motors/AP_Motors_Class.h	/^    virtual void        set_frame_orientation( uint8_t new_orientation ) { _flags.frame_orientation = new_orientation; };$/;\\\"	f	class:AP_Motors\\n 341667  set_frametype	modules/PX4Firmware/src/drivers/mkblctrl/mkblctrl.cpp	/^MK::set_frametype(int frametype)$/;\\\"	f	class:MK\\n 341668: set_freq	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) {}$/;\\\"	f	class:RCOutput\\n 341669: set_freq	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_freq(uint32_t freq)$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n 341670: set_freq	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_AioPRU\\n 341671: set_freq	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_Bebop\\n 341672: set_freq	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_PCA9685\\n 341673: set_freq	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::set_freq(uint32_t chmask, uint16_t freq_hz)            \\\\/\\\\/LSB corresponds to CHAN_1$/;\\\"	f	class:RCOutput_PRU\\n 341674: set_freq	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_Raspilot\\n 341675: set_freq	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n 341676: set_freq	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::set_freq(uint32_t chmask, uint16_t freq_hz)            \\\\/\\\\/LSB corresponds to CHAN_1$/;\\\"	f	class:RCOutput_ZYNQ\\n 341677: set_freq	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_QFLIGHT\\n 341678: set_freq	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) $/;\\\"	f	class:PX4RCOutput\\n 341679: set_freq	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput\\n 341680: set_freq	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput\\n 341681: set_freq	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:VRBRAINRCOutput\\n 341682: set_freq_fd	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) $/;\\\"	f	class:PX4RCOutput\\n 341683: set_frequency	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::set_frequency(uint32_t frequency)$/;\\\"	f	class:device::SPI\\n 341684  set_full_paths_hpux	modules/waf/waflib/Tools/ccroot.py	/^def set_full_paths_hpux(self):$/;\\\"	f\\n 341685  set_gcj_classpath	modules/waf/playground/gcj/gcj.py	/^def set_gcj_classpath(self):$/;\\\"	f\\n\\n/home/rutk1t0r/src/ardupilot/.tags_sorted_by_file:\\n 24348  read	libraries/AP_HAL_Empty/RCOutput.cpp	/^uint16_t RCOutput::read(uint8_t ch) {$/;\\\"	f	class:RCOutput\\n 24349  read	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput\\n 24350: set_freq	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) {}$/;\\\"	f	class:RCOutput\\n 24351  write	libraries/AP_HAL_Empty/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput\\n 24352  RCOutput	libraries/AP_HAL_Empty/RCOutput.h	/^class Empty::RCOutput : public AP_HAL::RCOutput {$/;\\\"	c	class:Empty\\n .....\\n 25145  is_enabled	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^bool PWM_Sysfs_Base::is_enabled()$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n 25146  set_duty_cycle	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^bool PWM_Sysfs_Base::set_duty_cycle(uint32_t nsec_duty_cycle)$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n 25147: set_freq	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_freq(uint32_t freq)$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n 25148  set_period	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_period(uint32_t nsec_period)$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n 25149  set_polarity	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^void PWM_Sysfs_Base::set_polarity(PWM_Sysfs_Base::Polarity polarity)$/;\\\"	f	class:Linux::PWM_Sysfs_Base\\n .....\\n 25450  read	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^uint16_t RCOutput_AioPRU::read(uint8_t ch)$/;\\\"	f	class:RCOutput_AioPRU\\n 25451  read	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput_AioPRU\\n 25452: set_freq	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_AioPRU\\n 25453  write	libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp	/^void RCOutput_AioPRU::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_AioPRU\\n 25454  PWM_CHAN_COUNT	libraries/AP_HAL_Linux/RCOutput_AioPRU.h	17;\\\"	d\\n .....\\n 25520  rpm	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint16_t    rpm[BEBOP_BLDC_MOTORS_NUM];$/;\\\"	m	struct:bldc_ref_speed_data	file:\\n 25521  set_esc_scaling	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_esc_scaling(uint16_t min_pwm, uint16_t max_pwm)$/;\\\"	f	class:RCOutput_Bebop\\n 25522: set_freq	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^void RCOutput_Bebop::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_Bebop\\n 25523  status	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint8_t     status;$/;\\\"	m	struct:bldc_obs_data	file:\\n 25524  temp	libraries/AP_HAL_Linux/RCOutput_Bebop.cpp	/^    uint8_t     temp;$/;\\\"	m	struct:bldc_obs_data	file:\\n .....\\n 25622  read	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput_PCA9685\\n 25623  reset_all_channels	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::reset_all_channels()$/;\\\"	f	class:RCOutput_PCA9685\\n 25624: set_freq	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_PCA9685\\n 25625  write	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^void RCOutput_PCA9685::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_PCA9685\\n 25626  ~RCOutput_PCA9685	libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp	/^RCOutput_PCA9685::~RCOutput_PCA9685()$/;\\\"	f	class:RCOutput_PCA9685\\n .....\\n 25652  read	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^uint16_t RCOutput_PRU::read(uint8_t ch)$/;\\\"	f	class:RCOutput_PRU\\n 25653  read	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput_PRU\\n 25654: set_freq	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::set_freq(uint32_t chmask, uint16_t freq_hz)            \\\\/\\\\/LSB corresponds to CHAN_1$/;\\\"	f	class:RCOutput_PRU\\n 25655  write	libraries/AP_HAL_Linux/RCOutput_PRU.cpp	/^void RCOutput_PRU::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_PRU\\n 25656  MAX_PWMS	libraries/AP_HAL_Linux/RCOutput_PRU.h	5;\\\"	d\\n .....\\n 25685  read	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^uint16_t RCOutput_Raspilot::read(uint8_t ch)$/;\\\"	f	class:RCOutput_Raspilot\\n 25686  read	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput_Raspilot\\n 25687: set_freq	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_Raspilot\\n 25688  write	libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp	/^void RCOutput_Raspilot::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_Raspilot\\n 25689  RCOutput_Raspilot	libraries/AP_HAL_Linux/RCOutput_Raspilot.h	/^class Linux::RCOutput_Raspilot : public AP_HAL::RCOutput {$/;\\\"	c	class:Linux\\n .....\\n 25701  read	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^uint16_t RCOutput_Sysfs::read(uint8_t ch)$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n 25702  read	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::read(uint16_t *period_us, uint8_t len)$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n 25703: set_freq	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n 25704  write	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^void RCOutput_Sysfs::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n 25705  ~RCOutput_Sysfs	libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp	/^RCOutput_Sysfs::~RCOutput_Sysfs()$/;\\\"	f	class:Linux::RCOutput_Sysfs\\n .....\\n 25717  read	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^uint16_t RCOutput_ZYNQ::read(uint8_t ch)$/;\\\"	f	class:RCOutput_ZYNQ\\n 25718  read	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput_ZYNQ\\n 25719: set_freq	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::set_freq(uint32_t chmask, uint16_t freq_hz)            \\\\/\\\\/LSB corresponds to CHAN_1$/;\\\"	f	class:RCOutput_ZYNQ\\n 25720  write	libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp	/^void RCOutput_ZYNQ::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_ZYNQ\\n 25721  MAX_ZYNQ_PWMS	libraries/AP_HAL_Linux/RCOutput_ZYNQ.h	5;\\\"	d\\n .....\\n 25745  read	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::read(uint16_t *period_us, uint8_t len)$/;\\\"	f	class:RCOutput_QFLIGHT\\n 25746  set_device_path	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_device_path(const char *_device)$/;\\\"	f	class:RCOutput_QFLIGHT\\n 25747: set_freq	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput_QFLIGHT\\n 25748  timer_update	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::timer_update(void)$/;\\\"	f	class:RCOutput_QFLIGHT\\n 25749  write	libraries/AP_HAL_Linux/RCOutput_qflight.cpp	/^void RCOutput_QFLIGHT::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput_QFLIGHT\\n .....\\n 26890  read_last_sent	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::read_last_sent(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:PX4RCOutput\\n 26891  set_failsafe_pwm	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_failsafe_pwm(uint32_t chmask, uint16_t period_us)$/;\\\"	f	class:PX4RCOutput\\n 26892: set_freq	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) $/;\\\"	f	class:PX4RCOutput\\n 26893: set_freq_fd	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) $/;\\\"	f	class:PX4RCOutput\\n 26894  set_output_mode	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_output_mode(enum output_mode mode)$/;\\\"	f	class:PX4RCOutput\\n 26895  set_safety_pwm	libraries/AP_HAL_PX4/RCOutput.cpp	/^void PX4RCOutput::set_safety_pwm(uint32_t chmask, uint16_t period_us)$/;\\\"	f	class:PX4RCOutput\\n .....\\n 26931  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     read_last_sent(uint16_t* period_us, uint8_t len) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 26932  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_failsafe_pwm(uint32_t chmask, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 26933: override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 26934  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     set_safety_pwm(uint32_t chmask, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n 26935  override	libraries/AP_HAL_PX4/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\\\"	m	class:PX4::PX4RCOutput\\n .....\\n 27171  read	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::read(uint16_t *period_us, uint8_t len)$/;\\\"	f	class:RCOutput\\n 27172  read_callback_trampoline	libraries/AP_HAL_QURT/RCOutput.cpp	/^    static void read_callback_trampoline(void *, char *, size_t ) {}$/;\\\"	f	file:\\n 27173: set_freq	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput\\n 27174  timer_update	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::timer_update(void)$/;\\\"	f	class:RCOutput\\n 27175  write	libraries/AP_HAL_QURT/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput\\n .....\\n 27414  read	libraries/AP_HAL_SITL/RCOutput.cpp	/^uint16_t RCOutput::read(uint8_t ch)$/;\\\"	f	class:RCOutput\\n 27415  read	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:RCOutput\\n 27416: set_freq	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:RCOutput\\n 27417  write	libraries/AP_HAL_SITL/RCOutput.cpp	/^void RCOutput::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:RCOutput\\n 27418  RCOutput	libraries/AP_HAL_SITL/RCOutput.h	/^    RCOutput(SITL_State *sitlState) {$/;\\\"	f	class:HALSITL::RCOutput\\n .....\\n 27427  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     init() override;$/;\\\"	m	class:HALSITL::RCOutput\\n 27428  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     read(uint16_t* period_us, uint8_t len) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 27429: override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     set_freq(uint32_t chmask, uint16_t freq_hz) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 27430  override	libraries/AP_HAL_SITL/RCOutput.h	/^    void     write(uint8_t ch, uint16_t period_us) override;$/;\\\"	m	class:HALSITL::RCOutput\\n 27431  _apply_servo_filter	libraries/AP_HAL_SITL/SITL_State.cpp	/^void SITL_State::_apply_servo_filter(float deltat)$/;\\\"	f	class:SITL_State\\n .....\\n 27857  read	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::read(uint16_t* period_us, uint8_t len)$/;\\\"	f	class:VRBRAINRCOutput\\n 27858  set_failsafe_pwm	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_failsafe_pwm(uint32_t chmask, uint16_t period_us)$/;\\\"	f	class:VRBRAINRCOutput\\n 27859: set_freq	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)$/;\\\"	f	class:VRBRAINRCOutput\\n 27860  set_safety_pwm	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::set_safety_pwm(uint32_t chmask, uint16_t period_us)$/;\\\"	f	class:VRBRAINRCOutput\\n 27861  write	libraries/AP_HAL_VRBRAIN/RCOutput.cpp	/^void VRBRAINRCOutput::write(uint8_t ch, uint16_t period_us)$/;\\\"	f	class:VRBRAINRCOutput\\n .....\\n 30536  rc_enable_ch	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_enable_ch(uint8_t chan)$/;\\\"	f	class:AP_Motors\\n 30537  rc_map_mask	libraries/AP_Motors/AP_Motors_Class.cpp	/^uint32_t AP_Motors::rc_map_mask(uint32_t mask) const$/;\\\"	f	class:AP_Motors\\n 30538: rc_set_freq	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)$/;\\\"	f	class:AP_Motors\\n 30539  rc_write	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::rc_write(uint8_t chan, uint16_t pwm)$/;\\\"	f	class:AP_Motors\\n 30540  set_radio_passthrough	libraries/AP_Motors/AP_Motors_Class.cpp	/^void AP_Motors::set_radio_passthrough(float roll_input, float pitch_input, float throttle_input, float yaw_input)$/;\\\"	f	class:AP_Motors\\n .....\\n 128748  init	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::init()$/;\\\"	f	class:device::SPI\\n 128749  probe	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::probe()$/;\\\"	f	class:device::SPI\\n 128750: set_frequency	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::set_frequency(uint32_t frequency)$/;\\\"	f	class:device::SPI\\n 128751  transfer	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::transfer(uint8_t *send, uint8_t *recv, unsigned len)$/;\\\"	f	class:device::SPI\\n 128752  ~SPI	modules/PX4Firmware/src/drivers/device/spi.cpp	/^SPI::~SPI()$/;\\\"	f	class:device::SPI\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/RCOutput.h:\\n   34  \\n   35      /* Output freq (1/period) control */\\n   36:     virtual void     set_freq(uint32_t chmask, uint16_t freq_hz) = 0;\\n   37      virtual uint16_t get_freq(uint8_t ch) = 0;\\n   38  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput/RCOutput.cpp:\\n   34  /* Function to drive a RC output TYPE especified */\\n   35  void drive(uint16_t hz_speed) {\\n   36:     hal.rcout->set_freq(0xFF, hz_speed);\\n   37  \\n   38      while (1) {\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput2/RCOutput.cpp:\\n   34  /* Function to drive a RC output TYPE especified */\\n   35  void drive(uint16_t hz_speed) {\\n   36:     hal.rcout->set_freq(0xFF, hz_speed);\\n   37  \\n   38      while (1) {\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.cpp:\\n   98    set output frequency on outputs associated with fd\\n   99   */\\n  100: void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) \\n  101  {\\n  102      // we can't set this per channel\\n  ...\\n  164    set output frequency\\n  165   */\\n  166: void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) \\n  167  {\\n  168      if (freq_hz > 50 && _output_mode == MODE_PWM_ONESHOT) {\\n  ...\\n  189      uint32_t alt_mask = chmask >> _servo_count;\\n  190      if (primary_mask && _pwm_fd != -1) {\\n  191:         set_freq_fd(_pwm_fd, primary_mask, freq_hz);\\n  192      }\\n  193      if (alt_mask && _alt_fd != -1) {\\n  194:         set_freq_fd(_alt_fd, alt_mask, freq_hz);\\n  195      }\\n  196  }\\n  ...\\n  559          // produced except when triggered by push() when the main loop\\n  560          // is running\\n  561:         set_freq(_rate_mask, 1);\\n  562      }\\n  563      _output_mode = mode;\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.h:\\n   12  public:\\n   13      void     init() override;\\n   14:     void     set_freq(uint32_t chmask, uint16_t freq_hz) override;\\n   15      uint16_t get_freq(uint8_t ch) override;\\n   16      void     enable_ch(uint8_t ch) override;\\n   ..\\n   66      void _publish_actuators(void);\\n   67      void _arm_actuators(bool arm);\\n   68:     void set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz);\\n   69      bool _corking;\\n   70      enum output_mode _output_mode = MODE_PWM_NORMAL;\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.cpp:\\n   94          1U << AP_MOTORS_MOT_3 |\\n   95          1U << AP_MOTORS_MOT_4 ;\\n   96:     rc_set_freq(mask, _servo_speed);\\n   97      uint32_t mask2 =\\n   98          1U << AP_MOTORS_MOT_5 |\\n   99          1U << AP_MOTORS_MOT_6 ;\\n  100:     rc_set_freq(mask2, _speed_hz);\\n  101  }\\n  102  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.cpp:\\n  150          1U << AP_MOTORS_MOT_3 |\\n  151          1U << AP_MOTORS_MOT_4;\\n  152:     rc_set_freq(mask, _speed_hz);\\n  153  }\\n  154  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.cpp:\\n   50          }\\n   51      }\\n   52:     rc_set_freq( mask, _speed_hz );\\n   53  }\\n   54  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.cpp:\\n   97          1U << AP_MOTORS_MOT_3 |\\n   98          1U << AP_MOTORS_MOT_4 ;\\n   99:     rc_set_freq(mask, _servo_speed);\\n  100      uint32_t mask2 =\\n  101          1U << AP_MOTORS_MOT_5 |\\n  102          1U << AP_MOTORS_MOT_6 ;\\n  103:     rc_set_freq(mask2, _speed_hz);\\n  104  }\\n  105  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.cpp:\\n  110  	    1U << AP_MOTORS_MOT_2 |\\n  111  	    1U << AP_MOTORS_MOT_4;\\n  112:     rc_set_freq(mask, _speed_hz);\\n  113  }\\n  114  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.cpp:\\n   99    set frequency of a set of channels\\n  100   */\\n  101: void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)\\n  102  {\\n  103      mask = rc_map_mask(mask);\\n  ...\\n  105          _motor_fast_mask |= mask;\\n  106      }\\n  107:     hal.rcout->set_freq(mask, freq_hz);\\n  108      if ((_pwm_type == PWM_TYPE_ONESHOT ||\\n  109           _pwm_type == PWM_TYPE_ONESHOT125) &&\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.h:\\n  133      virtual void        output_armed_stabilizing()=0;\\n  134      virtual void        rc_write(uint8_t chan, uint16_t pwm);\\n  135:     virtual void        rc_set_freq(uint32_t mask, uint16_t freq_hz);\\n  136      virtual void        rc_enable_ch(uint8_t chan);\\n  137      virtual uint32_t    rc_map_mask(uint32_t mask) const;\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/RCOutputRGBLed.cpp:\\n   67          const uint32_t mask = 1 << _red_channel | 1 << _green_channel\\n   68                                | 1 << _blue_channel;\\n   69:         hal.rcout->set_freq(mask, freq_motor);\\n   70      }\\n   71  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/examples/RC_UART/RC_UART.cpp:\\n   38      hal.console->println(\\\"RC_UART starting\\\");\\n   39      hal.UART->begin(baudrate, 512, 512);\\n   40:     hal.rcout->set_freq(0xFF, RC_SPEED);\\n   41  }\\n   42  \\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf.map:\\n 5852   .text._ZN5Empty8RCOutput4initEv\\n 5853                  0x00000000        0x2 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\\n 5854:  .text._ZN5Empty8RCOutput8set_freqEjt\\n 5855                  0x00000000        0x2 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\\n 5856   .text._ZN5Empty8RCOutput8get_freqEh\\n ....\\n 22434                  0x08005f7c       0x3e /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\\n 22435   *fill*         0x08005fba        0x2 \\n 22436:  .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\\n 22437                  0x08005fbc       0xc4 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\\n 22438:  .text._ZN3PX411PX4RCOutput8set_freqEjt\\n 22439                  0x08006080       0xa8 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\\n 22440   .text._ZN3PX411PX4RCOutput14_arm_actuatorsEb\\n .....\\n 23064                  0x0800aa1c                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\\n 23065                  0x0800aa1c                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\\n 23066:  .text._ZN6device3SPI13set_frequencyEj\\n 23067                  0x0800aa64        0x4 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o\\n 23068:                 0x0800aa64                device::SPI::set_frequency(unsigned int)\\n 23069   .text._ZN6device3SPI9_transferEPhS1_j\\n 23070                  0x0800aa68       0x60 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/module.pre.o.map:\\n 62633                  0x00000000                Empty::RCOutput::init()\\n 62634  \\n 62635: .text._ZN5Empty8RCOutput8set_freqEjt\\n 62636                  0x00000000        0x2\\n 62637:  .text._ZN5Empty8RCOutput8set_freqEjt\\n 62638                  0x00000000        0x2 libraries/AP_HAL_Empty/RCOutput.cpp.o\\n 62639:                 0x00000000                Empty::RCOutput::set_freq(unsigned int, unsigned short)\\n 62640  \\n 62641  .text._ZN5Empty8RCOutput8get_freqEh\\n .....\\n 63291                  0x00000000                PX4::PX4RCOutput::enable_ch(unsigned char)\\n 63292  \\n 63293: .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\\n 63294                  0x00000000       0xc4\\n 63295:  .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\\n 63296                  0x00000000       0xc4 libraries/AP_HAL_PX4/RCOutput.cpp.o\\n 63297:                 0x00000000                PX4::PX4RCOutput::set_freq_fd(int, unsigned int, unsigned short)\\n 63298  \\n 63299: .text._ZN3PX411PX4RCOutput8set_freqEjt\\n 63300                  0x00000000       0xa8\\n 63301:  .text._ZN3PX411PX4RCOutput8set_freqEjt\\n 63302                  0x00000000       0xa8 libraries/AP_HAL_PX4/RCOutput.cpp.o\\n 63303:                 0x00000000                PX4::PX4RCOutput::set_freq(unsigned int, unsigned short)\\n 63304  \\n 63305  .text._ZN3PX411PX4RCOutput14_arm_actuatorsEb\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o.map:\\n 1544                  0x00000000                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\\n 1545  \\n 1546: .text._ZN6device3SPI13set_frequencyEj\\n 1547                  0x00000000        0x4\\n 1548:  .text._ZN6device3SPI13set_frequencyEj\\n 1549                  0x00000000        0x4 spi.cpp.o\\n 1550:                 0x00000000                device::SPI::set_frequency(unsigned int)\\n 1551  \\n 1552  .text._ZN6device3SPI9_transferEPhS1_j\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/spi.cpp:\\n  174  \\n  175  void\\n  176: SPI::set_frequency(uint32_t frequency)\\n  177  {\\n  178  	_frequency = frequency;\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/spi.h:\\n  124  	 * @param frequency	Frequency to set (Hz)\\n  125  	 */\\n  126: 	void		set_frequency(uint32_t frequency);\\n  127  \\n  128  	/**\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu6000/mpu6000.cpp:\\n 1087  \\n 1088  	// get baseline values without self-test enabled\\n 1089: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\\n 1090  \\n 1091  	memset(accel_baseline, 0, sizeof(accel_baseline));\\n ....\\n 1121  \\n 1122  	// get values with self-test enabled\\n 1123: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\\n 1124  \\n 1125  \\n ....\\n 1538  \\n 1539  	// general register transfer at low clock speed\\n 1540: 	set_frequency(speed);\\n 1541  \\n 1542  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1551  \\n 1552  	// general register transfer at low clock speed\\n 1553: 	set_frequency(MPU6000_LOW_BUS_SPEED);\\n 1554  \\n 1555  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1567  \\n 1568  	// general register transfer at low clock speed\\n 1569: 	set_frequency(MPU6000_LOW_BUS_SPEED);\\n 1570  \\n 1571  	transfer(cmd, nullptr, sizeof(cmd));\\n ....\\n 1769  \\n 1770  	// sensor transfer at high clock speed\\n 1771: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\\n 1772  \\n 1773  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu6500/mpu6500.cpp:\\n 1019  //\\n 1020  //	// get baseline values without self-test enabled\\n 1021: //      set_frequency(MPU6500_HIGH_BUS_SPEED);\\n 1022  \\n 1023  //	memset(accel_baseline, 0, sizeof(accel_baseline));\\n ....\\n 1053  \\n 1054  //	// get values with self-test enabled\\n 1055: //        set_frequency(MPU6500_HIGH_BUS_SPEED);\\n 1056  \\n 1057  \\n ....\\n 1446  \\n 1447  	// general register transfer at low clock speed\\n 1448: 	set_frequency(speed);\\n 1449  \\n 1450  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1459  \\n 1460  	// general register transfer at low clock speed\\n 1461: 	set_frequency(MPU6500_LOW_BUS_SPEED);\\n 1462  \\n 1463  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1475  \\n 1476  	// general register transfer at low clock speed\\n 1477: 	set_frequency(MPU6500_LOW_BUS_SPEED);\\n 1478  \\n 1479  	transfer(cmd, nullptr, sizeof(cmd));\\n ....\\n 1679  \\n 1680  	// sensor transfer at high clock speed\\n 1681: 	set_frequency(MPU6500_HIGH_BUS_SPEED);\\n 1682  \\n 1683  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu9250/mpu9250.cpp:\\n 1053  \\n 1054  	// general register transfer at low clock speed\\n 1055: 	set_frequency(speed);\\n 1056  \\n 1057  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1066  \\n 1067  	// general register transfer at low clock speed\\n 1068: 	set_frequency(MPU9250_LOW_BUS_SPEED);\\n 1069  \\n 1070  	transfer(cmd, cmd, sizeof(cmd));\\n ....\\n 1082  \\n 1083  	// general register transfer at low clock speed\\n 1084: 	set_frequency(MPU9250_LOW_BUS_SPEED);\\n 1085  \\n 1086  	transfer(cmd, nullptr, sizeof(cmd));\\n ....\\n 1310  \\n 1311  	// sensor transfer at high clock speed\\n 1312: 	set_frequency(MPU9250_HIGH_BUS_SPEED);\\n 1313  \\n 1314  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/platforms/posix/drivers/gyrosim/gyrosim.cpp:\\n 1047  \\n 1048  	// sensor transfer at high clock speed\\n 1049: 	//set_frequency(GYROSIM_HIGH_BUS_SPEED);\\n 1050  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\\n 1051  		return;\\n\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\\n130 matches across 25 files\\n\\n\\nSearching 16944 files for \\\"set_update_rate\\\"\\n\\n/home/rutk1t0r/src/ardupilot/.tags:\\n 169821  PWM_SERVO_SET_SELECT_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	165;\\\"	d\\n 169822  PWM_SERVO_SET_TERMINATION_FAILSAFE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	227;\\\"	d\\n 169823: PWM_SERVO_SET_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	156;\\\"	d\\n 169824  PWM_Sysfs	libraries/AP_HAL_Linux/PWM_Sysfs.cpp	/^PWM_Sysfs::PWM_Sysfs(uint8_t chip, uint8_t channel) :$/;\\\"	f	class:Linux::PWM_Sysfs\\n 169825  PWM_Sysfs	libraries/AP_HAL_Linux/PWM_Sysfs.h	/^class Linux::PWM_Sysfs : public Linux::PWM_Sysfs_Base {$/;\\\"	c	class:Linux\\n .....\\n 336865  reset_takeoff_state	modules/PX4Firmware/src/modules/fw_pos_control_l1/fw_pos_control_l1_main.cpp	/^void FixedwingPositionControl::reset_takeoff_state()$/;\\\"	f	class:FixedwingPositionControl\\n 336866  reset_target_validity	modules/PX4Firmware/src/modules/navigator/follow_target.cpp	/^void FollowTarget::reset_target_validity()$/;\\\"	f	class:FollowTarget\\n 336867: reset_update_rates	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::reset_update_rates()$/;\\\"	f	class:GPS_Helper\\n 336868  resgen	modules/waf/waflib/extras/resx.py	/^class resgen(Task.Task):$/;\\\"	c\\n 336869  residue	modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/usb/storage.h	/^  uint8_t residue[4];             \\\\/* Amount not transferred *\\\\/$/;\\\"	m	struct:usbmsc_csw_s\\n .....\\n 342134  set_up_was_run	modules/gtest/test/gtest_environment_test.cc	/^  bool set_up_was_run() const { return set_up_was_run_; }$/;\\\"	f	class:__anon823::MyEnvironment\\n 342135  set_up_was_run_	modules/gtest/test/gtest_environment_test.cc	/^  bool set_up_was_run_;$/;\\\"	m	class:__anon823::MyEnvironment	file:\\n 342136: set_update_rate	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsCoax\\n 342137: set_update_rate	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsHeli_Single\\n 342138: set_update_rate	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsMatrix\\n 342139: set_update_rate	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsSingle\\n 342140: set_update_rate	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsTri\\n 342141: set_update_rate	libraries/AP_Motors/AP_Motors_Class.h	/^    virtual void        set_update_rate( uint16_t speed_hz ) { _speed_hz = speed_hz; };$/;\\\"	f	class:AP_Motors\\n 342142: set_update_rate	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^PX4IO::set_update_rate(int rate)$/;\\\"	f	class:PX4IO\\n 342143  set_usb_connected	libraries/AP_HAL_PX4/GPIO.h	/^    void set_usb_connected(void) { _usb_connected = true; }$/;\\\"	f	class:PX4::PX4GPIO\\n 342144  set_use_imt	Tools/Replay/LogReader.h	/^    void set_use_imt(bool _use_imt) { use_imt = _use_imt; }$/;\\\"	f	class:LogReader\\n\\n/home/rutk1t0r/src/ardupilot/.tags_sorted_by_file:\\n 30149  output_test	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_test(uint8_t motor_seq, int16_t pwm)$/;\\\"	f	class:AP_MotorsCoax\\n 30150  output_to_motors	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::output_to_motors()$/;\\\"	f	class:AP_MotorsCoax\\n 30151: set_update_rate	libraries/AP_Motors/AP_MotorsCoax.cpp	/^void AP_MotorsCoax::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsCoax\\n 30152  var_info	libraries/AP_Motors/AP_MotorsCoax.cpp	/^const AP_Param::GroupInfo AP_MotorsCoax::var_info[] = {$/;\\\"	m	class:AP_MotorsCoax	file:\\n 30153  AP_MOTORS_COAX_NEGATIVE	libraries/AP_Motors/AP_MotorsCoax.h	14;\\\"	d\\n .....\\n 30294  servo_test	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::servo_test()$/;\\\"	f	class:AP_MotorsHeli_Single\\n 30295  set_desired_rotor_speed	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::set_desired_rotor_speed(float desired_speed)$/;\\\"	f	class:AP_MotorsHeli_Single\\n 30296: set_update_rate	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsHeli_Single\\n 30297  update_motor_control	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^void AP_MotorsHeli_Single::update_motor_control(RotorControlState state)$/;\\\"	f	class:AP_MotorsHeli_Single\\n 30298  var_info	libraries/AP_Motors/AP_MotorsHeli_Single.cpp	/^const AP_Param::GroupInfo AP_MotorsHeli_Single::var_info[] = {$/;\\\"	m	class:AP_MotorsHeli_Single	file:\\n .....\\n 30365  remove_motor	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::remove_motor(int8_t motor_num)$/;\\\"	f	class:AP_MotorsMatrix\\n 30366  set_frame_orientation	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::set_frame_orientation( uint8_t new_orientation )$/;\\\"	f	class:AP_MotorsMatrix\\n 30367: set_update_rate	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsMatrix\\n 30368  thrust_compensation	libraries/AP_Motors/AP_MotorsMatrix.cpp	/^void AP_MotorsMatrix::thrust_compensation(void)$/;\\\"	f	class:AP_MotorsMatrix\\n 30369  AP_MOTORS_MATRIX_YAW_FACTOR_CCW	libraries/AP_Motors/AP_MotorsMatrix.h	13;\\\"	d\\n .....\\n 30480  output_test	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::output_test(uint8_t motor_seq, int16_t pwm)$/;\\\"	f	class:AP_MotorsSingle\\n 30481  output_to_motors	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::output_to_motors()$/;\\\"	f	class:AP_MotorsSingle\\n 30482: set_update_rate	libraries/AP_Motors/AP_MotorsSingle.cpp	/^void AP_MotorsSingle::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsSingle\\n 30483  var_info	libraries/AP_Motors/AP_MotorsSingle.cpp	/^const AP_Param::GroupInfo AP_MotorsSingle::var_info[] = {$/;\\\"	m	class:AP_MotorsSingle	file:\\n 30484  AP_MOTORS_SINGLE_SERVO_INPUT_RANGE	libraries/AP_Motors/AP_MotorsSingle.h	21;\\\"	d\\n .....\\n 30506  output_test	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::output_test(uint8_t motor_seq, int16_t pwm)$/;\\\"	f	class:AP_MotorsTri\\n 30507  output_to_motors	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::output_to_motors()$/;\\\"	f	class:AP_MotorsTri\\n 30508: set_update_rate	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::set_update_rate( uint16_t speed_hz )$/;\\\"	f	class:AP_MotorsTri\\n 30509  thrust_compensation	libraries/AP_Motors/AP_MotorsTri.cpp	/^void AP_MotorsTri::thrust_compensation(void)$/;\\\"	f	class:AP_MotorsTri\\n 30510  var_info	libraries/AP_Motors/AP_MotorsTri.cpp	/^const AP_Param::GroupInfo AP_MotorsTri::var_info[] = {$/;\\\"	m	class:AP_MotorsTri	file:\\n .....\\n 30610  set_throttle	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_throttle(float throttle_in) { _throttle_in = throttle_in; };   \\\\/\\\\/ range 0 ~ 1$/;\\\"	f	class:AP_Motors\\n 30611  set_throttle_filter_cutoff	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_throttle_filter_cutoff(float filt_hz) { _throttle_filter.set_cutoff_frequency(filt_hz); }$/;\\\"	f	class:AP_Motors\\n 30612: set_update_rate	libraries/AP_Motors/AP_Motors_Class.h	/^    virtual void        set_update_rate( uint16_t speed_hz ) { _speed_hz = speed_hz; };$/;\\\"	f	class:AP_Motors\\n 30613  set_voltage	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_voltage(float volts){ _batt_voltage = volts; }$/;\\\"	f	class:AP_Motors\\n 30614  set_yaw	libraries/AP_Motors/AP_Motors_Class.h	/^    void                set_yaw(float yaw_in) { _yaw_in = yaw_in; };            \\\\/\\\\/ range -1 ~ +1$/;\\\"	f	class:AP_Motors\\n .....\\n 129337  PWM_SERVO_SET_SELECT_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	165;\\\"	d\\n 129338  PWM_SERVO_SET_TERMINATION_FAILSAFE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	227;\\\"	d\\n 129339: PWM_SERVO_SET_UPDATE_RATE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	156;\\\"	d\\n 129340  _PWM_SERVO_BASE	modules/PX4Firmware/src/drivers/drv_pwm_output.h	144;\\\"	d\\n 129341  channel	modules/PX4Firmware/src/drivers/drv_pwm_output.h	/^	uint8_t channel;$/;\\\"	m	struct:pwm_output_rc_config\\n .....\\n 129817  get_velocity_update_rate	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::get_velocity_update_rate()$/;\\\"	f	class:GPS_Helper\\n 129818  poll_or_read	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::poll_or_read(int fd, uint8_t *buf, size_t buf_length, uint64_t timeout)$/;\\\"	f	class:GPS_Helper\\n 129819: reset_update_rates	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::reset_update_rates()$/;\\\"	f	class:GPS_Helper\\n 129820  set_baudrate	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::set_baudrate(const int &fd, unsigned baud)$/;\\\"	f	class:GPS_Helper\\n 129821  store_update_rates	modules/PX4Firmware/src/drivers/gps/gps_helper.cpp	/^GPS_Helper::store_update_rates()$/;\\\"	f	class:GPS_Helper\\n .....\\n 133193  set_battery_current_scaling	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^PX4IO::set_battery_current_scaling(float amp_per_volt, float amp_bias)$/;\\\"	f	class:PX4IO\\n 133194  set_dsm_vcc_ctl	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^	inline void		set_dsm_vcc_ctl(bool enable)$/;\\\"	f	class:PX4IO\\n 133195: set_update_rate	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^PX4IO::set_update_rate(int rate)$/;\\\"	f	class:PX4IO\\n 133196  start	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^start(int argc, char *argv[])$/;\\\"	f	namespace:__anon801\\n 133197  system_status	modules/PX4Firmware/src/drivers/px4io/px4io.cpp	/^	inline uint16_t		system_status() const {return _status;}$/;\\\"	f	class:PX4IO\\n\\n/home/rutk1t0r/src/ardupilot/ArduCopter/esc_calibration.cpp:\\n   83  \\n   84      // reduce update rate to motors to 50Hz\\n   85:     motors.set_update_rate(50);\\n   86  \\n   87      // send message to GCS\\n   ..\\n  113  \\n  114      // reduce update rate to motors to 50Hz\\n  115:     motors.set_update_rate(50);\\n  116  \\n  117      // send message to GCS\\n\\n/home/rutk1t0r/src/ardupilot/ArduCopter/radio.cpp:\\n   55  void Copter::init_rc_out()\\n   56  {\\n   57:     motors.set_update_rate(g.rc_speed);\\n   58      motors.set_frame_orientation(g.frame_orientation);\\n   59      motors.Init();                                              // motor initialisation\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.cpp:\\n  111              freq_hz = 1;\\n  112          }\\n  113:         //::printf(\\\"SET_UPDATE_RATE %u\\\\n\\\", (unsigned)freq_hz);\\n  114:         if (ioctl(fd, PWM_SERVO_SET_UPDATE_RATE, (unsigned long)freq_hz) != 0) {\\n  115              hal.console->printf(\\\"RCOutput: Unable to set alt rate to %uHz\\\\n\\\", (unsigned)freq_hz);\\n  116              return;\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_VRBRAIN/RCOutput.cpp:\\n   52      if (freq_hz > 50) {\\n   53          // we're being asked to set the alt rate\\n   54:         if (ioctl(_pwm_fd, PWM_SERVO_SET_UPDATE_RATE, (unsigned long)freq_hz) != 0) {\\n   55              hal.console->printf(\\\"RCOutput: Unable to set alt rate to %uHz\\\\n\\\", (unsigned)freq_hz);\\n   56              return;\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.cpp:\\n   65  {\\n   66      // set update rate for the 3 motors (but not the servo on channel 7)\\n   67:     set_update_rate(_speed_hz);\\n   68  \\n   69      // set the motor_enabled flag so that the main ESC can be calibrated like other frame types\\n   ..\\n   83  \\n   84  // set update rate to motors - a value in hertz\\n   85: void AP_MotorsCoax::set_update_rate( uint16_t speed_hz )\\n   86  {\\n   87      // record requested speed\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.h:\\n   37  \\n   38      // set update rate to motors - a value in hertz\\n   39:     void                set_update_rate( uint16_t speed_hz );\\n   40  \\n   41      // enable - starts allowing signals to be sent to motors\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli.cpp:\\n  168  {\\n  169      // set update rate\\n  170:     set_update_rate(_speed_hz);\\n  171  \\n  172      // load boot-up servo test cycles into counter to be consumed\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli.h:\\n   69      // set update rate to motors - a value in hertz\\n   70      // you must have setup_motors before calling this\\n   71:     virtual void set_update_rate( uint16_t speed_hz ) = 0;\\n   72  \\n   73      // enable - starts allowing signals to be sent to motors\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.cpp:\\n  139  \\n  140  // set update rate to motors - a value in hertz\\n  141: void AP_MotorsHeli_Single::set_update_rate( uint16_t speed_hz )\\n  142  {\\n  143      // record requested speed\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.h:\\n   59      // set update rate to motors - a value in hertz\\n   60      // you must have setup_motors before calling this\\n   61:     void set_update_rate(uint16_t speed_hz);\\n   62  \\n   63      // enable - starts allowing signals to be sent to motors and servos\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.cpp:\\n   32  \\n   33      // enable fast channels or instant pwm\\n   34:     set_update_rate(_speed_hz);\\n   35  }\\n   36  \\n   37  // set update rate to motors - a value in hertz\\n   38: void AP_MotorsMatrix::set_update_rate( uint16_t speed_hz )\\n   39  {\\n   40      uint8_t i;\\n   ..\\n   68  \\n   69      // enable fast channels or instant pwm\\n   70:     set_update_rate(_speed_hz);\\n   71  }\\n   72  \\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.h:\\n   27      // set update rate to motors - a value in hertz\\n   28      // you must have setup_motors before calling this\\n   29:     void                set_update_rate(uint16_t speed_hz);\\n   30  \\n   31      // set frame orientation (normally + or X)\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.cpp:\\n   65  {\\n   66      // set update rate for the 3 motors (but not the servo on channel 7)\\n   67:     set_update_rate(_speed_hz);\\n   68  \\n   69      // set the motor_enabled flag so that the main ESC can be calibrated like other frame types\\n   ..\\n   86  \\n   87  // set update rate to motors - a value in hertz\\n   88: void AP_MotorsSingle::set_update_rate( uint16_t speed_hz )\\n   89  {\\n   90      // record requested speed\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.h:\\n   37  \\n   38      // set update rate to motors - a value in hertz\\n   39:     void                set_update_rate( uint16_t speed_hz );\\n   40  \\n   41      // enable - starts allowing signals to be sent to motors\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.cpp:\\n   88      \\n   89      // set update rate for the 3 motors (but not the servo on channel 7)\\n   90:     set_update_rate(_speed_hz);\\n   91  \\n   92      // set the motor_enabled flag so that the ESCs can be calibrated like other frame types\\n   ..\\n  100  \\n  101  // set update rate to motors - a value in hertz\\n  102: void AP_MotorsTri::set_update_rate( uint16_t speed_hz )\\n  103  {\\n  104      // record requested speed\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.h:\\n   31  \\n   32      // set update rate to motors - a value in hertz\\n   33:     void                set_update_rate( uint16_t speed_hz );\\n   34  \\n   35      // enable - starts allowing signals to be sent to motors\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.h:\\n   44  \\n   45      // set update rate to motors - a value in hertz\\n   46:     virtual void        set_update_rate( uint16_t speed_hz ) { _speed_hz = speed_hz; };\\n   47  \\n   48      // set frame orientation (normally + or X)\\n\\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/examples/AP_Motors_test/AP_Motors_test.cpp:\\n   64  \\n   65      // motor initialisation\\n   66:     motors.set_update_rate(490);\\n   67      motors.set_frame_orientation(AP_MOTORS_X_FRAME);\\n   68      motors.Init();\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf.map:\\n 24324   .text._ZN5PX4IO12print_statusEb\\n 24325                  0x0801e9d8      0x8f8 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/module.pre.o\\n 24326:  .text._ZN5PX4IO15set_update_rateEi\\n 24327                  0x0801f2d0       0x40 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/module.pre.o\\n 24328   .text.px4io_main\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/module.pre.o.map:\\n  940                  0x00000000                PX4IO::print_status(bool)\\n  941  \\n  942: .text._ZN5PX4IO15set_update_rateEi\\n  943                  0x00000000       0x40\\n  944:  .text._ZN5PX4IO15set_update_rateEi\\n  945                  0x00000000       0x40 px4io.cpp.o\\n  946:                 0x00000000                PX4IO::set_update_rate(int)\\n  947  \\n  948  .text._ZN5PX4IO27set_battery_current_scalingEff\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/drv_pwm_output.h:\\n  154  \\n  155  /** set alternate servo update rate */\\n  156: #define PWM_SERVO_SET_UPDATE_RATE _PX4_IOC(_PWM_SERVO_BASE, 3)\\n  157  \\n  158  /** get alternate servo update rate */\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/gps/gps.cpp:\\n  361  \\n  362  					/* GPS is obviously detected successfully, reset statistics */\\n  363: 					_Helper->reset_update_rates();\\n  364  				}\\n  365  \\n  ...\\n  398  						last_rate_count = 0;\\n  399  						_Helper->store_update_rates();\\n  400: 						_Helper->reset_update_rates();\\n  401  					}\\n  402  \\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/gps/gps_helper.cpp:\\n   70  \\n   71  void\\n   72: GPS_Helper::reset_update_rates()\\n   73  {\\n   74  	_rate_count_vel = 0;\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/gps/gps_helper.h:\\n   59  	float				get_position_update_rate();\\n   60  	float				get_velocity_update_rate();\\n   61: 	void				reset_update_rates();\\n   62  	void				store_update_rates();\\n   63  \\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mkblctrl/mkblctrl.cpp:\\n  998  		break;\\n  999  \\n 1000: 	case PWM_SERVO_SET_UPDATE_RATE:\\n 1001  		ret = OK;\\n 1002  		break;\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/pwm_out_sim/pwm_out_sim.cpp:\\n  619  		break;\\n  620  \\n  621: 	case PWM_SERVO_SET_UPDATE_RATE:\\n  622  		// PWMSim always outputs at the alternate (usually faster) rate\\n  623  		g_pwm_sim->set_pwm_rate(arg);\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4fmu/fmu.cpp:\\n 1531  		break;\\n 1532  \\n 1533: 	case PWM_SERVO_SET_UPDATE_RATE:\\n 1534  		ret = set_pwm_rate(_pwm_alt_rate_channels, _pwm_default_rate, arg);\\n 1535  		break;\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/px4io.cpp:\\n  185  	* 			Min 10 Hz, max 400 Hz\\n  186  	*/\\n  187: 	int      		set_update_rate(int rate);\\n  188  \\n  189  	/**\\n  ...\\n 2423  		break;\\n 2424  \\n 2425: 	case PWM_SERVO_SET_UPDATE_RATE:\\n 2426  		/* set the requested alternate rate */\\n 2427  		ret = io_reg_set(PX4IO_PAGE_SETUP, PX4IO_P_SETUP_PWM_ALTRATE, arg);\\n ....\\n 2986  \\n 2987  int\\n 2988: PX4IO::set_update_rate(int rate)\\n 2989  {\\n 2990  	int interval_ms = 1000 / rate;\\n ....\\n 3628  \\n 3629  			if (limitrate > 0) {\\n 3630: 				g_dev->set_update_rate(limitrate);\\n 3631  \\n 3632  			} else {\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/platforms/posix/drivers/gpssim/gpssim.cpp:\\n  358  \\n  359  			// GPS is obviously detected successfully, reset statistics\\n  360: 			//_Helper->reset_update_rates();\\n  361  \\n  362  			while ((receive(TIMEOUT_5HZ)) > 0 && !_task_should_exit) {\\n\\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/systemcmds/pwm/pwm.c:\\n  305  		/* change alternate PWM rate */\\n  306  		if (alt_rate > 0) {\\n  307: 			ret = ioctl(fd, PWM_SERVO_SET_UPDATE_RATE, alt_rate);\\n  308  \\n  309  			if (ret != OK) {\\n  310: 				err(1, \\\"PWM_SERVO_SET_UPDATE_RATE (check rate for sanity)\\\");\\n  311  			}\\n  312  		}\\n\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\\n78 matches across 32 files\\n\\n\\nSearching 16944 files for \\\"g.rc_speed\\\"\\n\\n/home/rutk1t0r/src/ardupilot/ArduCopter/radio.cpp:\\n   55  void Copter::init_rc_out()\\n   56  {\\n   57:     motors.set_update_rate(g.rc_speed);\\n   58      motors.set_frame_orientation(g.frame_orientation);\\n   59      motors.Init();                                              // motor initialisation\\n\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\\n1 match in 1 file\\n\\n\\nSearching 16944 files for \\\"g.rc_speed\\\"\\n\\n/home/rutk1t0r/src/ardupilot/ArduCopter/radio.cpp:\\n   55  void Copter::init_rc_out()\\n   56  {\\n   57:     motors.set_update_rate(g.rc_speed);\\n   58      motors.set_frame_orientation(g.frame_orientation);\\n   59      motors.Init();                                              // motor initialisation\\n\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\\n1 match in 1 file\\n\",\n   28  			\"settings\":\n   29  			{\n   ..\n  201  			\"g.rc_speed\",\n  202  			\"set_update_rate\",\n  203: 			\"set_freq\",\n  204  			\"hal.rcout->enable_ch\",\n  205  			\"_flags.frame_orientation\",\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/RCOutput.h:\n   34  \n   35      /* Output freq (1/period) control */\n   36:     virtual void     set_freq(uint32_t chmask, uint16_t freq_hz) = 0;\n   37      virtual uint16_t get_freq(uint8_t ch) = 0;\n   38  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput/RCOutput.cpp:\n   34  /* Function to drive a RC output TYPE especified */\n   35  void drive(uint16_t hz_speed) {\n   36:     hal.rcout->set_freq(0xFF, hz_speed);\n   37  \n   38      while (1) {\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput2/RCOutput.cpp:\n   34  /* Function to drive a RC output TYPE especified */\n   35  void drive(uint16_t hz_speed) {\n   36:     hal.rcout->set_freq(0xFF, hz_speed);\n   37  \n   38      while (1) {\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Empty/RCOutput.cpp:\n    6  void RCOutput::init() {}\n    7  \n    8: void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) {}\n    9  \n   10  uint16_t RCOutput::get_freq(uint8_t ch) {\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Empty/RCOutput.h:\n    5  class Empty::RCOutput : public AP_HAL::RCOutput {\n    6      void     init();\n    7:     void     set_freq(uint32_t chmask, uint16_t freq_hz);\n    8      uint16_t get_freq(uint8_t ch);\n    9      void     enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/OpticalFlow_Onboard.cpp:\n   77  #if CONFIG_HAL_BOARD_SUBTYPE == HAL_BOARD_SUBTYPE_LINUX_BEBOP\n   78      _pwm = new PWM_Sysfs_Bebop(BEBOP_CAMV_PWM);\n   79:     _pwm->set_freq(BEBOP_CAMV_PWM_FREQ);\n   80      _pwm->enable(true);\n   81  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/PWM_Sysfs.cpp:\n  109  }\n  110  \n  111: void PWM_Sysfs_Base::set_freq(uint32_t freq)\n  112  {\n  113      set_period(hz_to_nsec(freq));\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/PWM_Sysfs.h:\n   19      void set_period(uint32_t nsec_period);\n   20      uint32_t get_period();\n   21:     void set_freq(uint32_t freq);\n   22      uint32_t get_freq();\n   23  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp:\n   56     // all outputs default to 50Hz, the top level vehicle code\n   57     // overrides this when necessary\n   58:    set_freq(0xFFFFFFFF, 50);\n   59  }\n   60  \n   61: void RCOutput_AioPRU::set_freq(uint32_t chmask, uint16_t freq_hz)\n   62  {\n   63     uint8_t i;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_AioPRU.h:\n   19  class Linux::RCOutput_AioPRU : public AP_HAL::RCOutput {\n   20      void     init();\n   21:     void     set_freq(uint32_t chmask, uint16_t freq_hz);\n   22      uint16_t get_freq(uint8_t ch);\n   23      void     enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_Bebop.cpp:\n  292  }\n  293  \n  294: void RCOutput_Bebop::set_freq(uint32_t chmask, uint16_t freq_hz)\n  295  {\n  296      _frequency = freq_hz;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_Bebop.h:\n   67  \n   68      void     init();\n   69:     void     set_freq(uint32_t chmask, uint16_t freq_hz);\n   70      uint16_t get_freq(uint8_t ch);\n   71      void     enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp:\n   92  \n   93      /* Set the initial frequency */\n   94:     set_freq(0, 50);\n   95  \n   96      /* Enable PCA9685 PWM */\n   ..\n  117  }\n  118  \n  119: void RCOutput_PCA9685::set_freq(uint32_t chmask, uint16_t freq_hz)\n  120  {\n  121  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_PCA9685.h:\n   15      void     init();\n   16      void     reset_all_channels();\n   17:     void     set_freq(uint32_t chmask, uint16_t freq_hz);\n   18      uint16_t get_freq(uint8_t ch);\n   19      void     enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_PRU.cpp:\n   37      // all outputs default to 50Hz, the top level vehicle code\n   38      // overrides this when necessary\n   39:     set_freq(0xFFFFFFFF, 50);\n   40  }\n   41  \n   42: void RCOutput_PRU::set_freq(uint32_t chmask, uint16_t freq_hz)            //LSB corresponds to CHAN_1\n   43  {\n   44      uint8_t i;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_PRU.h:\n   16  class Linux::RCOutput_PRU : public AP_HAL::RCOutput {\n   17      void     init();\n   18:     void     set_freq(uint32_t chmask, uint16_t freq_hz);\n   19      uint16_t get_freq(uint8_t ch);\n   20      void     enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp:\n   38  }\n   39  \n   40: void RCOutput_Raspilot::set_freq(uint32_t chmask, uint16_t freq_hz)\n   41  {\n   42      if (!_spi_sem->take(10)) {\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_Raspilot.h:\n    5  class Linux::RCOutput_Raspilot : public AP_HAL::RCOutput {\n    6      void     init();\n    7:     void     set_freq(uint32_t chmask, uint16_t freq_hz);\n    8      uint16_t get_freq(uint8_t ch);\n    9      void     enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp:\n   50  \n   51          /* Set the initial frequency */\n   52:         _pwm_channels[i]->set_freq(50);\n   53          _pwm_channels[i]->set_duty_cycle(0);\n   54          _pwm_channels[i]->set_polarity(PWM_Sysfs::Polarity::NORMAL);\n   ..\n   56  }\n   57  \n   58: void RCOutput_Sysfs::set_freq(uint32_t chmask, uint16_t freq_hz)\n   59  {\n   60      for (uint8_t i = 0; i < _channel_count; i++) {\n   61          if (chmask & 1 << i) {\n   62:             _pwm_channels[i]->set_freq(freq_hz);\n   63          }\n   64      }\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_Sysfs.h:\n   15  \n   16      void init();\n   17:     void set_freq(uint32_t chmask, uint16_t freq_hz);\n   18      uint16_t get_freq(uint8_t ch);\n   19      void enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp:\n   36      // all outputs default to 50Hz, the top level vehicle code\n   37      // overrides this when necessary\n   38:     set_freq(0xFFFFFFFF, 50);\n   39  }\n   40  \n   41: void RCOutput_ZYNQ::set_freq(uint32_t chmask, uint16_t freq_hz)            //LSB corresponds to CHAN_1\n   42  {\n   43      uint8_t i;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_ZYNQ.h:\n   15  class Linux::RCOutput_ZYNQ : public AP_HAL::RCOutput {\n   16      void     init();\n   17:     void     set_freq(uint32_t chmask, uint16_t freq_hz);\n   18      uint16_t get_freq(uint8_t ch);\n   19      void     enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_qflight.cpp:\n   44  \n   45  \n   46: void RCOutput_QFLIGHT::set_freq(uint32_t chmask, uint16_t freq_hz)\n   47  {\n   48      // no support for changing frequency yet\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_Linux/RCOutput_qflight.h:\n    9  public:\n   10      void init();\n   11:     void set_freq(uint32_t chmask, uint16_t freq_hz);\n   12      uint16_t get_freq(uint8_t ch);\n   13      void enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.cpp:\n   98    set output frequency on outputs associated with fd\n   99   */\n  100: void PX4RCOutput::set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz) \n  101  {\n  102      // we can't set this per channel\n  ...\n  164    set output frequency\n  165   */\n  166: void PX4RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz) \n  167  {\n  168      if (freq_hz > 50 && _output_mode == MODE_PWM_ONESHOT) {\n  ...\n  189      uint32_t alt_mask = chmask >> _servo_count;\n  190      if (primary_mask && _pwm_fd != -1) {\n  191:         set_freq_fd(_pwm_fd, primary_mask, freq_hz);\n  192      }\n  193      if (alt_mask && _alt_fd != -1) {\n  194:         set_freq_fd(_alt_fd, alt_mask, freq_hz);\n  195      }\n  196  }\n  ...\n  559          // produced except when triggered by push() when the main loop\n  560          // is running\n  561:         set_freq(_rate_mask, 1);\n  562      }\n  563      _output_mode = mode;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.h:\n   12  public:\n   13      void     init() override;\n   14:     void     set_freq(uint32_t chmask, uint16_t freq_hz) override;\n   15      uint16_t get_freq(uint8_t ch) override;\n   16      void     enable_ch(uint8_t ch) override;\n   ..\n   66      void _publish_actuators(void);\n   67      void _arm_actuators(bool arm);\n   68:     void set_freq_fd(int fd, uint32_t chmask, uint16_t freq_hz);\n   69      bool _corking;\n   70      enum output_mode _output_mode = MODE_PWM_NORMAL;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_QURT/RCOutput.cpp:\n   19  }\n   20  \n   21: void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)\n   22  {\n   23      // no support for changing frequency yet\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_QURT/RCOutput.h:\n   18  \n   19      void init();\n   20:     void set_freq(uint32_t chmask, uint16_t freq_hz);\n   21      uint16_t get_freq(uint8_t ch);\n   22      void enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_SITL/RCOutput.cpp:\n   17  void RCOutput::init() {}\n   18  \n   19: void RCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)\n   20  {\n   21:     Debug(\"set_freq(0x%04x, %u)\\n\", (unsigned)chmask, (unsigned)freq_hz);\n   22      _freq_hz = freq_hz;\n   23  }\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_SITL/RCOutput.h:\n   12      }\n   13      void     init() override;\n   14:     void     set_freq(uint32_t chmask, uint16_t freq_hz) override;\n   15      uint16_t get_freq(uint8_t ch) override;\n   16      void     enable_ch(uint8_t ch) override;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_VRBRAIN/RCOutput.cpp:\n   47  }\n   48  \n   49: void VRBRAINRCOutput::set_freq(uint32_t chmask, uint16_t freq_hz)\n   50  {\n   51      // we can't set this per channel yet\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_VRBRAIN/RCOutput.h:\n   10  public:\n   11      void     init();\n   12:     void     set_freq(uint32_t chmask, uint16_t freq_hz);\n   13      uint16_t get_freq(uint8_t ch);\n   14      void     enable_ch(uint8_t ch);\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsCoax.cpp:\n   94          1U << AP_MOTORS_MOT_3 |\n   95          1U << AP_MOTORS_MOT_4 ;\n   96:     rc_set_freq(mask, _servo_speed);\n   97      uint32_t mask2 =\n   98          1U << AP_MOTORS_MOT_5 |\n   99          1U << AP_MOTORS_MOT_6 ;\n  100:     rc_set_freq(mask2, _speed_hz);\n  101  }\n  102  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsHeli_Single.cpp:\n  150          1U << AP_MOTORS_MOT_3 |\n  151          1U << AP_MOTORS_MOT_4;\n  152:     rc_set_freq(mask, _speed_hz);\n  153  }\n  154  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.cpp:\n   50          }\n   51      }\n   52:     rc_set_freq( mask, _speed_hz );\n   53  }\n   54  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsSingle.cpp:\n   97          1U << AP_MOTORS_MOT_3 |\n   98          1U << AP_MOTORS_MOT_4 ;\n   99:     rc_set_freq(mask, _servo_speed);\n  100      uint32_t mask2 =\n  101          1U << AP_MOTORS_MOT_5 |\n  102          1U << AP_MOTORS_MOT_6 ;\n  103:     rc_set_freq(mask2, _speed_hz);\n  104  }\n  105  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.cpp:\n  110  	    1U << AP_MOTORS_MOT_2 |\n  111  	    1U << AP_MOTORS_MOT_4;\n  112:     rc_set_freq(mask, _speed_hz);\n  113  }\n  114  \n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.cpp:\n   99    set frequency of a set of channels\n  100   */\n  101: void AP_Motors::rc_set_freq(uint32_t mask, uint16_t freq_hz)\n  102  {\n  103      mask = rc_map_mask(mask);\n  ...\n  105          _motor_fast_mask |= mask;\n  106      }\n  107:     hal.rcout->set_freq(mask, freq_hz);\n  108      if ((_pwm_type == PWM_TYPE_ONESHOT ||\n  109           _pwm_type == PWM_TYPE_ONESHOT125) &&\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.h:\n  133      virtual void        output_armed_stabilizing()=0;\n  134      virtual void        rc_write(uint8_t chan, uint16_t pwm);\n  135:     virtual void        rc_set_freq(uint32_t mask, uint16_t freq_hz);\n  136      virtual void        rc_enable_ch(uint8_t chan);\n  137      virtual uint32_t    rc_map_mask(uint32_t mask) const;\n\n/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/RCOutputRGBLed.cpp:\n   67          const uint32_t mask = 1 << _red_channel | 1 << _green_channel\n   68                                | 1 << _blue_channel;\n   69:         hal.rcout->set_freq(mask, freq_motor);\n   70      }\n   71  \n\n/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/examples/RC_UART/RC_UART.cpp:\n   38      hal.console->println(\"RC_UART starting\");\n   39      hal.UART->begin(baudrate, 512, 512);\n   40:     hal.rcout->set_freq(0xFF, RC_SPEED);\n   41  }\n   42  \n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf.map:\n 4038   .text._ZN5Empty8RCOutput4initEv\n 4039                  0x00000000        0x2 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 4040:  .text._ZN5Empty8RCOutput8set_freqEjt\n 4041                  0x00000000        0x2 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 4042   .text._ZN5Empty8RCOutput8get_freqEh\n ....\n 24019   .text._ZN9AP_Motors8rc_writeEht\n 24020                  0x0804daf8       0x44 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 24021:  .text._ZN9AP_Motors11rc_set_freqEjt\n 24022                  0x0804db3c       0x48 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 24023   .text._ZN9AP_Motors12rc_enable_chEh\n .....\n 25402                  0x0805cc4c       0x3e /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 25403   *fill*         0x0805cc8a        0x2 \n 25404:  .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\n 25405                  0x0805cc8c       0xc4 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 25406:  .text._ZN3PX411PX4RCOutput8set_freqEjt\n 25407                  0x0805cd50       0xa8 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/module.pre.o\n 25408   .text._ZN3PX411PX4RCOutput14_arm_actuatorsEb\n .....\n 26034                  0x080616f4                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\n 26035                  0x080616f4                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\n 26036:  .text._ZN6device3SPI13set_frequencyEj\n 26037                  0x0806173c        0x4 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o\n 26038:                 0x0806173c                device::SPI::set_frequency(unsigned int)\n 26039   .text._ZN6device3SPI9_transferEPhS1_j\n 26040                  0x08061740       0x60 /home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/module.pre.o.map:\n 133037                  0x00000000                AP_Motors::rc_write(unsigned char, unsigned short)\n 133038  \n 133039: .text._ZN9AP_Motors11rc_set_freqEjt\n 133040                  0x00000000       0x48\n 133041:  .text._ZN9AP_Motors11rc_set_freqEjt\n 133042                  0x00000000       0x48 libraries/AP_Motors/AP_Motors_Class.cpp.o\n 133043:                 0x00000000                AP_Motors::rc_set_freq(unsigned int, unsigned short)\n 133044  \n 133045  .text._ZN9AP_Motors12rc_enable_chEh\n .....\n 138400                  0x00000000                Empty::RCOutput::init()\n 138401  \n 138402: .text._ZN5Empty8RCOutput8set_freqEjt\n 138403                  0x00000000        0x2\n 138404:  .text._ZN5Empty8RCOutput8set_freqEjt\n 138405                  0x00000000        0x2 libraries/AP_HAL_Empty/RCOutput.cpp.o\n 138406:                 0x00000000                Empty::RCOutput::set_freq(unsigned int, unsigned short)\n 138407  \n 138408  .text._ZN5Empty8RCOutput8get_freqEh\n .....\n 139058                  0x00000000                PX4::PX4RCOutput::enable_ch(unsigned char)\n 139059  \n 139060: .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\n 139061                  0x00000000       0xc4\n 139062:  .text._ZN3PX411PX4RCOutput11set_freq_fdEijt\n 139063                  0x00000000       0xc4 libraries/AP_HAL_PX4/RCOutput.cpp.o\n 139064:                 0x00000000                PX4::PX4RCOutput::set_freq_fd(int, unsigned int, unsigned short)\n 139065  \n 139066: .text._ZN3PX411PX4RCOutput8set_freqEjt\n 139067                  0x00000000       0xa8\n 139068:  .text._ZN3PX411PX4RCOutput8set_freqEjt\n 139069                  0x00000000       0xa8 libraries/AP_HAL_PX4/RCOutput.cpp.o\n 139070:                 0x00000000                PX4::PX4RCOutput::set_freq(unsigned int, unsigned short)\n 139071  \n 139072  .text._ZN3PX411PX4RCOutput14_arm_actuatorsEb\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/module.pre.o.map:\n 1544                  0x00000000                device::SPI::SPI(char const*, char const*, int, spi_dev_e, spi_mode_e, unsigned int, int)\n 1545  \n 1546: .text._ZN6device3SPI13set_frequencyEj\n 1547                  0x00000000        0x4\n 1548:  .text._ZN6device3SPI13set_frequencyEj\n 1549                  0x00000000        0x4 spi.cpp.o\n 1550:                 0x00000000                device::SPI::set_frequency(unsigned int)\n 1551  \n 1552  .text._ZN6device3SPI9_transferEPhS1_j\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/spi.cpp:\n  174  \n  175  void\n  176: SPI::set_frequency(uint32_t frequency)\n  177  {\n  178  	_frequency = frequency;\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/device/spi.h:\n  124  	 * @param frequency	Frequency to set (Hz)\n  125  	 */\n  126: 	void		set_frequency(uint32_t frequency);\n  127  \n  128  	/**\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu6000/mpu6000.cpp:\n 1087  \n 1088  	// get baseline values without self-test enabled\n 1089: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\n 1090  \n 1091  	memset(accel_baseline, 0, sizeof(accel_baseline));\n ....\n 1121  \n 1122  	// get values with self-test enabled\n 1123: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\n 1124  \n 1125  \n ....\n 1538  \n 1539  	// general register transfer at low clock speed\n 1540: 	set_frequency(speed);\n 1541  \n 1542  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1551  \n 1552  	// general register transfer at low clock speed\n 1553: 	set_frequency(MPU6000_LOW_BUS_SPEED);\n 1554  \n 1555  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1567  \n 1568  	// general register transfer at low clock speed\n 1569: 	set_frequency(MPU6000_LOW_BUS_SPEED);\n 1570  \n 1571  	transfer(cmd, nullptr, sizeof(cmd));\n ....\n 1769  \n 1770  	// sensor transfer at high clock speed\n 1771: 	set_frequency(MPU6000_HIGH_BUS_SPEED);\n 1772  \n 1773  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu6500/mpu6500.cpp:\n 1019  //\n 1020  //	// get baseline values without self-test enabled\n 1021: //      set_frequency(MPU6500_HIGH_BUS_SPEED);\n 1022  \n 1023  //	memset(accel_baseline, 0, sizeof(accel_baseline));\n ....\n 1053  \n 1054  //	// get values with self-test enabled\n 1055: //        set_frequency(MPU6500_HIGH_BUS_SPEED);\n 1056  \n 1057  \n ....\n 1446  \n 1447  	// general register transfer at low clock speed\n 1448: 	set_frequency(speed);\n 1449  \n 1450  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1459  \n 1460  	// general register transfer at low clock speed\n 1461: 	set_frequency(MPU6500_LOW_BUS_SPEED);\n 1462  \n 1463  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1475  \n 1476  	// general register transfer at low clock speed\n 1477: 	set_frequency(MPU6500_LOW_BUS_SPEED);\n 1478  \n 1479  	transfer(cmd, nullptr, sizeof(cmd));\n ....\n 1679  \n 1680  	// sensor transfer at high clock speed\n 1681: 	set_frequency(MPU6500_HIGH_BUS_SPEED);\n 1682  \n 1683  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/mpu9250/mpu9250.cpp:\n 1053  \n 1054  	// general register transfer at low clock speed\n 1055: 	set_frequency(speed);\n 1056  \n 1057  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1066  \n 1067  	// general register transfer at low clock speed\n 1068: 	set_frequency(MPU9250_LOW_BUS_SPEED);\n 1069  \n 1070  	transfer(cmd, cmd, sizeof(cmd));\n ....\n 1082  \n 1083  	// general register transfer at low clock speed\n 1084: 	set_frequency(MPU9250_LOW_BUS_SPEED);\n 1085  \n 1086  	transfer(cmd, nullptr, sizeof(cmd));\n ....\n 1310  \n 1311  	// sensor transfer at high clock speed\n 1312: 	set_frequency(MPU9250_HIGH_BUS_SPEED);\n 1313  \n 1314  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\n\n/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/platforms/posix/drivers/gyrosim/gyrosim.cpp:\n 1047  \n 1048  	// sensor transfer at high clock speed\n 1049: 	//set_frequency(GYROSIM_HIGH_BUS_SPEED);\n 1050  	if (OK != transfer((uint8_t *)&mpu_report, ((uint8_t *)&mpu_report), sizeof(mpu_report))) {\n 1051  		return;\n\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/arch/arm/src/board\nUnable to open /home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/include/arch/board\n300 matches across 53 files\n",
			"settings":
			{
				"buffer_size": 203599,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "ArduCopter/radio.cpp",
			"settings":
			{
				"buffer_size": 7688,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_MotorsMulticopter.cpp",
			"settings":
			{
				"buffer_size": 21993,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_MotorsMatrix.cpp",
			"settings":
			{
				"buffer_size": 15682,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_Motors_Class.cpp",
			"settings":
			{
				"buffer_size": 5806,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_HAL_Empty/RCOutput.cpp",
			"settings":
			{
				"buffer_size": 452,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_Motors_Class.h",
			"settings":
			{
				"buffer_size": 9369,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 260.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: Li",
				"Package Control: List Packages"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 252.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/rutk1t0r/src/ardupilot/ArduCopter/Parameters.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsQuad.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsTri.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/RC_Channel_aux.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/RCOutput.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/Copter.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/Copter.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsQuad.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/config.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/utility/functor.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Menu/AP_Menu.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput2/RCOutput.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMatrix.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/examples/RC_UART/RC_UART.cpp",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/platforms/posix/drivers/gyrosim/gyrosim.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/HAL.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput2/Makefile",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCOutput/make.inc",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_ServoRelayEvents/AP_ServoRelayEvents.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_Motors_Class.h",
		"/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/RC_Channel.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/RC_Channel.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/ArduCopter.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_AttitudeControl/AC_AttitudeControl.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/motor_test.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMulticopter.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsMulticopter.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/motors.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/RC_Channel/RC_Channel_aux.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/control_stabilize.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/SITL/SIM_Multicopter.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Vehicle/AP_Vehicle.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/Attitude.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_AttitudeControl/AC_AttitudeControl.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Math/matrix3.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Math/AP_Math.h",
		"/home/rutk1t0r/src/ardupilot/ArduPlane/quadplane.h",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL/examples/RCInput/RCInput.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCInput.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCInput.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/drv_rc_input.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/modules/uORB/topics/input_rc.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4NuttX/nuttx/sched/pthread_mutexlock.c",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Motors/AP_MotorsOctaQuad.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_HAL_PX4/RCOutput.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/drv_pwm_output.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/modules/uORB/uORB.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/modules/uORB/uORB.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Param/AP_Param.h",
		"/home/rutk1t0r/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/rutk1t0r/src/ardupilot/libraries/AC_PID/AC_PID.h",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/flight_mode.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/takeoff.cpp",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4io/px4io.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Notify/AP_Notify.h",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/drivers/px4fmu/fmu.cpp",
		"/home/rutk1t0r/src/ardupilot/.tags_sorted_by_file",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/ROMFS/px4fmu_common/init.d/4009_qav250",
		"/home/rutk1t0r/src/ardupilot/modules/PX4Firmware/src/modules/systemlib/circuit_breaker.cpp",
		"/home/rutk1t0r/src/ardupilot/libraries/AP_Math/AP_Math.cpp",
		"/home/rutk1t0r/src/ardupilot/ArduCopter/control_rtl.cpp"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 111.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"set_freq",
			"set_freq_fd",
			"g.rc_speed",
			"set_update_rate",
			"set_freq",
			"hal.rcout->enable_ch",
			"_flags.frame_orientation",
			"get_rate_roll_pid",
			"angle_ef_roll_pitch_rate_ef_yaw",
			"_cycle_timestamp - _last_safety_check >= (unsigned int)1e5",
			"GPIO_BTN_SAFETY",
			"circuit_breaker_enabled(\"CBRK_IO_SAFETY\", CBRK_IO_SAFETY_KEY)",
			"CBRK_IO_SAFETY",
			"rate_controller_run"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "libraries/AP_HAL/examples/RCOutput/RCOutput.cpp",
					"settings":
					{
						"buffer_size": 2329,
						"regions":
						{
						},
						"selection":
						[
							[
								995,
								995
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "libraries/AP_HAL/HAL.h",
					"settings":
					{
						"buffer_size": 2719,
						"regions":
						{
						},
						"selection":
						[
							[
								2601,
								2601
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2108.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "libraries/AP_HAL/RCOutput.h",
					"settings":
					{
						"buffer_size": 3868,
						"regions":
						{
						},
						"selection":
						[
							[
								1080,
								1080
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 900.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "libraries/AP_HAL_PX4/RCOutput.cpp",
					"settings":
					{
						"buffer_size": 16374,
						"regions":
						{
						},
						"selection":
						[
							[
								2744,
								2744
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2211.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "libraries/AP_HAL_PX4/RCOutput.h",
					"settings":
					{
						"buffer_size": 2323,
						"regions":
						{
						},
						"selection":
						[
							[
								1660,
								1648
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1033.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"settings":
					{
						"buffer_size": 203599,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										450,
										458
									],
									[
										1162,
										1170
									],
									[
										1844,
										1852
									],
									[
										1914,
										1922
									],
									[
										2626,
										2634
									],
									[
										2688,
										2696
									],
									[
										2765,
										2773
									],
									[
										2834,
										2842
									],
									[
										2901,
										2909
									],
									[
										2977,
										2985
									],
									[
										3058,
										3066
									],
									[
										3132,
										3140
									],
									[
										3212,
										3220
									],
									[
										3290,
										3298
									],
									[
										3372,
										3380
									],
									[
										3442,
										3450
									],
									[
										3561,
										3569
									],
									[
										3641,
										3649
									],
									[
										3724,
										3732
									],
									[
										3798,
										3806
									],
									[
										3885,
										3893
									],
									[
										3957,
										3965
									],
									[
										4077,
										4085
									],
									[
										4155,
										4163
									],
									[
										4237,
										4245
									],
									[
										4300,
										4308
									],
									[
										4378,
										4386
									],
									[
										4439,
										4447
									],
									[
										4513,
										4521
									],
									[
										4574,
										4582
									],
									[
										4648,
										4656
									],
									[
										4719,
										4727
									],
									[
										4800,
										4808
									],
									[
										4866,
										4874
									],
									[
										4955,
										4963
									],
									[
										5023,
										5031
									],
									[
										5578,
										5586
									],
									[
										5640,
										5648
									],
									[
										6254,
										6262
									],
									[
										6323,
										6331
									],
									[
										6981,
										6989
									],
									[
										7057,
										7065
									],
									[
										7669,
										7677
									],
									[
										7743,
										7751
									],
									[
										8353,
										8361
									],
									[
										8431,
										8439
									],
									[
										9066,
										9074
									],
									[
										9136,
										9144
									],
									[
										9748,
										9756
									],
									[
										9828,
										9836
									],
									[
										10502,
										10510
									],
									[
										10576,
										10584
									],
									[
										11220,
										11228
									],
									[
										11292,
										11300
									],
									[
										11935,
										11943
									],
									[
										12013,
										12021
									],
									[
										12696,
										12704
									],
									[
										12759,
										12767
									],
									[
										12836,
										12844
									],
									[
										12902,
										12910
									],
									[
										13656,
										13664
									],
									[
										14326,
										14334
									],
									[
										14387,
										14395
									],
									[
										14937,
										14945
									],
									[
										14998,
										15006
									],
									[
										15636,
										15644
									],
									[
										16330,
										16338
									],
									[
										16401,
										16409
									],
									[
										17063,
										17071
									],
									[
										17133,
										17141
									],
									[
										17755,
										17763
									],
									[
										17823,
										17831
									],
									[
										18272,
										18280
									],
									[
										18582,
										18590
									],
									[
										18839,
										18847
									],
									[
										19057,
										19065
									],
									[
										19238,
										19246
									],
									[
										19483,
										19491
									],
									[
										19600,
										19608
									],
									[
										19791,
										19799
									],
									[
										19996,
										20004
									],
									[
										20259,
										20267
									],
									[
										20562,
										20570
									],
									[
										20712,
										20720
									],
									[
										20924,
										20932
									],
									[
										21083,
										21091
									],
									[
										21292,
										21300
									],
									[
										21442,
										21450
									],
									[
										21640,
										21648
									],
									[
										21836,
										21844
									],
									[
										22006,
										22014
									],
									[
										22366,
										22374
									],
									[
										22765,
										22773
									],
									[
										23018,
										23026
									],
									[
										23390,
										23398
									],
									[
										23861,
										23869
									],
									[
										24076,
										24084
									],
									[
										24623,
										24631
									],
									[
										24904,
										24912
									],
									[
										25419,
										25427
									],
									[
										25511,
										25519
									],
									[
										25674,
										25682
									],
									[
										25911,
										25919
									],
									[
										26010,
										26018
									],
									[
										26176,
										26184
									],
									[
										26267,
										26275
									],
									[
										26361,
										26369
									],
									[
										26523,
										26531
									],
									[
										26961,
										26969
									],
									[
										27052,
										27060
									],
									[
										27185,
										27193
									],
									[
										27376,
										27384
									],
									[
										27603,
										27611
									],
									[
										27814,
										27822
									],
									[
										27987,
										27995
									],
									[
										28120,
										28128
									],
									[
										28269,
										28277
									],
									[
										28434,
										28442
									],
									[
										28594,
										28602
									],
									[
										28908,
										28916
									],
									[
										29094,
										29102
									],
									[
										29227,
										29235
									],
									[
										29376,
										29384
									],
									[
										29541,
										29549
									],
									[
										29701,
										29709
									],
									[
										30003,
										30011
									],
									[
										30152,
										30160
									],
									[
										30317,
										30325
									],
									[
										30477,
										30485
									],
									[
										30788,
										30796
									],
									[
										31447,
										31462
									],
									[
										32168,
										32183
									],
									[
										32252,
										32267
									],
									[
										32895,
										32910
									],
									[
										32971,
										32986
									],
									[
										33043,
										33058
									],
									[
										33133,
										33148
									],
									[
										33212,
										33227
									],
									[
										33292,
										33307
									],
									[
										33366,
										33381
									],
									[
										33446,
										33461
									],
									[
										33520,
										33535
									],
									[
										33594,
										33609
									],
									[
										33665,
										33680
									],
									[
										33745,
										33760
									],
									[
										33840,
										33855
									],
									[
										33913,
										33928
									],
									[
										34569,
										34584
									],
									[
										34645,
										34660
									],
									[
										35266,
										35281
									],
									[
										35356,
										35371
									],
									[
										36104,
										36119
									],
									[
										36184,
										36199
									],
									[
										36787,
										36802
									],
									[
										36867,
										36882
									],
									[
										37460,
										37475
									],
									[
										37534,
										37549
									],
									[
										38296,
										38311
									],
									[
										38376,
										38391
									],
									[
										39022,
										39037
									],
									[
										39646,
										39661
									],
									[
										39730,
										39745
									],
									[
										40390,
										40405
									],
									[
										40463,
										40478
									],
									[
										40916,
										40931
									],
									[
										41062,
										41077
									],
									[
										41238,
										41253
									],
									[
										41565,
										41580
									],
									[
										41647,
										41662
									],
									[
										42028,
										42043
									],
									[
										42378,
										42393
									],
									[
										42613,
										42628
									],
									[
										42861,
										42876
									],
									[
										43094,
										43109
									],
									[
										43414,
										43429
									],
									[
										43705,
										43720
									],
									[
										43998,
										44013
									],
									[
										44261,
										44276
									],
									[
										44390,
										44405
									],
									[
										44533,
										44548
									],
									[
										44798,
										44813
									],
									[
										45067,
										45082
									],
									[
										45304,
										45319
									],
									[
										45554,
										45569
									],
									[
										45839,
										45854
									],
									[
										46069,
										46084
									],
									[
										46316,
										46331
									],
									[
										46597,
										46612
									],
									[
										46878,
										46893
									],
									[
										47348,
										47363
									],
									[
										47860,
										47875
									],
									[
										47948,
										47963
									],
									[
										48079,
										48094
									],
									[
										48322,
										48337
									],
									[
										48602,
										48617
									],
									[
										48751,
										48766
									],
									[
										48916,
										48931
									],
									[
										49161,
										49176
									],
									[
										49359,
										49374
									],
									[
										49549,
										49564
									],
									[
										49803,
										49818
									],
									[
										50057,
										50072
									],
									[
										50157,
										50172
									],
									[
										50338,
										50353
									],
									[
										50475,
										50490
									],
									[
										50728,
										50743
									],
									[
										51007,
										51022
									],
									[
										51099,
										51114
									],
									[
										51535,
										51545
									],
									[
										52066,
										52076
									],
									[
										52802,
										52813
									],
									[
										52868,
										52879
									],
									[
										53543,
										53554
									],
									[
										53609,
										53620
									],
									[
										58968,
										58979
									],
									[
										59034,
										59045
									],
									[
										67134,
										67145
									],
									[
										67200,
										67211
									],
									[
										73463,
										73474
									],
									[
										73901,
										73912
									],
									[
										74021,
										74032
									],
									[
										74699,
										74710
									],
									[
										78393,
										78404
									],
									[
										80470,
										80481
									],
									[
										80571,
										80582
									],
									[
										80739,
										80750
									],
									[
										107812,
										107823
									],
									[
										108045,
										108056
									],
									[
										108162,
										108173
									],
									[
										108388,
										108399
									],
									[
										108871,
										108882
									],
									[
										109361,
										109372
									],
									[
										109462,
										109473
									],
									[
										109630,
										109641
									],
									[
										110386,
										110394
									],
									[
										111098,
										111106
									],
									[
										111780,
										111788
									],
									[
										111850,
										111858
									],
									[
										112562,
										112570
									],
									[
										112624,
										112632
									],
									[
										112701,
										112709
									],
									[
										112770,
										112778
									],
									[
										112837,
										112845
									],
									[
										112913,
										112921
									],
									[
										112994,
										113002
									],
									[
										113068,
										113076
									],
									[
										113148,
										113156
									],
									[
										113226,
										113234
									],
									[
										113308,
										113316
									],
									[
										113378,
										113386
									],
									[
										113497,
										113505
									],
									[
										113577,
										113585
									],
									[
										113660,
										113668
									],
									[
										113734,
										113742
									],
									[
										113821,
										113829
									],
									[
										113893,
										113901
									],
									[
										114013,
										114021
									],
									[
										114091,
										114099
									],
									[
										114173,
										114181
									],
									[
										114236,
										114244
									],
									[
										114314,
										114322
									],
									[
										114375,
										114383
									],
									[
										114449,
										114457
									],
									[
										114510,
										114518
									],
									[
										114584,
										114592
									],
									[
										114655,
										114663
									],
									[
										114736,
										114744
									],
									[
										114802,
										114810
									],
									[
										114891,
										114899
									],
									[
										114959,
										114967
									],
									[
										115514,
										115522
									],
									[
										115576,
										115584
									],
									[
										116190,
										116198
									],
									[
										116259,
										116267
									],
									[
										116917,
										116925
									],
									[
										116993,
										117001
									],
									[
										117605,
										117613
									],
									[
										117679,
										117687
									],
									[
										118289,
										118297
									],
									[
										118367,
										118375
									],
									[
										119002,
										119010
									],
									[
										119072,
										119080
									],
									[
										119684,
										119692
									],
									[
										119764,
										119772
									],
									[
										120438,
										120446
									],
									[
										120512,
										120520
									],
									[
										121156,
										121164
									],
									[
										121228,
										121236
									],
									[
										121871,
										121879
									],
									[
										121949,
										121957
									],
									[
										122632,
										122640
									],
									[
										122695,
										122703
									],
									[
										122772,
										122780
									],
									[
										122838,
										122846
									],
									[
										123592,
										123600
									],
									[
										124262,
										124270
									],
									[
										124323,
										124331
									],
									[
										124873,
										124881
									],
									[
										124934,
										124942
									],
									[
										125572,
										125580
									],
									[
										126266,
										126274
									],
									[
										126337,
										126345
									],
									[
										126999,
										127007
									],
									[
										127069,
										127077
									],
									[
										127691,
										127699
									],
									[
										127759,
										127767
									],
									[
										128204,
										128212
									],
									[
										128635,
										128643
									],
									[
										129358,
										129366
									],
									[
										130051,
										130059
									],
									[
										130121,
										130129
									],
									[
										130844,
										130852
									],
									[
										130906,
										130914
									],
									[
										130985,
										130993
									],
									[
										131054,
										131062
									],
									[
										131123,
										131131
									],
									[
										131199,
										131207
									],
									[
										131282,
										131290
									],
									[
										131356,
										131364
									],
									[
										131438,
										131446
									],
									[
										131516,
										131524
									],
									[
										131600,
										131608
									],
									[
										131670,
										131678
									],
									[
										131793,
										131801
									],
									[
										131873,
										131881
									],
									[
										131958,
										131966
									],
									[
										132032,
										132040
									],
									[
										132121,
										132129
									],
									[
										132193,
										132201
									],
									[
										132317,
										132325
									],
									[
										132395,
										132403
									],
									[
										132479,
										132487
									],
									[
										132542,
										132550
									],
									[
										132622,
										132630
									],
									[
										132683,
										132691
									],
									[
										132759,
										132767
									],
									[
										132820,
										132828
									],
									[
										132896,
										132904
									],
									[
										132967,
										132975
									],
									[
										133050,
										133058
									],
									[
										133116,
										133124
									],
									[
										133207,
										133215
									],
									[
										133275,
										133283
									],
									[
										133842,
										133850
									],
									[
										133904,
										133912
									],
									[
										134529,
										134537
									],
									[
										134598,
										134606
									],
									[
										135267,
										135275
									],
									[
										135343,
										135351
									],
									[
										135966,
										135974
									],
									[
										136040,
										136048
									],
									[
										136661,
										136669
									],
									[
										136739,
										136747
									],
									[
										137385,
										137393
									],
									[
										137455,
										137463
									],
									[
										138080,
										138088
									],
									[
										138160,
										138168
									],
									[
										138845,
										138853
									],
									[
										138919,
										138927
									],
									[
										139574,
										139582
									],
									[
										139646,
										139654
									],
									[
										140302,
										140310
									],
									[
										140380,
										140388
									],
									[
										141074,
										141082
									],
									[
										141137,
										141145
									],
									[
										141216,
										141224
									],
									[
										141282,
										141290
									],
									[
										142047,
										142055
									],
									[
										142728,
										142736
									],
									[
										142789,
										142797
									],
									[
										143350,
										143358
									],
									[
										143411,
										143419
									],
									[
										144060,
										144068
									],
									[
										144765,
										144773
									],
									[
										144836,
										144844
									],
									[
										145509,
										145517
									],
									[
										145579,
										145587
									],
									[
										146212,
										146220
									],
									[
										146280,
										146288
									],
									[
										146739,
										146747
									],
									[
										147056,
										147064
									],
									[
										147320,
										147328
									],
									[
										147545,
										147553
									],
									[
										147732,
										147740
									],
									[
										147983,
										147991
									],
									[
										148103,
										148111
									],
									[
										148300,
										148308
									],
									[
										148512,
										148520
									],
									[
										148781,
										148789
									],
									[
										149091,
										149099
									],
									[
										149245,
										149253
									],
									[
										149464,
										149472
									],
									[
										149630,
										149638
									],
									[
										149846,
										149854
									],
									[
										150000,
										150008
									],
									[
										150205,
										150213
									],
									[
										150408,
										150416
									],
									[
										150584,
										150592
									],
									[
										150951,
										150959
									],
									[
										151357,
										151365
									],
									[
										151619,
										151627
									],
									[
										151998,
										152006
									],
									[
										152475,
										152483
									],
									[
										152692,
										152700
									],
									[
										153245,
										153253
									],
									[
										153528,
										153536
									],
									[
										154050,
										154058
									],
									[
										154144,
										154152
									],
									[
										154309,
										154317
									],
									[
										154552,
										154560
									],
									[
										154653,
										154661
									],
									[
										154821,
										154829
									],
									[
										154914,
										154922
									],
									[
										155010,
										155018
									],
									[
										155174,
										155182
									],
									[
										155619,
										155627
									],
									[
										155712,
										155720
									],
									[
										155847,
										155855
									],
									[
										156045,
										156053
									],
									[
										156279,
										156287
									],
									[
										156497,
										156505
									],
									[
										156676,
										156684
									],
									[
										156815,
										156823
									],
									[
										156970,
										156978
									],
									[
										157141,
										157149
									],
									[
										157307,
										157315
									],
									[
										157628,
										157636
									],
									[
										157820,
										157828
									],
									[
										157959,
										157967
									],
									[
										158114,
										158122
									],
									[
										158285,
										158293
									],
									[
										158451,
										158459
									],
									[
										158760,
										158768
									],
									[
										158915,
										158923
									],
									[
										159086,
										159094
									],
									[
										159252,
										159260
									],
									[
										159570,
										159578
									],
									[
										181803,
										181811
									],
									[
										182029,
										182037
									],
									[
										182339,
										182347
									],
									[
										182596,
										182604
									],
									[
										182782,
										182790
									],
									[
										183056,
										183064
									],
									[
										183405,
										183413
									],
									[
										183588,
										183596
									],
									[
										183828,
										183836
									],
									[
										184089,
										184097
									],
									[
										184161,
										184169
									],
									[
										184419,
										184427
									],
									[
										184667,
										184675
									],
									[
										184880,
										184888
									],
									[
										185147,
										185155
									],
									[
										185261,
										185269
									],
									[
										185485,
										185493
									],
									[
										185811,
										185819
									],
									[
										185880,
										185888
									],
									[
										186172,
										186180
									],
									[
										186426,
										186434
									],
									[
										186705,
										186713
									],
									[
										186996,
										187004
									],
									[
										187189,
										187197
									],
									[
										187375,
										187383
									],
									[
										187543,
										187551
									],
									[
										187866,
										187874
									],
									[
										187936,
										187944
									],
									[
										188230,
										188238
									],
									[
										188481,
										188489
									],
									[
										188714,
										188722
									],
									[
										189001,
										189009
									],
									[
										189182,
										189190
									],
									[
										189427,
										189435
									],
									[
										189544,
										189552
									],
									[
										189735,
										189743
									],
									[
										189940,
										189948
									],
									[
										190203,
										190211
									],
									[
										190450,
										190458
									],
									[
										190667,
										190675
									],
									[
										190921,
										190929
									],
									[
										190992,
										191000
									],
									[
										191229,
										191237
									],
									[
										191501,
										191509
									],
									[
										191732,
										191740
									],
									[
										192023,
										192031
									],
									[
										192173,
										192181
									],
									[
										192385,
										192393
									],
									[
										192544,
										192552
									],
									[
										192753,
										192761
									],
									[
										192903,
										192911
									],
									[
										193101,
										193109
									],
									[
										193297,
										193305
									],
									[
										193467,
										193475
									],
									[
										193827,
										193835
									],
									[
										194226,
										194234
									],
									[
										194479,
										194487
									],
									[
										194851,
										194859
									],
									[
										195312,
										195320
									],
									[
										195786,
										195794
									],
									[
										196001,
										196009
									],
									[
										196548,
										196556
									],
									[
										196829,
										196837
									],
									[
										197373,
										197381
									],
									[
										197466,
										197474
									],
									[
										197632,
										197640
									],
									[
										197852,
										197860
									],
									[
										197946,
										197954
									],
									[
										198111,
										198119
									],
									[
										198353,
										198361
									],
									[
										198454,
										198462
									],
									[
										198622,
										198630
									],
									[
										198715,
										198723
									],
									[
										198811,
										198819
									],
									[
										198975,
										198983
									],
									[
										199415,
										199423
									],
									[
										199506,
										199514
									],
									[
										199639,
										199647
									],
									[
										199830,
										199838
									],
									[
										200057,
										200065
									],
									[
										200268,
										200276
									],
									[
										200441,
										200449
									],
									[
										200574,
										200582
									],
									[
										200723,
										200731
									],
									[
										200888,
										200896
									],
									[
										201048,
										201056
									],
									[
										201362,
										201370
									],
									[
										201548,
										201556
									],
									[
										201681,
										201689
									],
									[
										201830,
										201838
									],
									[
										201995,
										202003
									],
									[
										202155,
										202163
									],
									[
										202457,
										202465
									],
									[
										202606,
										202614
									],
									[
										202771,
										202779
									],
									[
										202931,
										202939
									],
									[
										203242,
										203250
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								192548,
								192548
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 6,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 102050.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "ArduCopter/radio.cpp",
					"settings":
					{
						"buffer_size": 7688,
						"regions":
						{
						},
						"selection":
						[
							[
								2625,
								2625
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1650.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "libraries/AP_Motors/AP_MotorsMulticopter.cpp",
					"settings":
					{
						"buffer_size": 21993,
						"regions":
						{
						},
						"selection":
						[
							[
								5518,
								5527
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2908.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "libraries/AP_Motors/AP_MotorsMatrix.cpp",
					"settings":
					{
						"buffer_size": 15682,
						"regions":
						{
						},
						"selection":
						[
							[
								12669,
								12669
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8233.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "libraries/AP_Motors/AP_Motors_Class.cpp",
					"settings":
					{
						"buffer_size": 5806,
						"regions":
						{
						},
						"selection":
						[
							[
								3094,
								3094
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2400.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "libraries/AP_HAL_Empty/RCOutput.cpp",
					"settings":
					{
						"buffer_size": 452,
						"regions":
						{
						},
						"selection":
						[
							[
								97,
								97
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "libraries/AP_Motors/AP_Motors_Class.h",
					"settings":
					{
						"buffer_size": 9369,
						"regions":
						{
						},
						"selection":
						[
							[
								687,
								663
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 208.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 289.0,
	"status_bar_visible": true
}
